{"version":3,"mappings":"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CFA,QACAA,gBACEA,oBACAA,sBACFA,QACAA,gBACEA,oBACAA,qBACFA,QACAA,gBACEA,oBACAA,iGACAA,gBACEA,kCACFA,QACFA,QACAA,gBACEA,oBACAA,wEACFA,QACFA,QAEAA,iBAAiBA,qBAAQA,QACzBA,gCACEA,mBACEA,gBACEA,oBACAA,oBACFA,QACAA,gBACEA,oBACAA,0CACFA,QACAA,gBACEA,oBACAA,iCACFA,QACAA,iBACEA,qBACAA,wDACFA,QACAA,iBACEA,qBACAA,yDACFA,QACAA,iBACEA,qBACAA,6BACFA,QACAA,iBACEA,qBACAA,sDACFA,QACAA,iBACEA,qBACAA,kCACFA,QACAA,iBACEA,qBACAA,sCACFA,QACAA,iBACEA,qBACAA,qCACFA,QACAA,iBACEA,qBACAA,uBACFA,QACAA,iBACEA,qBACAA,0BACFA,QACAA,iBACEA,qBACAA,kCACAA,kBAA4DA,oBAAMA,QACpEA,QACAA,iBACEA,qBACAA,sCACFA,QACAA,iBACEA,qBACAA,iEACFA,QACAA,iBACEA,qBACAA,wCACFA,QACAA,iBACEA,qBACAA,uEACFA,QACAA,iBACEA,qBACAA,0CACFA,QACAA,iBACEA,qBACAA,uCACFA,QACFA,QACFA,QAEAA,kBAAiBA,sBAAQA,QACzBA,iCACEA,iBACEA,qBACAA,wDACAA,kBAA4DA,oBAAMA,QACpEA,QACAA,iBACEA,qBACAA,uCACFA,QACAA,iBACEA,qBACAA,iCACFA,QACAA,iBACEA,qBACAA,mCACFA,QACAA,iBACEA,qBACAA,qCACFA,QACFA,qDD1Oa+F,GAAb,WEGO,IAAMX,EAAb,MAAM,QACJyC,mBACE,OAAOJ,YACL,0PAeAA,iBACA,sDAnBO1B,8BAAeI,ipDCV5BnG,gBAAsBA,kBAAMA,QAE5BA,eACEA,2TAGFA,QAEAA,iBACEA,gBACEA,gBACAA,6BACFA,QACAA,iBACEA,aACEA,6BACAA,gBACEA,qDACFA,QACAA,+IAEFA,QACAA,cACEA,uFACAA,iBAAMA,kCAAqBA,QAC3BA,iIAEFA,QACFA,QACFA,QACAA,i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A,oBAAMA,QACxDA,QACFA,QACFA,QACAA,oBACEA,sBAAsDA,sBAAQA,QAC9DA,oBACEA,+BACFA,QACAA,sBAAuDA,2BAAUA,QACjEA,oBACEA,+BACFA,QACFA,QACAA,oBACEA,sBAAwDA,4BAAcA,QACtEA,oBACEA,sBACFA,QACAA,sBAAuDA,4BAAcA,QACrEA,oBACEA,sBACFA,QACFA,QACAA,oBACEA,sBAAuBA,uBAASA,QAChCA,yBACFA,QACFA,QACAA,oBACEA,kBAA0CA,sBAAQA,QAClDA,oBACEA,sBAAoDA,oBAAMA,QAC1DA,oBACEA,sBACFA,QACAA,sBAAmDA,mBAAKA,QACxDA,oBACEA,sBACFA,QACFA,QACAA,oBACEA,sBAAwDA,6BAAeA,QACvEA,oBACEA,sBACFA,QACFA,QACAA,oBACEA,sBAA0DA,gCAAkBA,QAC5EA,oBACEA,sBACFA,QACAA,sBAAkDA,kBAAIA,QACtDA,oBACEA,sBACFA,QACFA,QAEAA,oBACEA,sBAAuDA,2BAAaA,QACpEA,oBACEA,sBACFA,QACFA,QAEAA,oBACEA,sBAA4DA,6BAAeA,QAC3EA,oBACEA,sBACFA,QACFA,QAEAA,oBACEA,sBAA2DA,6BAAYA,QACvEA,oBACEA,sBACFA,QACAA,sBAA2DA,6BAAYA,QACvEA,oBACEA,sBACFA,QACAA,sBAAyDA,8BAAgBA,QACzEA,oBACEA,sBACFA,QACFA,QAEAA,oBACEA,sBAAyDA,yBAAWA,QACpEA,oBACEA,sBACFA,QACAA,sBAAuDA,mCAAqBA,QAC5EA,oBACEA,sBACFA,QACFA,QAEAA,oBACEA,sBAA8DA,8BAAgBA,QAC9EA,oBACEA,sBACFA,QACAA,sBAA2DA,gCAAkBA,QAC7EA,oBACEA,sBACFA,QACFA,QAEAA,oBACEA,sBAAqDA,2BAAaA,QAClEA,oBACEA,sBACFA,QACAA,sBACEA,mCACFA,QACAA,oBACEA,sBACFA,QACFA,QAEAA,oBACEA,sBAAsDA,2BAAaA,QACnEA,oBACEA,sBACFA,QACAA,sBAAyDA,iCAAgBA,QACzEA,oBACEA,sBACFA,QACFA,QAEAA,oBACE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2EA,QAC/EA,eAAIA,2FAA2EA,QAC/EA,eAAIA,2FAA8EA,QACpFA,QAEAA,iBAAiBA,0DAA6CA,QAC9DA,eACEA,eACEA,mHAEFA,QACAA,eACEA,6JAEFA,QACFA,QAEAA,iBAAiBA,2CAA8BA,QAC/CA,iBACEA,eACEA,gBACEA,iCACFA,QACFA,QACAA,eACEA,gBACEA,iCACFA,QACFA,QACAA,eACEA,gBACEA,+BACFA,QACFA,QAEAA,eACEA,gBAA2EA,uBAAUA,QACvFA,QACAA,eACEA,gBACEA,6BACFA,QACFA,QACAA,eACEA,gBAAkEA,oBAAOA,QAC3EA,QACFA,QAEAA,mBACEA,kBACEA,kBACAA,8BACFA,QACAA,mBACEA,cACEA,gCACAA,iBAIEA,mCACFA,QACAA,4CACAA,eACAA,6CACAA,iBAA0DA,wBAAWA,QACrEA,gCACAA,iBAIEA,8BACFA,QACAA,gBACAA,eACFA,QACAA,cACEA,2BACAA,gBACEA,+BACFA,QACAA,kZAKFA,QACAA,cACEA,4JAEAA,iBACEA,uCACFA,QACAA,wBACFA,QACFA,QACFA,QAEAA,iBAAiBA,0BAAaA,QAC9BA,cACEA,iJAEFA,QACAA,iBAAiBA,2BAAcA,QAC/BA,cACEA,0DACAA,gBACEA,iCACFA,QACFA,QACAA,gCACEA,oBACEA,mBACEA,mBACEA,qBAA2CA,yBAAYA,QACvDA,qBACAA,mBAA8BA,+CAAkCA,QAClEA,QACFA,QACFA,QACFA,QAEAA,iBAAiBA,wBAAWA,QAC5BA,cACEA,0DACAA,gBACEA,iCACFA,QACFA,QACAA,gCACEA,qBACEA,oBACEA,sBAA2DA,kBAAIA,QAC/DA,oBACEA,sBACAA,oBAA8BA,wCAA0BA,QAC1DA,QACAA,sBAA8DA,qBAAOA,QACrEA,oBACEA,sBACAA,oBAA8BA,2CAA6BA,QAC7DA,QACFA,QACFA,QACFA,QAEAA,kBAAiBA,uBAASA,QAC1BA,eACEA,oKAEAA,gBACAA,yOAGAA,uBACEA,qBACFA,QACAA,kBACAA,gBACAA,+HAEFA,QAEAA,kBAAiBA,iDAAmCA,QACpDA,eACEA,kNAEFA,QAEAA,iCACEA,mBACEA,mBAAqBA,4BAAcA,QACnCA,mBAAqBA,oBAAMA,QAC3BA,mBAAqBA,sBAAQA,QAC7BA,mBAAqBA,4BAAcA,QACnCA,mBAAqBA,0BAAYA,QACjCA,mBAAqBA,wBAAUA,QAC/BA,mBAAqBA,wBAAUA,QAC/BA,mBAAqBA,yBAAQA,QAC/BA,QACFA,QAEAA,kBAAiBA,iDAAmCA,QACpDA,eACEA,0PAGAA,gBACAA,2GACFA,QACAA,gBACEA,gBAAIA,yEAA2DA,QAC/DA,gBAAIA,2EAA0DA,QAC9DA,gBACEA,0GACFA,QACFA,QACAA,eACEA,yDACAA,kBAAMA,oCAAsBA,QAC5BA,2BACFA,QAEAA,iCACEA,oBACEA,sBAAmDA,4BAAcA,QACjEA,oBACEA,sBACFA,QACAA,sBAAsDA,sBAAQA,QAC9DA,oBACEA,sBAMFA,QACFA,QACAA,oBACEA,sBAAmDA,0BAAYA,QAC/DA,oBACEA,sBAMFA,QACAA,sBAAsDA,wBAAUA,QAChEA,oBACEA,sBACFA,QACFA,QACFA,QAEAA,kBAAiBA,oCAAsBA,QACvCA,eACEA,kYAIFA,QACAA,iCACEA,oBACEA,oBACEA,kDACAA,gBACAA,oBACEA,oBACEA,sBAGEA,gCAAS1H,aAHX0H,QAIAA,qBACFA,QACFA,QACAA,gBACAA,oBACEA,oBACEA,sBAGEA,gCAAS1H,aAHX0H,QAIAA,qBACFA,QACFA,QACFA,QACFA,QACAA,oBACEA,oBACEA,iDACAA,gBACAA,oBACEA,oBACEA,sBACAA,oBACEA,uBACEA,qBACFA,QACFA,QACFA,QACFA,QACFA,QACFA,QACFA,mEDpSa+F,GAAb,6BE0IU/F,oBACAA,wCADOA,+BAAsCA,4BAC7CA,2BC5IH,IAAMqiB,GAAb,MAAM,QAJNnc,cAKExL,eAAY,CACV,WACA,UACA,UACA,0BACA,YACA,cACA,cACA,UACA,WACA,aACA,eACA,SACA,SACA,UACA,aACA,SACA,WACA,WACA,gBACA,UACA,YACA,QACA,kBACA,SACA,aACA,cACA,iBACA,WACA,gBACA,QACA,WACA,cACA,WACA,aACA,WACA,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e,iSCAf,QAAe,61MCAf,QAAe,swBCAf,QAAe,msGCAf,QAAe,mWCAf,QAAe,s/KCAf,QAAe,qZCAf,QAAe,gwDCAf,QAAe,0oPCAf,QAAe,8RCAf,QAAe,08FCAf,QAAe,kSCAf,QAAe,+5TCAf,QAAe,qSCAf,QAAe,qpfCAf,QAAe,63WCAf,QAAe,o+ICAf,QAAe,+jCCAf,QAAe,wSCAf,QAAe,60ECAf,QAAe,yPCAf,QAAe,8+HCAf,QAAe,moICAf,QAAe,whECAf,QAAe,2sHCAf,QAAe,iTCAf,QAAe,0kVCAf,QAAe,mWCAf,QAAe,6odCAf,QAAe,25BCAf,QAAe,ixKCAf,QAAe,09CCAf,QAAe,s+PCAf,QAAe,8vBCAf,QAAe,qmFCAf,QAAe,+RCAf,QAAe,27KCAf,QAAe,2lDCAf,QAAe,guHCAf,QAAe,+jBCAf,QAAe,k7OCAf,QAAe,0oDCAf,QAAe,o4ICAf,QAAe,4RCAf,QAAe,+mMCAf,QAAe,wSCAf,QAAe,k/DCAf,QAAe,gTCAf,QAAe,23CCAf,QAAe,sSCAf,QAAe,8yDCAf,QAAe,mTCAf,QAAe,o5SCAf,QAAe,23CCAf,QAAe,qzNCAf,QAAe,sXCAf,OACA,gCACA,8BACA,4BACA,0BACA,uDACA,mDACA,8DACA,6DACA,qFACA,6EACA,2EACA,+DACA,6DACA,2DACA,2DACA,wDACA,sDACA,sDACA,oDACA,oDACA,kDACA,gEACA,8DACA,wEACA,sEACA,mEACA,iEACA,kEACA,+DACA,uEACA,qEACA,oDACA,kDACA,6DACA,2DACA,iDACA,+CACA,oEACA,mEACA,kEACA,6DACA,2DACA,6DACA,2DACA,+DACA,6DACA,mDACA,qEACA,mEACA,iEACA,6DACA,2EACA,yEACA,wFACA,sFACA,6DACA,gFACA,8EACA,2DACA,yDACA,yFACA,yFACA,uFACA,qFACA,2FACA,yFACA,0DACA,yDACA,wEACA,uEACA,2EACA,yEACA,uFACA,qFACA,yDACA,uDACA,iEACA,+DACA,yEACA,uEACA,+DACA,6DACA,6EACA,2EACA,yFACA,sFACA,mDACA,iDACA,sCACA,oCACA,kCACA,gCACA,6DACA,yDACA,oEACA,mEACA,2FACA,mFACA,iFACA,qEACA,mEACA,iEACA,iEACA,8DACA,4DACA,4DACA,0DACA,0DACA,wDACA,sEACA,oEACA,8EACA,4EACA,yEACA,uEACA,wEACA,qEACA,6EACA,2EACA,0DACA,wDACA,mEACA,iEACA,uDACA,qDACA,0EACA,yEACA,wEACA,mEACA,iEACA,mEACA,iEACA,qEACA,mEACA,yDACA,2EACA,yEACA,uEACA,mEACA,iFACA,+EACA,8FACA,4FACA,mEACA,sFACA,oFACA,iEACA,+DACA,+FACA,+FACA,6FACA,2FACA,iGACA,+FACA,gEACA,+DACA,8EACA,6EACA,iFACA,+EACA,6FACA,2FACA,+DACA,6DACA,uEACA,qEACA,+EACA,6EACA,qEACA,mEACA,mFACA,iFACA,+FACA,4FACA,yDACA,wDAIA,cACA,WACA,YAEA,cACA,cACA,8CACA,gCACA0B,EAEA,YAEAzH,kBACA,uBAEAA,YACAkjB,YACAljB","names":["Prism","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest","typescript","greedy","builtin","push","parameter","typeInside","decorator","at","function","generic","ts","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","__id","defineProperty","value","clone","visited","id","key","hasOwnProperty","deepClone","forEach","v","i","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","plain","plaintext","text","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","hooks","run","elements","apply","querySelectorAll","highlightElement","language","nodeName","code","textContent","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","insertHighlightedCode","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","add","name","callbacks","length","matchedStr","pos","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","RegExp","source","currentNode","reach","str","removeCount","matchPattern","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","readyState","defer","highlightAutomaticallyCallback","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","markup","prolog","doctype","string","punctuation","cdata","namespace","entity","title","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","css","important","addInlined","addAttribute","clike","number","javascript","regex","constant","hashbang","interpolation","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","py","rb","ps1","psm1","sh","bat","h","tex","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","appendChild","createElement","getAttribute","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","g","FAILURE_MESSAGE","statusText","send","fileHighlight","logged","console","warn","arguments","trim","C","t","factory","U","constructor","selectors","u","n","ngOnInit","files","split","r","d","substring","lastIndexOf","T","basePath","concat","sourceCodeService","sourceCode","w","indexOf","E","prettyName","path","showOrHide","showCode","Z","getStashUrl","STASH_URL","m","highlighted_scss","A","y","D","toggle","H","ze","infoAlert","alerts","info","successAlert","success","dangerAlert","danger","warningAlert","warning","N","O","en","days","daysShort","months","monthsShort","de","fr","it","oe","f","super","getWeekdayLabel","languageService","currentLanguage","getMonthShortName","getMonthFullName","getDayAriaLabel","month","day","year","me","parseInt","format","J","Ae","fromModel","toModel","_value","onChange","onTouched","_id","externalId","selectToday","calendar","getToday","adapter","datepicker","navigateTo","registerOnChange","registerOnTouched","setDisabledState","disabled","button","writeValue","provide","useExisting","multi","useClass","decls","CHM","dismiss","sn","size","backdrop","keyboard","modal","modalService","largeDialogOptions","smallDialogOptions","result","then","closeResult","getDismissReason","saveIssue","closeYear","rn","Date","toISOString","ln","un","align","gn","onclick","itemClicked","emit","routerLink","router","navigate","stopPropagation","pn","print","reload","location","noop","hn","bn","fn","yn","toggleNavigation","body","navigationToggleText","selectLanguage","selectedLanguage","toggleLogin","loggedIn","Un","qn","Ie","shortNameDe","Cn","Fn","pipe","Le","countries","filter","startsWith","includes","tokenMatch","formatItem","a","Bn","Me","vorname","company","email","phone","address","plz","ort","Mn","addressData","sortBy","getColumnClassNames","sortedBy","sortedAscending","sortAddressData","sort","reverse","setPage","search","searchTerm","page","pageSize","Math","min","pagedItems","selected","selectAll","showModal","selectedForDetail","isSelected","toggleSelection","toggleSelectAll","focusNextCheckbox","getElementById","focus","showAlert","processSelected","Nn","Pn","period","scheduler","asyncScheduler","timer","Vn","longRunningAction","progress","Ne","Pe","longRunningActionWithETA","progressWithETA","I","progressETA","startAsyncJob","jobRunning","job2Running","showLoadingOverlay","isLoading","showSavingOverlay","isSaving","Jn","We","inputId","nativeElement","resetStatus","setDisabled","addClass","r2","ngOnChanges","removeClass","$","invalid","readOnly","ok","Xn","subject","demoStatus","switchStatus","et","nt","Infinity","EMPTY","operate","subscriber","innerSub","soFar","subscribeForRepeat","syncUnsub","subscribe","OperatorSubscriber","undefined","unsubscribe","complete","defaultThrottleConfig","leading","trailing","durationSelector","_a","_b","hasValue","sendValue","throttled","isComplete","endThrottling","cleanupThrottling","startThrottle","innerFrom","closed","x","any","idx","identity","isNill","isMac","navigator","userAgent","modifiers","shift","ctrl","alt","cmd","command","meta","option","ctl","control","_SPECIAL_CASES","plus","_MAP","_KEYCODE_MAP","_SHIFT_MAP","_INVERTED_SHIFT_MAP","new_obj","prop","invert","guid","KeyboardShortcutsService","_shortcuts","_sequences","throttleTime","_pressed","Subject","pressed$","asObservable","_shortcutsSub","BehaviorSubject","shortcuts$","shortcuts","_ignored","subscriptions","isAllowed","shortcut","target","event","allowIn","first","second","item","difference","mapEvent","isSequence","assign","predicates","preds","args","len","allPass","reduce","acc","priority","keydown$","fromEvent","ignore$","defaultPrevented","switchMap","clicks$","tap","preventDefault","repeat","capture","keyup$","keydownCombo$","isFunction","throttle","takeUntil","catchError","error","errorOrErrorFactory","errorFactory","init","Observable","throwError","timer$","resetCounter$","TIMEOUT_SEQUENCE","keydownSequence$","sequences","scan","arg","currentLength","events","characters","characterFromEvent","sequence","seque","some","partialMatch","fullMatch","isFullMatch","modifiersOn","guess","curr","propFn","object","maxArrayProp","of","getKeys","keys","isUpper","toUpperCase","isNonAlpha","inShiftMap","shiftKey","hasModifiers","modifier","char","_characterFromEvent","which","keyCode","String","fromCharCode","ngOnDestroy","sub","commands","parseCommand","remove","ids","select","eventKeys","find","eventKey","mod","max","ɵfac","ɵngcc0","DOCUMENT","ɵprov","ɵɵdefineInjectable","ɵɵinject","providedIn","KeyboardShortcutsComponent","clearIds","_disabled","ngAfterViewInit","changes","currentValue","ɵcmp","inputs","features","vars","template","rf","ctx","encapsulation","KeyboardShortcutsHelpService","Boolean","label","description","KeyboardShortcutsSelectService","keyboardService","Map","KeyboardShortcutsModule","forRoot","ngModule","providers","ɵmod","ɵinj","imports","CommonModule","closest","el","parentNode","nodeType","flat","depth","flattend","floor","flatMap","Ht","hasOpenModals","templateRef","Xe","Kt","Rt","Vt","Gt","$t","jt","Xt","Qt","default","Yt","redirectTo","pathMatch","component","ei","l","Gn","Pt","c"],"sources":["./node_modules/prismjs/components/prism-scss.js","./node_modules/prismjs/components/prism-typescript.js","./node_modules/prismjs/prism.js","./src/app/styleguide/source-code.service.ts","./src/app/styleguide/welcome/welcome.component.ts","./src/app/styleguide/welcome/welcome.component.html","./src/app/styleguide/demo-utils/code-example/code-example.component.html","./src/app/styleguide/demo-utils/code-example/code-example.component.ts","./src/app/styleguide/basics/typography/typography.component.ts","./src/app/styleguide/basics/typography/typography.component.html","./src/app/styleguide/basics/icons/icons.component.ts","./src/app/styleguide/basics/icons/icons.component.html","./src/app/styleguide/basics/colors/colors.component.ts","./src/app/styleguide/basics/colors/colors.component.html","./src/app/styleguide/basics/logo/logo.component.ts","./src/app/styleguide/basics/logo/logo.component.html","./src/app/styleguide/ui-elements/links/links.component.ts","./src/app/styleguide/ui-elements/links/links.component.html","./src/app/styleguide/ui-elements/tooltips/tooltips.component.html","./src/app/styleguide/ui-elements/tooltips/tooltips.component.ts","./src/app/styleguide/ui-elements/buttons/buttons.component.ts","./src/app/styleguide/ui-elements/buttons/buttons.component.html","./src/app/styleguide/ui-elements/alerts/alert-buttons.component.ts","./src/app/styleguide/ui-elements/alerts/alerts.component.html","./src/app/styleguide/ui-elements/alerts/alerts.component.ts","./src/app/bedag-components/datepicker/datepicker.i18n.ts","./src/app/bedag-components/utils/utils.ts","./src/app/bedag-components/datepicker/swiss-date-parser-formatter.ts","./src/app/bedag-components/datepicker/iso-date-adapter.ts","./src/app/bedag-components/datepicker/datepicker.component.html","./src/app/bedag-components/datepicker/datepicker.component.ts","./src/app/styleguide/ui-elements/modal-dialog/modal-dialog.component.html","./src/app/styleguide/ui-elements/modal-dialog/modal-dialog.component.ts","./src/app/styleguide/ui-elements/forms/datepicker/datepicker-demo.component.ts","./src/app/styleguide/ui-elements/forms/datepicker/datepicker-demo.component.html","./src/app/bedag-components/functionbar/functionbar/functionbar.component.ts","./src/app/bedag-components/functionbar/functionbar/functionbar.component.html","./src/app/bedag-components/functionbar/functionbar-list.ts","./src/app/bedag-components/functionbar/functionbar-item/functionbar-item.component.ts","./src/app/styleguide/layout/functionbar/functionbar-demo.component.ts","./src/app/styleguide/layout/functionbar/functionbar-demo.component.html","./src/app/styleguide/layout/grid/grid.component.ts","./src/app/styleguide/layout/grid/grid.component.html","./src/app/styleguide/layout/actionbar/actionbar-demo.component.ts","./src/app/styleguide/layout/actionbar/actionbar-demo.component.html","./src/app/styleguide/layout/layout.component.ts","./src/app/styleguide/layout/layout.component.html","./src/app/styleguide/layout/header/header-demo.component.html","./src/app/styleguide/layout/header/header-demo.component.ts","./src/app/styleguide/layout/navigation/navigation-demo.component.ts","./src/app/styleguide/layout/navigation/navigation-demo.component.html","./src/app/styleguide/layout/breadcrumbs/breadcrumbs.component.ts","./src/app/styleguide/layout/breadcrumbs/breadcrumbs.component.html","./src/app/styleguide/ui-elements/forms/autocompletion/data.ts","./src/app/styleguide/ui-elements/forms/autocompletion/autocompletion-demo.component.html","./src/app/styleguide/ui-elements/forms/autocompletion/autocompletion-demo.component.ts","./src/app/styleguide/ui-elements/tabs/tabs.component.html","./src/app/styleguide/ui-elements/tabs/tabs.component.ts","./src/app/styleguide/ui-elements/datatables/data.ts","./src/app/styleguide/ui-elements/datatables/datatables.component.html","./src/app/styleguide/ui-elements/datatables/datatables.component.ts","./src/app/styleguide/ui-elements/badges/badges.component.ts","./src/app/styleguide/ui-elements/badges/badges.component.html","./src/app/styleguide/ui-elements/dividers/dividers.component.ts","./src/app/styleguide/ui-elements/dividers/dividers.component.html","./node_modules/rxjs/dist/esm5/internal/observable/interval.js","./src/app/styleguide/ui-elements/progress-indicators/progress-indicators.component.html","./src/app/styleguide/ui-elements/progress-indicators/progress-indicators.component.ts","./src/app/styleguide/demo-utils/status/demo-status.directive.ts","./src/app/styleguide/ui-elements/forms/small-form-example/small-form-example.component.ts","./src/app/styleguide/ui-elements/forms/small-form-example/small-form-example.component.html","./src/app/styleguide/ui-elements/forms/large-form-example/large-form-example.component.ts","./src/app/styleguide/ui-elements/forms/large-form-example/large-form-example.component.html","./src/app/styleguide/usability/mauswege/mauswege.component.ts","./src/app/styleguide/usability/mauswege/mauswege.component.html","./node_modules/rxjs/dist/esm5/internal/operators/repeat.js","./node_modules/rxjs/dist/esm5/internal/operators/throttle.js","./node_modules/ng-keyboard-shortcuts/__ivy_ngcc__/fesm2015/ng-keyboard-shortcuts.js","./node_modules/rxjs/dist/esm5/internal/observable/throwError.js","./src/app/styleguide/usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.html","./src/app/styleguide/usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.ts","./src/app/styleguide/usability/datenstruktur/datenstruktur.component.ts","./src/app/styleguide/usability/datenstruktur/datenstruktur.component.html","./src/app/styleguide/usability/mentale-modelle/mentale-modelle.component.ts","./src/app/styleguide/usability/mentale-modelle/mentale-modelle.component.html","./src/app/styleguide/ui-elements/overflow-menu/overflow-menu.component.ts","./src/app/styleguide/ui-elements/overflow-menu/overflow-menu.component.html","./src/app/styleguide/ui-elements/forms/forms.component.ts","./src/app/styleguide/ui-elements/forms/forms.component.html","./src/app/styleguide/ui-elements/forms/select-dropdowns/select-dropdowns.component.html","./src/app/styleguide/ui-elements/forms/select-dropdowns/select-dropdowns.component.ts","./src/app/styleguide/ui-elements/dropdown-menu/dropdown-menu.component.ts","./src/app/styleguide/ui-elements/dropdown-menu/dropdown-menu.component.html","./src/app/styleguide/webpack-source-code.service.ts","./src/app/styleguide/styleguide.module.ts","webpack:///./src/app/app-nav.component.html?ca9e","webpack:///./src/app/app-nav.component.ts?1d49","webpack:///./src/app/app.component.html?5735","webpack:///./src/app/app.component.ts?1198","webpack:///./src/app/bedag-components/alert/alert-list.component.ts?8515","webpack:///./src/app/bedag-components/alert/alert.component.ts?0337","webpack:///./src/app/bedag-components/datepicker/datepicker.component.html?63e3","webpack:///./src/app/bedag-components/datepicker/datepicker.component.ts?58a2","webpack:///./src/app/bedag-components/functionbar/functionbar-item/functionbar-item.component.ts?5fa0","webpack:///./src/app/bedag-components/functionbar/functionbar/functionbar.component.html?662a","webpack:///./src/app/bedag-components/functionbar/functionbar/functionbar.component.ts?ed7d","webpack:///./src/app/bedag-components/layout/custom-max-width-component.ts?88f3","webpack:///./src/app/bedag-components/navigation/nav-item.component.html?3051","webpack:///./src/app/bedag-components/navigation/nav-item.component.ts?4c01","webpack:///./src/app/bedag-components/navigation/nav-menu.component.ts?cc96","webpack:///./src/app/styleguide/basics/colors/colors.component.html?701f","webpack:///./src/app/styleguide/basics/colors/colors.component.ts?12ec","webpack:///./src/app/styleguide/basics/icons/icons.component.html?3f76","webpack:///./src/app/styleguide/basics/icons/icons.component.ts?f07b","webpack:///./src/app/styleguide/basics/logo/logo.component.html?ad65","webpack:///./src/app/styleguide/basics/logo/logo.component.ts?2ad6","webpack:///./src/app/styleguide/basics/typography/typography.component.html?de8e","webpack:///./src/app/styleguide/basics/typography/typography.component.ts?4a25","webpack:///./src/app/styleguide/demo-utils/code-example/code-example.component.html?c879","webpack:///./src/app/styleguide/demo-utils/code-example/code-example.component.ts?2f4a","webpack:///./src/app/styleguide/layout/actionbar/actionbar-demo.component.html?1d6e","webpack:///./src/app/styleguide/layout/actionbar/actionbar-demo.component.ts?b4c0","webpack:///./src/app/styleguide/layout/breadcrumbs/breadcrumbs.component.html?82b4","webpack:///./src/app/styleguide/layout/breadcrumbs/breadcrumbs.component.ts?faea","webpack:///./src/app/styleguide/layout/functionbar/functionbar-demo.component.html?2797","webpack:///./src/app/styleguide/layout/functionbar/functionbar-demo.component.ts?ab8e","webpack:///./src/app/styleguide/layout/grid/grid.component.html?f180","webpack:///./src/app/styleguide/layout/grid/grid.component.ts?9574","webpack:///./src/app/styleguide/layout/header/header-demo.component.html?c234","webpack:///./src/app/styleguide/layout/header/header-demo.component.ts?d328","webpack:///./src/app/styleguide/layout/layout.component.html?27f7","webpack:///./src/app/styleguide/layout/layout.component.ts?65cc","webpack:///./src/app/styleguide/layout/navigation/navigation-demo.component.html?2365","webpack:///./src/app/styleguide/layout/navigation/navigation-demo.component.ts?afe4","webpack:///./src/app/styleguide/ui-elements/alerts/alert-buttons.component.ts?881d","webpack:///./src/app/styleguide/ui-elements/alerts/alerts.component.html?a1f6","webpack:///./src/app/styleguide/ui-elements/alerts/alerts.component.ts?f111","webpack:///./src/app/styleguide/ui-elements/badges/badges.component.html?afda","webpack:///./src/app/styleguide/ui-elements/badges/badges.component.ts?68b6","webpack:///./src/app/styleguide/ui-elements/buttons/buttons.component.html?1cd4","webpack:///./src/app/styleguide/ui-elements/buttons/buttons.component.ts?5631","webpack:///./src/app/styleguide/ui-elements/datatables/data.ts?5fc0","webpack:///./src/app/styleguide/ui-elements/datatables/datatables.component.html?bcc8","webpack:///./src/app/styleguide/ui-elements/datatables/datatables.component.ts?b3a7","webpack:///./src/app/styleguide/ui-elements/dividers/dividers.component.html?23d2","webpack:///./src/app/styleguide/ui-elements/dividers/dividers.component.ts?4a1c","webpack:///./src/app/styleguide/ui-elements/dropdown-menu/dropdown-menu.component.html?ccc5","webpack:///./src/app/styleguide/ui-elements/dropdown-menu/dropdown-menu.component.ts?db29","webpack:///./src/app/styleguide/ui-elements/forms/autocompletion/autocompletion-demo.component.html?514e","webpack:///./src/app/styleguide/ui-elements/forms/autocompletion/autocompletion-demo.component.ts?0e99","webpack:///./src/app/styleguide/ui-elements/forms/autocompletion/data.ts?578f","webpack:///./src/app/styleguide/ui-elements/forms/datepicker/datepicker-demo.component.html?63ba","webpack:///./src/app/styleguide/ui-elements/forms/datepicker/datepicker-demo.component.ts?f894","webpack:///./src/app/styleguide/ui-elements/forms/forms.component.html?0646","webpack:///./src/app/styleguide/ui-elements/forms/forms.component.ts?887d","webpack:///./src/app/styleguide/ui-elements/forms/large-form-example/large-form-example.component.html?8936","webpack:///./src/app/styleguide/ui-elements/forms/large-form-example/large-form-example.component.ts?2533","webpack:///./src/app/styleguide/ui-elements/forms/select-dropdowns/select-dropdowns.component.html?9fbb","webpack:///./src/app/styleguide/ui-elements/forms/select-dropdowns/select-dropdowns.component.ts?b66c","webpack:///./src/app/styleguide/ui-elements/forms/small-form-example/small-form-example.component.html?6922","webpack:///./src/app/styleguide/ui-elements/forms/small-form-example/small-form-example.component.ts?831c","webpack:///./src/app/styleguide/ui-elements/links/links.component.html?3be1","webpack:///./src/app/styleguide/ui-elements/links/links.component.ts?9279","webpack:///./src/app/styleguide/ui-elements/modal-dialog/modal-dialog.component.html?5ddb","webpack:///./src/app/styleguide/ui-elements/modal-dialog/modal-dialog.component.ts?d821","webpack:///./src/app/styleguide/ui-elements/overflow-menu/overflow-menu.component.html?0f37","webpack:///./src/app/styleguide/ui-elements/overflow-menu/overflow-menu.component.ts?7bdc","webpack:///./src/app/styleguide/ui-elements/progress-indicators/progress-indicators.component.html?dbea","webpack:///./src/app/styleguide/ui-elements/progress-indicators/progress-indicators.component.ts?b39f","webpack:///./src/app/styleguide/ui-elements/tabs/tabs.component.html?9e4a","webpack:///./src/app/styleguide/ui-elements/tabs/tabs.component.ts?e864","webpack:///./src/app/styleguide/ui-elements/tooltips/tooltips.component.html?1c03","webpack:///./src/app/styleguide/ui-elements/tooltips/tooltips.component.ts?19d1","webpack:///./src/app/styleguide/usability/datenstruktur/datenstruktur.component.html?dca3","webpack:///./src/app/styleguide/usability/datenstruktur/datenstruktur.component.ts?c1ad","webpack:///./src/app/styleguide/usability/mauswege/mauswege.component.html?aa19","webpack:///./src/app/styleguide/usability/mauswege/mauswege.component.ts?d906","webpack:///./src/app/styleguide/usability/mentale-modelle/mentale-modelle.component.html?d4c0","webpack:///./src/app/styleguide/usability/mentale-modelle/mentale-modelle.component.ts?6794","webpack:///./src/app/styleguide/usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.html?4d60","webpack:///./src/app/styleguide/usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.ts?32ce","webpack:///./src/app/styleguide/welcome/welcome.component.html?2029","webpack:///./src/app/styleguide/welcome/welcome.component.ts?06a1","|/.(component|data).(html|ts)$/"],"sourcesContent":["Prism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)?url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/m,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-\\w]+/,\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t},\n\t'property': {\n\t\tpattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n\t\tinside: {\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i,\n\t\t{\n\t\t\tpattern: /( )(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'module-modifier': {\n\t\tpattern: /\\b(?:as|with|show|hide)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'placeholder': {\n\t\tpattern: /%[-\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t},\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n","(function (Prism) {\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|as|declare|implements|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)(?!\\s*[^\\s_${}*a-zA-Z\\xA0-\\uFFFF])/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n\n}(Prism));\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\tif (element) {\n\t\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class SourceCodeService {\n  abstract sourceCode(filename: string): string;\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './welcome.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class WelcomeComponent {\n  // eslint-disable-next-line\n  version: { [index: string]: string } = require('../../../../package.json').dependencies;\n}\n","<h1 class=\"mt-3 mb-4\">Bedag Angular Styleguide</h1>\n\n<p class=\"lead\">\n  Der Styleguide bildet die Grundlage für die Frontend-Entwicklung neuer Webapplikationen der Bedag.\n  Er unterstützt dich mit vielen Beispielen und Hilfestellungen bei der Entwicklung der User\n  Interfaces.\n</p>\n\n<p>\n  Alle Elemente bauen auf Bootstrap und Angular auf. Die Elemente im Styleguide können direkt durch\n  Kopieren der Code Samples eingesetzt werden. Alles was von Bootstrap abweicht, wird automatisch\n  überschrieben.\n</p>\n\n<h2 class=\"mt-5\">Versionen</h2>\n<p>Der Styleguide basiert auf folgenden Versionen:</p>\n<div class=\"container-fluid\">\n  <dl class=\"row\">\n    <dt class=\"col-2\">Angular</dt>\n    <dd class=\"col-10\">\n      <strong>{{ version['@angular/core'] }}</strong>\n    </dd>\n    <dt class=\"col-2\">Bootstrap</dt>\n    <dd class=\"col-10\">\n      <strong>{{ version['bootstrap'] }}</strong>\n    </dd>\n    <dt class=\"col-2\">NG Bootstrap</dt>\n    <dd class=\"col-10\">\n      <strong>{{ version['@ng-bootstrap/ng-bootstrap'] }}</strong>\n    </dd>\n  </dl>\n</div>\n<p>\n  Diese Libraries werden im ganzen Styleguide eingesetzt, andere wie z.B.\n  <code>ng-select</code>\n  jeweils nur für ein einzelnes Element.\n</p>\n\n<h2 class=\"mt-5\">Getting Started</h2>\n\n<p>\n  Um die Code-Beispiele mit Copy-Paste einsetzen zu können, braucht es nur einige CSS-Dateien und\n  ein paar kleine Typescript-Komponenten.\n  <br />\n  Im Confluence befindet sich eine\n  <a\n    class=\"external\"\n    href=\"https://confluence.se.bedag.ch/display/ENGINEERING/Anleitungen+Bedag+Angular+Styleguide\"\n    target=\"_blank\">\n    Anleitung für den Einbau in bestehende oder neue Projekte\n  </a>\n  .\n</p>\n\n<h2 class=\"mt-5\">Was bietet der Styleguide?</h2>\n\n<ul>\n  <li>\n    Ein\n    <a class=\"highlight\" routerLink=\"/styleguide/layout\">Layout-Gerüst</a>\n    für Responsive Web-Applikationen, die sowohl auf dem Desktop als auch auf dem Tablet oder\n    Smartphone gut bedienbar sind.\n  </li>\n  <li>Vorlagen und Code-Beispiele, die die Arbeit am Frontend erleichtern.</li>\n  <li>\n    User Experience Design Guidelines, mit denen die Benutzerführung optimiert und für jeden Kontext\n    das richtige GUI-Element identifiziert werden kann.\n  </li>\n</ul>\n<p>\n  Unsere Applikationen werden dank benutzerfreundlicher GUIs qualitativ hochwertiger und für die\n  Kunden intuitiver und effizienter bedienbar.\n  <br />\n</p>\n\n<h2 class=\"mt-5\">Was bietet der Styleguide (noch) nicht?</h2>\n\n<ul>\n  <li>\n    <strong>Internationalisierung:</strong>\n    damit verschiedene i18n-Lösungen eingesetzt werden können und um die Beispiele lesbarer zu\n    machen, wird vom Styleguide keine i18n-Lösung vorgegeben.\n  </li>\n  <li>\n    <strong>Accessibility:</strong>\n    Projekte haben unterschiedliche Anforderungen betreffend Accessibility. Der Styleguide und die\n    Codebeispiele enthalten Basisinformationen für die wichtigsten Bereiche, aber für Projekte mit\n    hohen Anforderungen an die Barrierefreiheit reicht dies noch nicht aus. Wir empfehlen als\n    weiterführende Informationsquellen den\n    <a class=\"external\" href=\"https://www.accessibility-developer-guide.com/\" target=\"_blank\">\n      Accessibility Developer Guide\n    </a>\n    , sowie die\n    <a class=\"external\" href=\"https://www.w3.org/WAI/\" target=\"_blank\">\n      Web Accessibility Initiative (WAI)\n    </a>\n    des W3C.\n  </li>\n  <li>\n    <strong>Web Design für Internetauftritte:</strong>\n    Der Styleguide ist auf das Design von Fachapplikationen ausgerichtet. Für öffentlich zugängliche\n    Internetauftritte gelten in vielen Bereichen andere Designgrundsätze als für Fachapplikationen.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Andere Styleguides</h2>\n<p>\n  Bei Applikationen, wo die Verwendung eines Styleguides des Kunden gefordert ist, haben die\n  Vorgaben zum Look & Feel des Kunden-Styleguides Vorrang. Trotzdem können die UX-Guidelines in\n  diesem Styleguide nützliche Zusatzinformationen zur Gestaltung von GUI-Masken liefern.\n</p>\n<div class=\"container-fluid\">\n  <dl class=\"row\">\n    <dt class=\"col-2\">Bedag Brand</dt>\n    <dd class=\"col-10\">\n      <a class=\"external\" href=\"https://www.cd.sites.be.ch/document/63\" target=\"_blank\">\n        Einstiegsseite\n      </a>\n      -\n      <a\n        class=\"external\"\n        href=\"https://www.cd.sites.be.ch/document/54#/basics/farbwelt\"\n        target=\"_blank\">\n        Farb-Schemas\n      </a>\n      (User: communications@bedag.ch / PW: seecdmanual)\n    </dd>\n    <dt class=\"col-2\">Kanton Bern</dt>\n    <dd class=\"col-10\">\n      <a\n        class=\"external\"\n        href=\"https://www.cd.sites.be.ch/d/mLaezX2xseW6/anwendungen#/web-mobile/web-applikationen\"\n        target=\"_blank\">\n        Einstiegsseite\n      </a>\n      -\n      <a class=\"external\" href=\"https://www.be.ch/web-styleguide\" target=\"_blank\">Styleguide</a>\n      (User: guest / PW: kantonbern)\n    </dd>\n    <dt class=\"col-2\">Bund</dt>\n    <dd class=\"col-10\">\n      <a class=\"external\" href=\"https://swiss.github.io/styleguide/de/\" target=\"_blank\">\n        Einstiegsseite\n      </a>\n      -\n      <a class=\"external\" href=\"https://github.com/swiss/styleguide\" target=\"_blank\">\n        Git-Repository\n      </a>\n    </dd>\n  </dl>\n</div>\n<h2 class=\"mt-5\">Fragen oder Ergänzungen?</h2>\n<div class=\"container-fluid mt-3\">\n  <div class=\"row mb-3\">\n    <div class=\"col-md-2\">\n      <a\n        target=\"_blank\"\n        href=\"https://teams.microsoft.com/l/channel/19%3afbc7b6bb05804273a1cae1c741c097f6%40thread.skype/IBS%2520GUI%2520Entwicklung\n?groupId=8bb72eea-4e26-499b-be1b-871bca7b411d&tenantId=5aa867eb-55db-4b2c-a9c9-3d6c94c46894\">\n        <img\n          class=\"img-fluid\"\n          style=\"max-width: 4em\"\n          alt=\"Microsoft Teams\"\n          src=\"assets/ms-teams-logo.png\" />\n      </a>\n    </div>\n    <p class=\"col-md-10 d-flex align-items-center mb-0\">\n      Das UX-Team ist gerne für euch da. Nimm Kontakt mit uns auf im Channel&nbsp;\n      <a\n        class=\"external\"\n        href=\"https://teams.microsoft.com/l/channel/19%3afbc7b6bb05804273a1cae1c741c097f6%40thread.skype/IBS%2520GUI%2520Entwicklung\n?groupId=8bb72eea-4e26-499b-be1b-871bca7b411d&tenantId=5aa867eb-55db-4b2c-a9c9-3d6c94c46894\"\n        target=\"_blank\">\n        IBS GUI Entwicklung\n      </a>\n      &nbsp;in Teams.\n    </p>\n  </div>\n</div>\n<p>\n  Der Styleguide soll kontinuierlich weiterentwickelt werden. Hast du ein neues Element entwickelt,\n  das nicht im Styleguide vorhanden war oder einen Bugfix oder eine Verbesserung eines bereits\n  vorhandenen Elements?\n  <br />\n  Am besten erstellst du direkt einen Branch und einen Pull Request mit deinem Vorschlag im\n  Styleguide Git-Repository.\n  <br />\n  Danke für deinen Beitrag. Er hilft allen Teams.\n</p>\n","<div class=\"card\">\n  <div class=\"card-header d-flex align-items-center\">\n    <h3 class=\"mb-0 mr-auto\">Beispiel</h3>\n  </div>\n  <div class=\"card-body\">\n    <ng-content></ng-content>\n  </div>\n  <div class=\"card-footer d-flex align-items-center justify-content-between\">\n    <button type=\"button\" class=\"btn btn-outline-primary mr-2\" (click)=\"showOrHide()\">\n      <span class=\"fas fa-code\" aria-hidden=\"true\"></span>\n      Code anzeigen\n    </button>\n    <a class=\"external\" [href]=\"getStashUrl()\" target=\"_blank\">In Bitbucket anzeigen</a>\n  </div>\n  <div class=\"code-content px-3 pb-3\" *ngIf=\"showCode\">\n    <div class=\"mt-2\" *ngIf=\"files.length > 1; else singleFile\">\n      <nav ngbNav #nav=\"ngbNav\" class=\"nav-tabs mb-3\">\n        <ng-container *ngFor=\"let file of files\" ngbNavItem>\n          <a ngbNavLink>{{ file.prettyName }}</a>\n          <ng-template ngbNavContent>\n            <pre\n              class=\"language-{{\n                file.language\n              }} m-0\"><code [innerHtml]=\"file.highlightedCode\"></code></pre>\n          </ng-template>\n        </ng-container>\n      </nav>\n      <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n    </div>\n    <ng-template #singleFile>\n      <pre\n        class=\"language-{{\n          files[0].language\n        }} m-0\"><code [innerHtml]=\"files[0].highlightedCode\"></code></pre>\n    </ng-template>\n  </div>\n</div>\n<div>\n  <ng-content select=\"app-functionbar\"></ng-content>\n  <ng-content select=\"app-actionbar\"></ng-content>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { SourceCodeService } from '../../source-code.service';\n\nimport * as Prism from 'prismjs';\nimport 'prismjs/components/prism-typescript';\n\n@Component({\n  selector: 'app-code-example',\n  templateUrl: 'code-example.component.html',\n})\nexport class CodeExampleComponent implements OnInit {\n  static STASH_URL =\n    'https://stash.se.bedag.ch/projects/ENG-LIBS/repos/bedag-angular-styleguide/browse/frontend/src/app/styleguide';\n\n  /**\n   * Base path for the src file names, relative to src/app/styleguide.\n   */\n  @Input()\n  basePath!: string;\n  /**\n   * A comma separated list of source file names to display.\n   * html file names may contain an anchor, to only display the content of the code-example with that anchor (rather than the entire file)\n   */\n  @Input()\n  src!: string;\n\n  showCode = false;\n  files!: {\n    prettyName: string;\n    path: string;\n    language: string;\n    code: string;\n    highlightedCode?: string;\n  }[];\n\n  constructor(private readonly sourceCodeService: SourceCodeService) {}\n\n  ngOnInit(): void {\n    this.files = this.src.split(',').map((s) => {\n      const [name, anchor] = s.split('#');\n      const language = name.substring(name.lastIndexOf('.') + 1);\n      const prettyName = name.substring(name.lastIndexOf('/') + 1);\n      const path = this.basePath ? this.basePath.concat('/', name) : name;\n      let code = this.sourceCodeService.sourceCode(path);\n\n      if (anchor) {\n        let i = code.indexOf(s);\n        if (i === -1) {\n          throw new Error(`The source file ${name} does not contain the marker ${s}`);\n        } else if (code.indexOf(s, i + 1) !== -1) {\n          throw new Error(\n            `The source file ${name} contains the marker ${s} more than once. Please specify a unique marker`\n          );\n        }\n        i = code.indexOf('\\n', i) + 3;\n\n        const a = code.indexOf('</app-code-example>', i);\n        code = code.substring(i, a);\n        code = code.split('\\n  ').join('\\n');\n      }\n      return { prettyName, path, language, code };\n    });\n  }\n\n  showOrHide(): void {\n    this.showCode = !this.showCode;\n    if (this.showCode) {\n      for (const file of this.files) {\n        file.highlightedCode =\n          file.highlightedCode ||\n          Prism.highlight(file.code, Prism.languages[file.language], file.language);\n      }\n    }\n  }\n\n  getStashUrl(): string {\n    if (this.basePath) {\n      return CodeExampleComponent.STASH_URL.concat('/', this.basePath);\n    } else {\n      const firstFile = this.files[0];\n      if (this.files.length === 1) {\n        return CodeExampleComponent.STASH_URL.concat('/', this.files[0].path);\n      }\n      const dir = firstFile.path.substring(0, firstFile.path.lastIndexOf('/') + 1);\n      return CodeExampleComponent.STASH_URL.concat('/', dir);\n    }\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './typography.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TypographyComponent {\n  showAlert = true;\n}\n","<h1 class=\"mt-3 mb-4\">Typographie</h1>\n\n<p class=\"lead\">\n  Schrift ist ein zentrales Designelement. Sie unterstützt die visuelle Führung des Nutzers. Durch\n  unterschiedliche Grösse und Auszeichnung der Schrift, kann der Text und Inhalt einer Seite\n  hierarchisch gegliedert werden.\n</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    <strong>&lt;h1&gt;</strong>\n    - Kommt auf jeder Seite nur 1x mal vor. Es ist der Haupttitel. Er fasst den Inhalt kurz und\n    prägnant zusammen.\n  </li>\n  <li>\n    <strong>Lead Text</strong>\n    - Falls Lead Text zum Einsatz kommt wird dieser immer direkt unterhalb des h1 platziert. Fasst\n    den Inhalt der gesamten Seite in wenigen Sätzen zusammen.\n  </li>\n  <li>\n    <strong>&lt;h2&gt;</strong>\n    - Für Zwischenüberschriften. Sie fassen mentale Einheiten zusammen. Wie beispielsweise\n    Lieferadresse und Rechnungsadresse.\n  </li>\n  <li>\n    <strong>&lt;h3&gt;</strong>\n    - Wenn im Paragraph h2 weitere Unterthemen gegliedert werden sollen.\n  </li>\n  <li>\n    <strong>Fliesstext / Content</strong>\n    - Text im Inhaltsbereich. Er kann Links enthalten.\n    <a routerLink=\"/styleguide/ui-elements/links\" class=\"highlight\">Links</a>\n  </li>\n  <li>\n    <strong>Auflistungen</strong>\n    - Können im Fliesstext vorkommen. Oft hilft es, keine vollständigen Sätze zu formulieren,\n    sondern im Aufzählungsstil zu formulieren. Als Standard kommen Bullet Point Lists zum Einsatz.\n    Die nummerierten Listen sind nur zu verwenden, wenn es einen klaren Bezug zu den Zahlen gibt.\n    z.B. Wichtigkeit, Schritte im Prozess, Häufigkeit, etc. oder wenn die Aufzählungspunkte\n    referenzierbar sein müssen.\n  </li>\n</ul>\n\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Für die Gewährleistung der Barrierefreiheit muss auf jeder Seite ein\n    <strong>&lt;h1&gt;</strong>\n    vorhanden sein und die Hierarchie der Überschriften muss zwingend eingehalten werden.\n    <br />\n    Direkt unter einem\n    <strong>&lt;h1&gt;</strong>\n    Element dürfen also nur\n    <strong>&lt;h2&gt;</strong>\n    Titel eingesetzt werden.\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Titel sollen nicht zusätzlich formatiert werden (keine andere Farbe, nicht zusätzlich fett oder\n    kursiv)\n  </li>\n  <li>Titel enthalten nie einen Link</li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/ui-elements/links\">Links</a></li>\n  <li><a routerLink=\"/styleguide/ui-elements/dividers\">Dividers</a></li>\n  <li><a routerLink=\"/styleguide/ui-elements/buttons\">Buttons</a></li>\n</ul>\n\n<div class=\"card my-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    Es wird immer die im CSS vorgegebene Schriftart eingesetzt. Die vorgegebenen Typographie-Stile\n    sind nicht anzupassen!\n  </div>\n</div>\n\n<app-code-example src=\"basics/typography/typography.component.html#typography\">\n  <h1>Überschrift h1</h1>\n  <p class=\"lead\">Lead Text</p>\n  <h2>Überschrift h2</h2>\n  <h3>Überschrift h3</h3>\n  <h4>Überschrift h4</h4>\n  <p>Fliesstext / Content</p>\n  <ul>\n    <li>Bananen</li>\n    <li>Orangen</li>\n    <li>Äpfel</li>\n  </ul>\n  <ol>\n    <li>Wichtigster Punkt</li>\n    <li>Zweitwichtigster Punkt</li>\n    <li>Drittwichtigster Punkt</li>\n  </ol>\n</app-code-example>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './icons.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class IconsComponent {}\n","<h1 class=\"mt-3 mb-4\">Icons</h1>\n\n<p class=\"lead\">\n  Icons sind kleine Bilder oder Piktogramme, die für Aktionen oder Themen stehen. Icons sollen\n  möglichst einfach gestaltet und selbsterklärend sein.\n  <br />\n  Bereits bei der Lupe wird klar, wie wichtig auch der Kontext ist. Lupe unter Bild = Vergrösserung,\n  Lupe in Eingabefeld = Suche.\n  <br />\n  Icons helfen die Inhalte schneller zu verstehen und erhöhen dadurch die Bedienbarkeit.\n</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Bei gelernten und selbsterklärenden Elementen, um Platz zu sparen, z.B. Icon für Drucker, Brief,\n    Teilen\n  </li>\n  <li>\n    Bei komplexeren Themen, empfehlen wir die Kombination mit Text. Die Icons helfen dem Auge, sich\n    schneller zu orientieren, der Text liefert die zusätzliche Sicherheit.\n  </li>\n  <li>\n    In allen unseren Applikationen soll dasselbe Icon für dieselbe Funktionalität verwendet werden.\n    Siehe dazu das Bedag Standard Icon Set unten auf dieser Seite.\n  </li>\n  <li>\n    Icons ohne Text müssen mit einem\n    <a routerLink=\"/styleguide/ui-elements/tooltips\" class=\"highlight\">Tooltip</a>\n    deren Funktionalität erklären:\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-primary btn-sm\"\n      placement=\"top\"\n      ngbTooltip=\"Synchronisieren\">\n      <span class=\"fas fa-sync-alt fa-fw\"></span>\n    </button>\n  </li>\n  <li>\n    Je mehr unbekannte Icons eingesetzt werden, desto mehr Schulung und Erlernen der Applikation ist\n    erforderlich. Applikationen mit vielen Icons sind für Poweruser und Experten konzipiert.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Komplexe Icons oder Icons, die nicht selbsterklärend sind, nur in Kombination mit Text oder für\n    Fachapplikationen verwenden.\n  </li>\n  <li>\n    Animierte Icons sind äusserst sparsam einzusetzen. Ein sinnvoller Anwendungsfall sind\n    <a routerLink=\"/styleguide/ui-elements/progress-indicators\" class=\"highlight\">\n      Progress Indicators\n    </a>\n    .\n  </li>\n</ul>\n\n<h3 class=\"mt-5\">Verwandte Elemente</h3>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/ui-elements/buttons\">Button mit Icon</a></li>\n  <li><a routerLink=\"/styleguide/basics/logo\">Logo (Favicon)</a></li>\n</ul>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Wir verwenden\n      <a class=\"external\" href=\"https://fontawesome.com/icons?d=gallery&m=free\" target=\"_blank\">\n        Font Awesome\n      </a>\n      , welches eine sehr grosse Auswahl an Icons bereitstellt und nahtlos in Bootstrap integriert\n      werden kann. Font Awesome ist eine Sammlung von sogenannten Icon-Fonts (Icons als Schrift).\n      FA-Icons können ganz simpel mit wenig CSS-Code angezeigt werden und wie \"normaler\" Text\n      eingefärbt und skaliert werden.\n    </p>\n    <p>\n      Auf der\n      <a\n        class=\"external\"\n        href=\"https://fontawesome.com/how-to-use/on-the-web/referencing-icons/basic-use\"\n        target=\"_blank\">\n        Beispiel Seite von Font Awesome\n      </a>\n      findet ihr etliche Code- und Verwendungsbeispiele, von der einfachen Einbettung bis zum\n      Positionieren, Skalieren oder Rotieren von Icons.\n    </p>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Bedag Standard Icon Set</h2>\n<p>\n  Damit in allen unseren Applikationen die gleichen Icons für die gleiche Funktionalität stehen,\n  sollen wenn immer möglich die Icons aus dem Bedag Standard Icon Set verwendet werden. Die Icons\n  aus diesem Set sollen ausschliesslich für die nachfolgend beschriebenen Funktionen verwendet\n  werden, damit bei den Benutzern von mehreren Bedag-Applikationen keine Irritationen durch\n  Mehrdeutigkeit entstehen.\n</p>\n\n<h3 class=\"mt-5\">Informationen</h3>\n<app-code-example src=\"basics/icons/icons.component.html#information\">\n  <div>\n    <span class=\"fas fa-check-circle text-success mr-2\"></span>\n    Erfolg\n  </div>\n  <div>\n    <span class=\"fas fa-info-circle text-info mr-2\"></span>\n    Info\n  </div>\n  <div>\n    <span class=\"fas fa-exclamation-triangle text-warning mr-2\"></span>\n    Warnung\n  </div>\n  <div>\n    <span class=\"fas fa-exclamation-circle text-danger mr-2\"></span>\n    Gefahr\n  </div>\n  <div>\n    <span class=\"fas fas fa-circle-notch fa-spin mr-2\"></span>\n    Bitte warten, Verarbeitung läuft (Durch User ausgelöste Aktion) - Siehe auch\n    <a routerLink=\"/styleguide/ui-elements/progress-indicators\" class=\"highlight\">\n      Progress Indicators\n    </a>\n  </div>\n  <div>\n    <span class=\"fas fa-spinner fa-pulse mr-2\"></span>\n    Bitte warten, Applikation lädt (z.B. auf Splashscreen)\n  </div>\n</app-code-example>\n\n<h3 class=\"mt-5\">Aktionen</h3>\n<app-code-example src=\"basics/icons/icons.component.html#actions\">\n  <div class=\"d-flex flex-column\">\n    <div>\n      <span class=\"fas fa-search mr-2\"></span>\n      Suche\n    </div>\n    <div>\n      <span class=\"fas fa-plus mr-2\"></span>\n      Neues Element hinzufügen\n    </div>\n    <div>\n      <span class=\"fas fa-pen mr-2\"></span>\n      Element bearbeiten\n    </div>\n    <div>\n      <span class=\"fas fa-trash-alt mr-2\"></span>\n      Element löschen / Papierkorb anzeigen\n    </div>\n    <div>\n      <span class=\"fas fa-undo-alt mr-2\"></span>\n      Rückgängig machen / Zurücksetzen\n    </div>\n    <div>\n      <span class=\"fas fa-cog mr-2\"></span>\n      Einstellungen\n    </div>\n    <div>\n      <span class=\"fas fa-filter mr-2\"></span>\n      Filtern (Tabelle, Suchresultate, etc.)\n    </div>\n    <div>\n      <span class=\"fas fa-lock mr-2\"></span>\n      Gesperrt / Sperren\n    </div>\n    <div>\n      <span class=\"fas fa-lock-open mr-2\"></span>\n      Entsperrt / Entsperren\n    </div>\n    <div>\n      <span class=\"fas fa-sync-alt mr-2\"></span>\n      Daten synchronisieren\n    </div>\n    <div>\n      <span class=\"fas fa-print mr-2\"></span>\n      Drucken\n    </div>\n    <div>\n      <span class=\"fas fa-download mr-2\"></span>\n      Downloaden\n    </div>\n    <div>\n      <span class=\"fas fa-question-circle mr-2\"></span>\n      Hilfe - Siehe auch\n      <a routerLink=\"/styleguide/layout/header\" class=\"highlight\">Header</a>\n    </div>\n    <div>\n      <span class=\"fas fa-ellipsis-v fa-fw mr-1\"></span>\n      Overflow-Menu anzeigen\n    </div>\n    <div>\n      <span class=\"fas fa-eye mr-2\"></span>\n      Versteckte Informationen (z.B. Passwort) anzeigen\n    </div>\n    <div>\n      <span class=\"fas fa-eye-slash mr-2\"></span>\n      Informationen verstecken\n    </div>\n    <div>\n      <span class=\"far fa-comment mr-2\"></span>\n      Kommentar hinterlegen (noch keine Kommentare vorhanden)\n    </div>\n    <div>\n      <span class=\"far fa-star mr-2\"></span>\n      Zu Favoriten hinzufügen\n    </div>\n    <div>\n      <span class=\"fas fa-star mr-2 text-warning\"></span>\n      Aus Favoriten entfernen\n    </div>\n  </div>\n</app-code-example>\n\n<h3 class=\"mt-5\">Benutzer</h3>\n<app-code-example src=\"basics/icons/icons.component.html#user\">\n  <div>\n    <span class=\"fas fa-user-circle mr-2\"></span>\n    Benutzermenu (eingeloggter User) - Siehe\n    <a routerLink=\"/styleguide/layout/header\" class=\"highlight\">Header</a>\n  </div>\n  <div>\n    <span class=\"fas fa-user mr-2\"></span>\n    Benutzer (anderer User)\n  </div>\n  <div>\n    <span class=\"fas fa-user-lock mr-2\"></span>\n    Benutzer gesperrt\n  </div>\n  <div>\n    <span class=\"fas fa-user-edit mr-2\"></span>\n    Benutzer bearbeiten\n  </div>\n  <div>\n    <span class=\"fas fa-user-cog mr-2\"></span>\n    Benutzereinstellungen\n  </div>\n</app-code-example>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport * as Prism from 'prismjs';\nimport 'prismjs/components/prism-scss';\n\n@Component({\n  selector: 'app-colors',\n  templateUrl: './colors.component.html',\n  styleUrls: ['./colors.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ColorsComponent {\n  highlighted_scss(): string {\n    return Prism.highlight(\n      `\n@import \"src/app/bedag-styles/bedag-variables\";\n\n.bg-hover-light {\n  background-color: rgba($primary, .05);\n}\n\n.bg-hover-dark {\n  background-color: rgba($primary, .1);\n}\n\n.bg-selected {\n  background-color: rgba($primary, .15);\n}\n   `,\n      Prism.languages['scss'],\n      'scss'\n    );\n  }\n}\n","<h1 class=\"mt-3 mb-4\">Colors</h1>\n\n<p class=\"lead\">\n  Farben haben zwei Aufgaben: die Kommunikation der Marke und das Auge visuell auf dem Bildschirm zu\n  führen. Mit Signalfarben kann man Akzente setzen oder etwas in den Hintergrund rücken. Die Marke\n  Bedag kann kommuniziert werden, indem ein Farbschema in den Bedag-CI Farbtönen eingesetzt wird.\n</p>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Wir nutzen die\n      <a class=\"external\" href=\"http://getbootstrap.com/docs/4.5/utilities/colors/\" target=\"_blank\">\n        semantischen CSS-Klassen von Bootstrap\n      </a>\n      , um mit Signalfarben Botschaften visuell zu unterstützen. Beim Bedag Custom CI-Farbschema\n      sind diese entsprechend angepasst.\n    </p>\n    <p>\n      Farbschemas können durch den einfachen Austausch eines CSS-Imports im\n      <code>_bedag-variables.scss</code>\n      ausgewechselt werden. Auf einen Runtime-Theme-Selector wurde verzichtet, um die\n      Code-Komplexität zu minimieren.\n    </p>\n  </div>\n</div>\n<h2 class=\"mt-5\">Signalfarben</h2>\n\n<div class=\"container\">\n  <div class=\"row mb-1\">\n    <div class=\"col-md-6 p-3 mb-2 bg-info text-white\">Info Badge / .bg-info</div>\n    <div class=\"col-md-6 p-3 mb-2 alert-info\">Info alert</div>\n  </div>\n  <div class=\"row mb-1\">\n    <div class=\"col-md-6 p-3 mb-2 bg-success text-white\">Success Badge / .bg-success</div>\n    <div class=\"col-md-6 p-3 mb-2 alert-success\">Success Alert</div>\n  </div>\n  <div class=\"row mb-1\">\n    <div class=\"col-md-6 p-3 mb-2 bg-warning text-dark\">Warning Badge / .bg-warning</div>\n    <div class=\"col-md-6 p-3 mb-2 alert-warning\">Warning Alert</div>\n  </div>\n  <div class=\"row mb-1\">\n    <div class=\"col-md-6 p-3 mb-2 bg-danger text-white\">Danger Badge / .bg-danger</div>\n    <div class=\"col-md-6 p-3 mb-2 alert-danger\">Danger Alert</div>\n  </div>\n</div>\n\n<p class=\"mt-4\">\n  Die Signalfarben\n  <code>.bg-xxx</code>\n  sind Basisfarben, die von Bootstrap z.B. für die Alerts modifiziert werden. Beispiele für die\n  Verwendung der Signalfarben:\n  <a routerLink=\"/styleguide/ui-elements/alerts\" class=\"highlight\">Alerts</a>\n  und\n  <a routerLink=\"/styleguide/ui-elements/badges\" class=\"highlight\">Badges.</a>\n</p>\n\n<h2 class=\"mt-5\">Farbpalette</h2>\n<p>\n  Um die visuelle Konsistenz der Applikation zu gewährleisten, dürfen nicht zu viele\n  unterschiedliche Farben eingesetzt werden. Wenn immer möglich soll die Farbpalette des aktiven\n  Color Themes verwendet werden.\n  <br />\n  Eigene Elemente sollen immer mit Bootstrap-Klassen und Sass-Variablen eingefärbt werden und nicht\n  Hex- oder RGB-Farbcodes.\n  <br />\n  Damit die Sass-Variablen in lokalen Angular Component Styles aufgelöst werden können, muss das\n  <code>_bedag-variables.scss</code>\n  Sass-Partial importiert werden (Siehe Code-Beispiel unten).\n</p>\n<div class=\"row mb-4\">\n  <div class=\"col-md-3\">\n    <div class=\"p-3 mb-2 bg-dark text-white h-100\">\n      <div>CSS class:</div>\n      <div><strong>.bg-dark</strong></div>\n      <div>Sass Variable:</div>\n      <div><strong>$dark</strong></div>\n    </div>\n  </div>\n  <div class=\"col-md-3\">\n    <div class=\"p-3 mb-2 bg-primary text-white h-100\">\n      <div>CSS class:</div>\n      <div><strong>.bg-primary</strong></div>\n      <div>Sass Variable:</div>\n      <div><strong>$primary</strong></div>\n    </div>\n  </div>\n  <div class=\"col-md-3\">\n    <div class=\"p-3 mb-2 bg-light h-100\">\n      <div>CSS class:</div>\n      <div><strong>.bg-light</strong></div>\n      <div>Sass Variable:</div>\n      <div><strong>$light</strong></div>\n    </div>\n  </div>\n  <div class=\"col-md-3\">\n    <div class=\"p-3 mb-2 text-primary h-100\">\n      <div>CSS class:</div>\n      <div><strong>.text-primary</strong></div>\n      <div>Sass Variable:</div>\n      <div><strong>$primary</strong></div>\n    </div>\n  </div>\n</div>\n<p>\n  Die Sass-Variablen können modifiziert werden um hellere oder dunklere Varianten der Farben zu\n  erzeugen. Die nachfolgenden Beispiele sind Varianten der Primärfarbe (\n  <code>$primary</code>\n  ) mit unterschiedlicher Opacity, die von den Elementen dieses Styleguides verwendet werden:\n  <br />\n  Auch hier ist es wichtig, sich auf einige wenige Varianten zu beschränken und diese mit eigenen\n  CSS-Klassen applikationsweit durchgehend einzusetzen.\n</p>\n<div class=\"row mb-2\">\n  <div class=\"col-md-3\">\n    <div class=\"p-3 mb-2 bg-hover-light h-100\">\n      <div>\n        <strong>Opacity 5%</strong>\n        <br />\n        CSS code:\n      </div>\n      <code>background-color: rgba($primary, .05);</code>\n    </div>\n  </div>\n  <div class=\"col-md-3\">\n    <div class=\"p-3 mb-2 bg-hover-dark h-100\">\n      <div>\n        <strong>Opacity 10%</strong>\n        <br />\n        CSS code:\n      </div>\n      <code>background-color: rgba($primary, .1);</code>\n    </div>\n  </div>\n  <div class=\"col-md-3\">\n    <div class=\"p-3 mb-2 bg-selected h-100\">\n      <div>\n        <strong>Opacity 15%</strong>\n        <br />\n        CSS code:\n      </div>\n      <code>background-color: rgba($primary, .15);</code>\n    </div>\n  </div>\n</div>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Beispiel component.scss\n  </h2>\n  <div class=\"card-body\">\n    <pre class=\"language-scss\">\n      <code [innerHTML]='highlighted_scss()'>\n      </code>\n    </pre>\n  </div>\n</div>\n\n<h2 class=\"mt-5\" id=\"color_themes\">Color Themes</h2>\n<p>\n  Mit Themes kann das Branding der Bedag oder des Kunden in der Fachapplikation kommuniziert werden.\n  Dazu stehen im Styleguide zwei unterschiedliche Color Themes zur Verfügung. Eigene Schemas können\n  implementiert werden, indem das CSS im Theme Ordner customized wird.\n  <br />\n  Es ist wichtig, sich zu Beginn für ein Farbschema zu entscheiden und dieses dann durchgehend zu\n  verwenden.\n</p>\n\n<h3 class=\"mt-5\">Classic Theme</h3>\n<img\n  src=\"assets/bedag-classic-colortheme-screenshot.png\"\n  alt=\"Bedag Classic Theme\"\n  class=\"img-fluid\" />\n<p>\n  Das Classic Theme ist ein neutrales, farbarmes Schema. Es ist der Default, wenn kein anderes\n  Schema importiert wird. Im\n  <a class=\"external\" href=\"https://bedag-starter.cloud.se.bedag.ch/\" target=\"_blank\">\n    Bedag Starter Anwendungsbeispiel\n  </a>\n  ist standardmässig das Classic Theme konfiguriert.\n  <br />\n  Wir verwenden dieses Theme für Kunden-Fachapplikationen, wenn keine spezifischen Anforderungen zu\n  den Farben vorliegen.\n</p>\n\n<h3 class=\"mt-5\">Bedag Theme - Violett</h3>\n<img\n  src=\"assets/bedag-ci-colortheme-screenshot.png\"\n  alt=\"Bedag Color Theme - Violett\"\n  class=\"img-fluid\" />\n<p>\n  Farbschema in den violetten Farbtönen der Bedag CI Farben. Wir verwenden dieses Theme für interne\n  Bedag Applikationen.\n</p>\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark my-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Bei Verwendung eines Bedag-CI oder eigenen Farbschemas sollte man sich bewusst sein, dass\n    sämtliche künftig eingesetzten Angular-Drittkomponenten manuell an das Schema angepasst werden\n    müssen.\n    <br />\n    Wer diesen Zusatzaufwand nicht auf sich nehmen möchte, ist mit dem Classic-Schema in den\n    Standard Bootstrap Farben besser bedient.\n  </div>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-colors',\n  templateUrl: './logo.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LogoComponent {}\n","<h1 class=\"mt-3 mb-4\">Logo</h1>\n\n<p class=\"lead\">\n  Das Logo ermöglicht dem Benutzer eine schnelle Orientierung, in welcher Applikation er sich\n  befindet.\n  <br />\n  Das Favicon, welches im Browser-Tab angezeigt wird, ermöglicht das schnelle Auffinden der\n  Applikation bei vielen offenen Tabs.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Das Logo wird immer oben links im Header platziert.</li>\n  <li>Das Logo ist mit der Startseite der Applikation verlinkt.</li>\n  <li>Das Favicon ist in der Regel mit dem Logo identisch.</li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/layout/header\">Header</a></li>\n  <li><a routerLink=\"/styleguide/basics/icons\">Icons</a></li>\n</ul>\n\n<h2 class=\"mt-5\">Logo</h2>\n<p>\n  Für das Design eines Applikationslogos kann\n  <a href=\"mailto:communications@bedag.ch\">communications@bedag.ch</a>\n  angefragt werden.\n</p>\n<p>\n  Es ist wichtig, dass Benutzer auf einen Blick erkennen, in welcher Applikation sie sich befinden.\n  Damit der Wiedererkennungseffekt am grössten ist, sollte das Logo folgende Eigenschaften\n  aufweisen:\n</p>\n<ul>\n  <li>\n    Es soll extra für diesen Zweck angefertigt werden (kein Stock-Logo oder Fontawesome-Icon).\n  </li>\n  <li>Es soll schlicht sein, sowohl in Form wie auch in Farbe.</li>\n  <li>\n    Bei mehreren zusammengehörigen Applikationen einer Suite ist es sinnvoll mit einem gemeinsames\n    Basiselement im Logo die Zusammengehörigkeit kennzeichnen. Das kann z.B. ein gemeinsames\n    grafisches Element sein, oder auch ein gemeinsamer Farbton oder Grafikstil.\n  </li>\n  <li>Das Bedag Logo ist nur als Logo für Bedag-interne Applikationen geeignet.</li>\n</ul>\n\n<h2 class=\"mt-5\">Favicon</h2>\n<p>\n  Auch mit dem Favicon sollen die Benutzer auf einen Blick erkennen, um welche Applikation es sich\n  handelt und bei vielen geöffneten Browser-Tabs die Applikation rasch finden können.\n  <br />\n  Das Bedag-Logo allein ist als Favicon nicht geeignet, weder für externe noch für interne\n  Applikationen. Sobald das Bedag-Logo in mehr als einer Applikation als Favicon eingesetzt wird,\n  ist ein rasches Auffinden der gesuchten Applikation nicht mehr möglich.\n</p>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './links.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LinksComponent {}\n","<h1 class=\"mt-3 mb-4\">Links</h1>\n\n<p class=\"lead\">\n  Links verbinden Informationen. Sie führen innerhalb der Applikation zu einer anderen Seite oder\n  ermöglichen als Anchor-Link den schnellen Zugriff auf Unterbereiche einer Seite.\n</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Kommt verlinkter Text in Verbindung mit Bildern oder Icons vor, sind beide Elemente (Bild/Icon\n    und Text) zu verlinken.\n  </li>\n  <li>\n    Links sind immer visuell hervorzuheben und müssen immer eine visuelle Veränderung on Mouseover\n    aufweisen.\n  </li>\n  <li>\n    Hinweis zum richtigen Einsatz (Die nachfolgenden Links sind nur Anwendungsbeispiele ohne\n    Zielseite):\n    <br />\n    <strong>Falsch:</strong>\n    Details zu den Spezifikationen finden Sie\n    <a href=\"javascript:void(0)\">hier</a>\n    .\n    <br />\n    <strong>Richtig:</strong>\n    Details zu den\n    <a href=\"javascript:void(0)\">Spezifikationen</a>\n    .\n  </li>\n  <li>\n    Externe Links, mit denen der Nutzer die Applikation verlässt, werden mit einem Icon\n    gekennzeichnet (via\n    <code>class=\"external\"</code>\n    ) und sind mit\n    <code>target=\"_blank”</code>\n    zu versehen, damit sich ein neuer Tab öffnet.\n    <br />\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>Titel enthalten nie einen Link.</li>\n  <li>\n    Für Sonderfälle wie Breadcrumbs oder Navigation gelten die unter diesen Elementen beschriebenen\n    Richtlinien.\n  </li>\n  <li>\n    Anchor-Links sollen nur verwendet werden, wenn viel Information innerhalb einer Seite\n    strukturiert werden muss (z.B. Online Hilfe).\n    <br />\n    Wenn möglich sollte aber zum Strukturieren von vielen Informationen\n    <a routerLink=\"/styleguide/ui-elements/tabs\" class=\"highlight\">Tabs</a>\n    oder ein Accordion verwendet werden.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements mb-5\">\n  <li>\n    <a routerLink=\"/styleguide/layout/navigation\" class=\"highlight\">Navigation</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/layout/breadcrumbs\" class=\"highlight\">Breadcrumbs</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/basics/typography\" class=\"highlight\">Typographie</a>\n  </li>\n</ul>\n\n<app-code-example class=\"mt-5\" src=\"ui-elements/links/links.component.html#links\">\n  Im Fehlerfall können Sie eine Meldung in unserem Ticketing-System\n  <a class=\"external\" href=\"https://jira.bedag.ch/\" target=\"_blank\">Jira</a>\n  erstellen.\n</app-code-example>\n","<h1 class=\"mt-3 mb-4\">Tooltip und Popover</h1>\n<p class=\"lead\">\n  Ein Tooltip ist ein kleines Popup. Es enthält eine Beschreibung oder Hilfestellung zu einem Wort\n  oder einem Interaktionsfeld.\n  <br />\n  Ein Popover ist ein etwas grösseres Popup, welches zusätzlichen Inhalt zu einem Element enthält.\n</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<p>Da Tooltips den Zweck eines GUI-Elements erklären sollen, sollten sie kurz und prägnant sein.</p>\n\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Mouseover ist nicht mobile kompatibel. Tooltips, die für die Bedienung einer Applikation\n    essentiell sind, müssen in mobile-tauglichen Applikationen auf Klick erscheinen oder direkt\n    angezeigt werden.\n  </div>\n</div>\n\n<div class=\"card mt-5\">\n  <div class=\"card-header\">\n    <h2>\n      <em class=\"fas fa-wrench mr-3\"></em>\n      Implementierung\n    </h2>\n  </div>\n  <div class=\"card-body\">\n    <p>\n      Tooltips realisieren wir mit der\n      <a\n        class=\"external\"\n        href=\"https://ng-bootstrap.github.io/#/components/tooltip/examples\"\n        target=\"_blank\">\n        ngbTooltip Direktive von ng-bootstrap\n      </a>\n      .\n      <br />\n\n      Popover realisieren wir mit der\n      <a\n        class=\"external\"\n        href=\"https://ng-bootstrap.github.io/#/components/popover/examples\"\n        target=\"_blank\">\n        ngbPopover Direktive von ng-bootstrap\n      </a>\n      .\n    </p>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Tooltip auf Icon-Buttons</h2>\n<p>\n  Kommt bei Icon-Buttons ohne Text zum Einsatz. Wenn genügend Platz vorhanden ist, soll der Tooltip\n  unterhalb des Icon-Buttons angezeigt werden.\n</p>\n\n<app-code-example src=\"ui-elements/tooltips/tooltips.component.html#button\">\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-primary mr-2\"\n    placement=\"bottom\"\n    ngbTooltip=\"Einstellungen\">\n    <span class=\"fas fa-cog fa-fw\"></span>\n  </button>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-primary\"\n    placement=\"bottom\"\n    ngbTooltip=\"Dokument bearbeiten\">\n    <span class=\"fas fa-pen fa-fw\"></span>\n  </button>\n</app-code-example>\n\n<h2 class=\"mt-5\">Tooltip in Kombination mit einem Icon</h2>\n<p>\n  Wird meist für Hilfestellungen oder Zusatzinformationen verwendet. Das Icon wird rechts vom\n  Eingabefeld oder Text platziert. Dieser Tooltip sollte immer mit einem Klick getriggert werden, da\n  Mouseover in mobilen Applikationen nicht funktioniert.\n  <br />\n  Damit der Tooltip auch per Tastatur erreichbar ist, braucht das Element einen Tabindex, und der\n  Trigger muss wie folgt gesetzt werden:\n  <code>tabindex=\"0\" triggers=\"click:blur focus:blur\"</code>\n</p>\n\n<app-code-example src=\"ui-elements/tooltips/tooltips.component.html#icon\">\n  <div class=\"d-flex align-items-center\">\n    Steuerrechtlicher Wohnsitz &nbsp;\n    <span\n      tabindex=\"0\"\n      class=\"fas fa-info-circle text-info mr-2\"\n      style=\"font-size: 2rem\"\n      triggers=\"click:blur focus:blur\"\n      ngbTooltip=\"Der Ort, wo sich eine Person mit der Absicht dauernden Verbleibens aufhält.\"></span>\n  </div>\n</app-code-example>\n\n<h2 class=\"mt-5\">Inline Tooltip</h2>\n<p>\n  Ein Inline Tooltip erklärt einen Begriff, der im Text vorkommt. Kann bei erklärungsbedürftigen\n  Texten im Fliesstext eingesetzt werden. Das Wort ist visuell hervorzuheben und muss sich von einem\n  Link klar unterscheiden.\n  <br />\n  Damit der Tooltip auch per Tastatur erreichbar ist, muss auf dem Element ein Tabindex gesetzt\n  werden.\n</p>\n\n<app-code-example src=\"ui-elements/tooltips/tooltips.component.html#inline\">\n  <p>\n    Lorem ipsum dolor sit amet, consetetur sadipscing elitr,\n    <span tabindex=\"0\" class=\"border-bottom-dotted text-muted\" ngbTooltip=\"dolor sit amet\">\n      sed diam nonumy\n    </span>\n    eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\n  </p>\n</app-code-example>\n\n<h2 class=\"mt-5\">Popover während der Feldeingabe</h2>\n<p>\n  Das Popover erscheint automatisch, sobald der Nutzer das Eingabefeld aktiviert. Beispielsweise bei\n  Passwortvergabe hilfreich.\n</p>\n\n<app-code-example src=\"ui-elements/tooltips/tooltips.component.html#inputfield\">\n  <form>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label for=\"inputPassword2\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"inputPassword2\"\n          placeholder=\"Password\"\n          popoverTitle=\"Mindestanforderungen\"\n          placement=\"right\"\n          autoClose=\"outside\"\n          triggers=\"focus:blur\"\n          ngbPopover=\"Das Passwort muss mind. 8 Zeichen lang sein, Gross- und Kleinbuchstaben, eine Zahl und ein Sonderzeichen enthalten.\" />\n      </div>\n    </div>\n  </form>\n</app-code-example>\n\n<h2 class=\"mt-5\">Popover für zusätzliche Inhalte</h2>\n<p>\n  Popovers können im Gegensatz zu Tooltips viel mehr Text und auch einen Header enthalten, aber auch\n  weitere HTML-Elemente wie Bilder, Links oder Buttons.\n</p>\n\n<app-code-example src=\"ui-elements/tooltips/tooltips.component.html#popover\">\n  <ng-template #popContent>\n    <p>In diesem Guide lernen Sie Schritt für Schritt die wichtigsten Funktionen kennen:</p>\n    <ol>\n      <li>Steuererklärung erfassen</li>\n      <li>Belege einreichen</li>\n      <li>Steuererklärung freigeben</li>\n    </ol>\n    <div class=\"float-right\">\n      <button type=\"button\" class=\"btn btn-outline-primary mr-2 my-3\" (click)=\"p.close()\">\n        Weiter\n        <span class=\"fas fa-arrow-right ml-2\"></span>\n      </button>\n    </div>\n  </ng-template>\n  <button\n    type=\"button\"\n    class=\"btn btn-primary mr-2\"\n    #p=\"ngbPopover\"\n    triggers=\"manual\"\n    (click)=\"p.toggle()\"\n    placement=\"right\"\n    [autoClose]=\"'outside'\"\n    popoverTitle=\"Willkommen auf der Tour\"\n    [ngbPopover]=\"popContent\">\n    <span class=\"fas fa-play mr-3\"></span>\n    Demo starten\n  </button>\n</app-code-example>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-tooltips',\n  templateUrl: './tooltips.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TooltipsComponent {}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ButtonsComponent {}\n","<h1 class=\"mt-3 mb-4\">Buttons</h1>\n\n<p class=\"lead\">Beim Klick auf einen Button, wird eine Aktion ausgelöst.</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Immer, um eine Aktion auszulösen, zu wiederrufen oder abzubrechen.</li>\n  <li>\n    Schreibweise immer Grossbuchstabe und dann klein: \"Speichern\", \"Abbrechen\", \"Suchen\".\n    <br />\n    Nie: \"speichern\" oder \"SPEICHERN\".\n  </li>\n  <li>\n    Es ist zu unterscheiden zwischen:\n    <ol>\n      <li>\n        Primäre Aktion\n        <br />\n        Löst die Hauptaktion auf der Seite aus, wie \"Speichern\" oder \"Erstellen\".\n      </li>\n      <li>\n        Sekundäre Aktion\n        <br />\n        Aktionen, auf denen nicht der Fokus des Anwenders liegen soll, wie beispielsweise Abbrechen.\n      </li>\n    </ol>\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Buttons sind keine Navigationselemente. Wenn nur auf einen anderen Inhalt verlinkt wird, ohne\n    dass eine Aktion ausgelöst wird, kommen Links zur Anwendung.\n  </li>\n  <li>\n    Button-Gruppen sollten grundsätzlich nicht im Contentbereich verwendet werden. Stattdessen soll\n    die\n    <a routerLink=\"/styleguide/layout/functionbar\" class=\"highlight\">Function Bar</a>\n    verwendet werden. Ausnahme: Wenn die Button-Gruppe nur einen Teilkontext des Contentbereichs\n    betrifft.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/layout/functionbar\" class=\"highlight\">Function Bar</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/links\" class=\"highlight\">Links</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/badges\" class=\"highlight\">Badges</a>\n  </li>\n  <li><a routerLink=\"/styleguide/basics/icons\" class=\"highlight\">Icons</a></li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/progress-indicators\" class=\"highlight\">\n      Progress Indicators\n    </a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/usability/tastaturbedienbarkeit\" class=\"highlight\">\n      Tastaturbedienbarkeit\n    </a>\n  </li>\n</ul>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Buttons sind (mit Ausnahme der Badges) Default Bootstrap Komponenten und in der\n      <a\n        class=\"external\"\n        href=\"https://getbootstrap.com/docs/4.5/components/buttons/\"\n        target=\"_blank\">\n        Bootstrap Dokumentation\n      </a>\n      ausführlich dokumentiert.\n    </p>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Button-Typen</h2>\n<p>\n  <strong>Primary Buttons</strong>\n  (\n  <code>btn-primary</code>\n  ) beschreiben die Hauptaktion des jeweiligen Kontexts wie z.B. \"Speichern\" oder \"Suchen\" und\n  werden mit\n  <span class=\"keyboard-key\">Enter</span>\n  ausgelöst. Bei mehreren möglichen Aktionen ist der Primary Button immer ganz rechts anzuordnen.\n  <br />\n  Es soll nie mehr als ein Primary Button pro Seite verwendet werden. Falls ausnahmsweise doch\n  mehrere Primary Buttons auf einer Seite nötig sind, dürfen sie nicht nahe beieinander stehen und\n  es muss dem Benutzer immer klar ersichtlich sein, welchen der Buttons er mit\n  <span class=\"keyboard-key\">Enter</span>\n  auslösen wird.\n</p>\n<p>\n  Für alle anderen Aktionen werden\n  <strong>Standard Buttons</strong>\n  (\n  <code>btn-outline-primary</code>\n  ) verwendet. Um die Arbeit zu erleichtern und den Code lesbarer zu machen, werden Buttons mit der\n  <code>btn</code>\n  Klasse automatisch als\n  <code>btn-outline-primary</code>\n  gerendert.\n</p>\n\n<app-code-example src=\"ui-elements/buttons/buttons.component.html#primary-secondary\">\n  <button type=\"button\" class=\"btn btn-outline-primary mr-2\">Abbrechen</button>\n  <button type=\"button\" class=\"btn btn-primary\">Speichern</button>\n</app-code-example>\n\n<h2 class=\"mt-5\">Button-Gruppen</h2>\n<p>\n  Button-Gruppen sind nützlich um Buttons zusammenzufassen, die eine Beziehung miteinander haben.\n  Die Buttons sollen logisch nach Verwendungshäufigkeit und Wichtigkeit in Gruppen aufgeteilt\n  werden.\n  <br />\n  Horizontale Button-Gruppen sollen nur unterhalb von Formularen verwendet werden und nicht mehr als\n  ein mal pro Seite.\n  <br />\n\n  Alle Buttons in einer Gruppe sollten in der Regel gleich breit sein, dies trifft auch auf\n  horizontale Gruppen zu.\n  <a routerLink=\"/styleguide/layout/grid\" class=\"highlight\">Grid</a>\n</p>\n<app-code-example src=\"ui-elements/buttons/buttons.component.html#button-group\">\n  <p>Vertikale Button-Gruppe in einem Block</p>\n  <div class=\"btn-group-vertical\">\n    <button type=\"button\" class=\"btn btn-outline-primary\">Auf Grundbuch anmelden</button>\n    <button type=\"button\" class=\"btn btn-outline-primary\">Notiz erfassen</button>\n    <button type=\"button\" class=\"btn btn-outline-primary\">Stornieren</button>\n  </div>\n\n  <p class=\"mt-3\">Vertikale Button-Gruppe mit Grid</p>\n  <div class=\"row\">\n    <div class=\"col-sm-3\">\n      <button type=\"button\" class=\"btn btn-outline-primary w-100 mb-2\">Bearbeiten</button>\n      <button type=\"button\" class=\"btn btn-outline-primary w-100 mb-2\">Löschen</button>\n      <button type=\"button\" class=\"btn btn-outline-primary w-100 mb-2\">Zurück zur Übersicht</button>\n      <button type=\"button\" class=\"btn btn-primary w-100 mb-2\">Publizieren</button>\n    </div>\n  </div>\n\n  <p class=\"mt-3\">Horizontale Button-Gruppe mit Grid</p>\n  <div class=\"row\">\n    <div class=\"col-md-8 d-flex\">\n      <button type=\"button\" class=\"btn btn-outline-primary w-100 mr-2\">Abbrechen</button>\n      <button type=\"button\" class=\"btn btn-outline-primary w-100 mr-2\">Vorlage speichern</button>\n      <button type=\"button\" class=\"btn btn-primary w-100 mr-2\">Speichern</button>\n    </div>\n  </div>\n</app-code-example>\n\n<h2 class=\"mt-5\">In Input-Groups</h2>\n<p>\n  Wenn wir mit\n  <code>input-group</code>\n  Buttons an ein\n  <code>&lt;input></code>\n  \"kleben\" verwenden wir weisse Buttons:\n</p>\n<app-code-example src=\"ui-elements/buttons/buttons.component.html#inputGroup\">\n  <div class=\"form-inline\">\n    <div class=\"input-group\">\n      <input type=\"text\" class=\"form-control\" id=\"search\" placeholder=\"Suchen\" />\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-light\" type=\"button\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n      </div>\n    </div>\n  </div>\n</app-code-example>\n\n<h2 id=\"icon-buttons\" class=\"mt-5\">Button mit Icon</h2>\n<p>\n  Das Textlabel ist das wichtigste Element auf einem Button, denn es kommuniziert die Aktion, die\n  ausgeführt wird.\n  <br />\n  Wenn immer möglich sollen deshalb Buttons mit einem Textlabel verwendet werden.\n  <br />\n  Buttons mit Icons können ganz einfach mit Hilfe von Font Awesome erstellt werden.\n  <a routerLink=\"/styleguide/basics/icons\" class=\"highlight\">Icons</a>\n  <br />\n  Dabei sollen die Icons aus dem Bedag Standard Icon Set bevorzugt verwendet werden, damit unsere\n  Applikationen ein einheitliches Look & Feel aufweisen.\n</p>\n<h3>Icon Buttons mit Text</h3>\n<p>\n  Icon Buttons mit Text können hilfreich sein, um visuelles Interesse zu generieren. Icon Buttons\n  lenken die Aufmerksamkeit des Benutzers verstärkt auf den Button und sollten deshalb nur verwendet\n  werden, wenn dies erwünscht ist.\n  <br />\n  Das Icon soll immer links vom Text platziert werden, ausser bei Richtungsangaben oder\n  weiterführenden Aktionen.\n</p>\n<h3>Icon Buttons ohne Text</h3>\n<p>\n  Icon Buttons ohne Text sollten nur spärlich verwendet werden. Sie sind sinnvoll, wenn die\n  Bedeutung des Icons für die grosse Mehrheit der Anwender sonnenklar ist und zusätzlicher Text eher\n  verwirren würde. Gute Beispiele sind: Hamburgermenu, Fett/Kursiv/Unterstrichen im Editor,\n  Play/Pause für Batch-Jobs.\n  <br />\n  Bei Icon-Buttons ohne Text wird die Button-Breite mit \"fa-fw\" fixiert, sodass alle Buttons gleich\n  breit sind. Zudem muss bei textlosen Buttons ein\n  <a routerLink=\"/styleguide/ui-elements/tooltips\" class=\"highlight\">Tooltip</a>\n  vorhanden sein.\n  <br />\n</p>\n\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark my-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Für mobile Applikationen müssen Icon-Buttons eine Mindestgrösse haben, dies kann mit\n    <code>btn-lg</code>\n    für kleine Viewport-Sizes erreicht werden.\n  </div>\n</div>\n\n<app-code-example src=\"ui-elements/buttons/buttons.component.html#icons\">\n  <button type=\"button\" class=\"btn btn-outline-primary mr-2\" ngbTooltip=\"Löschen\">\n    <span class=\"fas fa-trash-alt fa-fw\"></span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-primary mr-2\" ngbTooltip=\"Drucken\">\n    <span class=\"fas fa-print fa-fw\"></span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-primary mr-2\" ngbTooltip=\"Batchjob anhalten\">\n    <span class=\"fas fa-pause fa-fw\"></span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-primary mr-2\">\n    <span class=\"fas fa-envelope mr-2\"></span>\n    Newsletter abonnieren\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-primary mr-2\">\n    Weiter\n    <span class=\"fas fa-arrow-right ml-2\"></span>\n  </button>\n  <button type=\"button\" class=\"btn btn-primary\">\n    <span class=\"fas fa-check mr-2\"></span>\n    Freigeben\n  </button>\n</app-code-example>\n\n<h2 class=\"mt-5\">Buttons mit Badge</h2>\n<p>\n  Buttons können mit der Klasse\n  <code>btn-with-badge</code>\n  mit einem\n  <a routerLink=\"/styleguide/ui-elements/badges\" class=\"highlight\">Badge</a>\n  versehen werden\n</p>\n\n<app-code-example src=\"ui-elements/buttons/buttons.component.html#badge\">\n  <button type=\"button\" class=\"btn btn-outline-primary btn-with-badge mr-4\">\n    Warnungen anzeigen\n    <span class=\"badge badge-pill badge-dark\">15</span>\n  </button>\n</app-code-example>\n","import { Component } from '@angular/core';\nimport { AlertHolderDirective } from '../../../bedag-components/alert/alert-holder.directive';\n\n@Component({\n  selector: 'app-alert-buttons',\n  template: `\n    <div class=\"row\">\n      <div class=\"col-8 d-flex\">\n        <button class=\"btn btn-outline-primary w-100 mr-2\" (click)=\"infoAlert()\">\n          <span class=\"fas fa-info-circle text-info mr-2\"></span>\n          Alert anzeigen\n        </button>\n        <button class=\"btn btn-outline-primary w-100 mr-2\" (click)=\"successAlert()\">\n          <span class=\"fas fa-check-circle text-success mr-2\"></span>\n          Alert anzeigen\n        </button>\n        <button class=\"btn btn-outline-primary w-100 mr-2\" (click)=\"warningAlert()\">\n          <span class=\"fas fa-exclamation-triangle text-warning mr-2\"></span>\n          Alert anzeigen\n        </button>\n        <button class=\"btn btn-outline-primary w-100\" (click)=\"dangerAlert()\">\n          <span class=\"fas fa-exclamation-circle text-danger mr-2\"></span>\n          Alert anzeigen\n        </button>\n      </div>\n    </div>\n  `,\n  styleUrls: ['alert-buttons.component.scss'],\n})\nexport class AlertButtonsComponent {\n  constructor(private readonly alerts: AlertHolderDirective) {}\n\n  infoAlert(): void {\n    this.alerts.info(\n      'Der Server steht wegen Wartungsarbeiten von 20.30 bis 24.00 Uhr nicht zur Verfügung.'\n    );\n  }\n\n  successAlert(): void {\n    this.alerts.success('Das Ticket wurde erstellt.');\n  }\n\n  dangerAlert(): void {\n    this.alerts.danger('Das Ticket konnte nicht gespeichert werden.');\n  }\n\n  warningAlert(): void {\n    this.alerts.warning('Automatische Updates wurden deaktiviert.');\n  }\n}\n","<h1 class=\"mt-3 mb-4\">Alerts</h1>\n\n<p class=\"lead\">\n  Alerts geben dem Benutzer Feedback und unterbrechen seinen Arbeitsfluss. Sie kommunizieren\n  wichtige Informationen oder Details.\n</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    <strong>Info:</strong>\n    Für Informationen, die zeitlich beschränkt angezeigt werden sollen.\n  </li>\n  <li>\n    <strong>Success:</strong>\n    Zur Bestätigung von erfolgreich durchgeführten Aktionen.\n    <br />\n  </li>\n  <li>\n    <strong>Warning:</strong>\n    Als Warnhinweis, dass eine Aktion zwar ausgeführt werden könnte, aber besondere Aufmerksamkeit\n    gefragt ist.\n    <br />\n  </li>\n  <li>\n    <strong>Danger:</strong>\n    Als Fehlerhinweis, dass eine Aktion nicht ausgeführt werden konnte oder bei einem Fehlerfall in\n    der Applikation.\n    <br />\n  </li>\n  <li>\n    Normalerweise werden Alerts oben im Content-Bereich oder oberhalb des Inhalts eines offenen\n    Modal Dialogs angezeigt.\n    <br />\n    Ein Alert kann jedoch auch beispielsweise im offenen Tab oder nahe eines auszufüllenden\n    Formulars angezeigt werden, wenn dies die Verständlichkeit erhöht.\n  </li>\n</ul>\n\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Warning und Danger Alerts werden angezeigt, bis sie dismissed werden, während Info und Success\n    Alerts nach kurzer Verzögerung automatisch ausgeblendet werden.\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Wenn vom Benutzer eine Aktion oder die volle Aufmerksamkeit gefordert wird, sollte kein Alert\n    sondern ein Modal Dialog verwendet werden.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/ui-elements/modal-dialog\">Modal Dialog</a></li>\n  <li><a routerLink=\"/styleguide/basics/colors\">Colors</a></li>\n</ul>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Die Verwendung von Alerts ist in der\n      <a\n        class=\"external\"\n        href=\"http://getbootstrap.com/docs/4.5/components/alerts/\"\n        target=\"_blank\">\n        Bootstrap-Dokumentation\n      </a>\n      beschrieben.\n      <br />\n      Im Gegensatz zu den Bootstrap Alerts verwenden wir immer Alerts mit Icons, damit auch\n      Farbenblinde das Feedback sofort einordnen können.\n    </p>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Einfache Alerts</h2>\n<app-code-example src=\"ui-elements/alerts/alerts.component.html#basic\">\n  <p class=\"mb-1\">\n    <strong>Info:</strong>\n    Rein informativer Alert\n  </p>\n  <app-alert type=\"info\">\n    Der Server steht wegen Wartungsarbeiten von 20.30 bis 24.00 Uhr nicht zur Verfügung.\n  </app-alert>\n\n  <p class=\"mb-1\">\n    <strong>Success:</strong>\n    Die Aktion wurde erfolgreich ausgeführt\n  </p>\n  <app-alert type=\"success\">\n    Das Ticket\n    <a class=\"alert-link mx-1\">DA-42</a>\n    wurde erstellt.\n  </app-alert>\n\n  <p class=\"mb-1\">\n    <strong>Warning:</strong>\n    Wir möchten den Benutzer vor etwas warnen\n  </p>\n  <app-alert type=\"warning\">Automatische Updates wurden deaktiviert.</app-alert>\n\n  <p class=\"mb-1\">\n    <strong>Danger:</strong>\n    Die Aktion konnte nicht ausgeführt werden\n  </p>\n  <app-alert type=\"danger\">Das Ticket konnte nicht gespeichert werden.</app-alert>\n</app-code-example>\n\n<h2 class=\"mt-5\">Alerts mit Titel</h2>\n<p>\n  Bei mehrzeiligen Alerts ermöglicht eine Zusammenfassung im Titel dem Benutzer eine rasche\n  Einordnung der Meldung.\n</p>\n<app-code-example src=\"ui-elements/alerts/alerts.component.html#titel\">\n  <div class=\"alert alert-warning\" role=\"alert\">\n    <div class=\"d-flex flex-wrap\">\n      <h4 class=\"alert-heading w-100\">\n        <span class=\"fas fa-exclamation-triangle mr-2\"></span>\n        Ankündigung Wartungsfenster\n      </h4>\n      <hr class=\"w-100 my-2\" />\n      <p>\n        Aufgrund von Wartungsarbeiten an den Servern stehen in den genannten Zeiträumen folgende\n        Umgebungen nur eingeschränkt zur Verfügung:\n      </p>\n      <ul class=\"list-unstyled\">\n        <li>\n          <strong>Stufe Entwicklung:</strong>\n          Montag 11:00 - 13:00\n        </li>\n        <li>\n          <strong>Stufe Test:</strong>\n          Mittwoch 11:00 - 13:00\n        </li>\n        <li>\n          <strong>Stufe Produktion:</strong>\n          Freitag 19:00 - 21:00\n        </li>\n      </ul>\n    </div>\n  </div>\n</app-code-example>\n\n<h2 class=\"mt-5\">Schliessbare Alerts</h2>\n\n<app-code-example\n  src=\"ui-elements/alerts/alerts.component.html#dismissible,ui-elements/alerts/alerts.component.ts\">\n  <app-alert type=\"success\" (dismiss)=\"showSuccessAlert = false\" *ngIf=\"showSuccessAlert\">\n    Die Ehe wurde eingetragen.\n  </app-alert>\n\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-primary\"\n    (click)=\"showSuccessAlert = true\"\n    *ngIf=\"showSuccessAlert === false\">\n    Alert wieder anzeigen\n  </button>\n</app-code-example>\n\n<h2 class=\"mt-5\">Alerts mit Aktion</h2>\n<p>\n  Alerts können mit einer Aktion versehen werden. Dabei sollte beachtet werden, dass der Button die\n  passende Farbe zum Alert hat.\n</p>\n\n<app-code-example\n  src=\"ui-elements/alerts/alerts.component.html#action,ui-elements/alerts/alerts.component.ts\">\n  <app-alert type=\"success\" *ngIf=\"noteIsDeleted\">\n    Die Notiz wurde gelöscht.\n\n    <button type=\"button\" class=\"btn btn-success ml-auto\" (click)=\"noteIsDeleted = false\">\n      Notiz wiederherstellen\n    </button>\n  </app-alert>\n\n  <app-alert type=\"success\" *ngIf=\"!noteIsDeleted\">Die Notiz wurde wiederhergestellt.</app-alert>\n\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-primary\"\n    (click)=\"noteIsDeleted = true\"\n    *ngIf=\"!noteIsDeleted\">\n    Notiz löschen\n  </button>\n</app-code-example>\n\n<h2 class=\"mt-5\">Globale Alerts aus Typescript</h2>\n<p>\n  Eine Komponente kann Alerts senden, indem sie den\n  <code>AlertHolder</code>\n  injected und ihm den darzustellenden Text übergibt. Dazu definieren wir einen globalen\n  <code>AlertHolder</code>\n  , dessen Alerts unter dem Header dargestellt werden. Dieser\n  <code>AlertHolder</code>\n  kann auch vom globalen Error-Handler für die Anzeige von Fehlern verwendet werden.\n</p>\n\n<app-code-example\n  src=\"ui-elements/alerts/alerts.component.html#global,ui-elements/alerts/alert-buttons.component.ts\">\n  <app-alert-buttons></app-alert-buttons>\n</app-code-example>\n\n<h2 class=\"mt-5\">Lokale Alerts aus Typescript</h2>\n<p>\n  Wenn die Alerts an anderer Stelle angezeigt werden sollen, z.B. in einem Modal, können mit der\n  <code>appAlertHolder</code>\n  Direktive die Alerts untergeordneter Komponenten eingesammelt und mit der\n  <code>alert-list</code>\n  Komponente dargestellt werden:\n</p>\n\n<app-code-example\n  src=\"ui-elements/alerts/alerts.component.html#inline,ui-elements/alerts/alert-buttons.component.ts\">\n  <ng-container appAlertHolder>\n    <!-- creates new instance of appAlertHolder for injection in child elements -->\n    <div>\n      <p>\n        Alert display:\n        <br />\n      </p>\n      <app-alert-list></app-alert-list>\n      <!-- uses local instance of appAlertHolder to display alerts -->\n    </div>\n    <div class=\"mt-4\">\n      <p>Alert trigger:</p>\n      <app-alert-buttons></app-alert-buttons>\n      <!-- uses local instance of appAlertHolder to add alerts  -->\n    </div>\n  </ng-container>\n</app-code-example>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alerts',\n  templateUrl: './alerts.component.html',\n})\nexport class AlertsComponent {\n  showSuccessAlert = true;\n\n  noteIsDeleted = true;\n}\n","import { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { Injectable } from '@angular/core';\nimport { LanguageService } from '../i18n/language.service';\nimport { TranslationWidth } from '@angular/common';\n\n// since NgbDatepicker does not yet offer localization files, we take the raw data from bootstrap-datepicker\n// see https://github.com/uxsolutions/bootstrap-datepicker/tree/master/js/locales\nconst languages: {\n  [index: string]: {\n    days: string[];\n    daysShort: string[];\n    months: string[];\n    monthsShort: string[];\n  };\n} = {\n  en: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    months: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n    monthsShort: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ],\n  },\n  de: {\n    days: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],\n    daysShort: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n    months: [\n      'Januar',\n      'Februar',\n      'März',\n      'April',\n      'Mai',\n      'Juni',\n      'Juli',\n      'August',\n      'September',\n      'Oktober',\n      'November',\n      'Dezember',\n    ],\n    monthsShort: [\n      'Jan',\n      'Feb',\n      'Mär',\n      'Apr',\n      'Mai',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Okt',\n      'Nov',\n      'Dez',\n    ],\n  },\n  fr: {\n    days: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],\n    daysShort: ['Di', 'Lu', 'Ma', 'Me', 'Je', 'Ve', 'Sa'],\n    months: [\n      'Janvier',\n      'Février',\n      'Mars',\n      'Avril',\n      'Mai',\n      'Juin',\n      'Juillet',\n      'Août',\n      'Septembre',\n      'Octobre',\n      'Novembre',\n      'Décembre',\n    ],\n    monthsShort: [\n      'Jan',\n      'Fév',\n      'Mar',\n      'Avr',\n      'Mai',\n      'Jui',\n      'Jul',\n      'Aou',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Déc',\n    ],\n  },\n  it: {\n    days: ['Domenica', 'Lunedì', 'Martedì', 'Mercoledì', 'Giovedì', 'Venerdì', 'Sabato'],\n    daysShort: ['Do', 'Lu', 'Ma', 'Me', 'Gi', 'Ve', 'Sa'],\n    months: [\n      'Gennaio',\n      'Febbraio',\n      'Marzo',\n      'Aprile',\n      'Maggio',\n      'Giugno',\n      'Luglio',\n      'Agosto',\n      'Settembre',\n      'Ottobre',\n      'Novembre',\n      'Dicembre',\n    ],\n    monthsShort: [\n      'Gen',\n      'Feb',\n      'Mar',\n      'Apr',\n      'Mag',\n      'Giu',\n      'Lug',\n      'Ago',\n      'Set',\n      'Ott',\n      'Nov',\n      'Dic',\n    ],\n  },\n};\n\n// and expose it as NgbDatepicker wants\n@Injectable()\nexport class DatepickerI18n extends NgbDatepickerI18n {\n  constructor(private readonly languageService: LanguageService) {\n    super();\n  }\n\n  getWeekdayLabel(weekday: number, width?: TranslationWidth): string {\n    if (width === TranslationWidth.Wide) {\n      return languages[this.languageService.currentLanguage].days[weekday % 7]; // Ngb has Sunday last, bootstrap-datepicker has it first\n    }\n    return languages[this.languageService.currentLanguage].daysShort[weekday % 7]; // Ngb has Sunday last, bootstrap-datepicker has it first\n  }\n\n  getMonthShortName(month: number): string {\n    return languages[this.languageService.currentLanguage].monthsShort[month - 1];\n  }\n\n  getMonthFullName(month: number): string {\n    return languages[this.languageService.currentLanguage].months[month - 1];\n  }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const lang = this.languageService.currentLanguage;\n    const month = languages[lang].months[date.month - 1];\n    switch (lang) {\n      case 'de':\n        return `${date.day}. ${month} ${date.year}`;\n      case 'en':\n        return `${month} ${date.day} ${date.year}`;\n      default:\n        return `${date.day}. ${month} ${date.year}`;\n    }\n  }\n}\n","/**\n * This method is intended for dates and assumes n is a positive number with one or two digits.\n * @param n an integer >=0 and <100\n */\nexport function padNumber(n: number): string {\n  if (n > 9) {\n    return `${n}`;\n  } else {\n    return `0${n}`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { padNumber } from '../utils/utils';\n\n@Injectable()\nexport class SwissDateParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      const date = value.split('.');\n      return {\n        day: parseInt(date[0], 10),\n        month: parseInt(date[1], 10),\n        year: parseInt(date[2], 10),\n      };\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct | null): string {\n    return date ? `${padNumber(date.day)}.${padNumber(date.month)}.${date.year}` : '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { padNumber } from '../utils/utils';\n\n@Injectable()\nexport class IsoDateAdapter extends NgbDateAdapter<string> {\n  fromModel(value: string | null): NgbDateStruct | null {\n    if (value == null) {\n      return null;\n    }\n    const date = value.split('-');\n    return {\n      year: parseInt(date[0], 10),\n      month: parseInt(date[1], 10),\n      day: parseInt(date[2], 10),\n    };\n  }\n\n  toModel(date: NgbDateStruct | null): string | null {\n    if (date == null) {\n      return null;\n    }\n    return `${date.year}-${padNumber(date.month)}-${padNumber(date.day)}`;\n  }\n}\n","<div class=\"input-group\">\n  <input\n    [id]=\"id\"\n    class=\"form-control\"\n    placeholder=\"TT.MM.JJJJ\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"onChange(value)\"\n    [footerTemplate]=\"footerTemplate\"\n    ngbDatepicker\n    #d=\"ngbDatepicker\"\n    [positionTarget]=\"dateButton\" />\n  <div class=\"input-group-append\">\n    <button #dateButton class=\"btn btn-light calendar\" (click)=\"d.toggle()\" type=\"button\">\n      <span class=\"far fa-calendar-alt\"></span>\n    </button>\n  </div>\n</div>\n<ng-template #footerTemplate>\n  <hr class=\"my-0\" />\n  <button class=\"btn btn-primary btn-sm m-2 float-left\" (click)=\"selectToday()\">Heute</button>\n  <button class=\"btn btn-outline-primary btn-sm m-2 float-right\" (click)=\"d.close()\">\n    Schliessen\n  </button>\n</ng-template>\n","import { Component, forwardRef, HostBinding, Input, ViewChild } from '@angular/core';\nimport {\n  NgbCalendar,\n  NgbDateAdapter,\n  NgbDateParserFormatter,\n  NgbDatepickerI18n,\n  NgbInputDatepicker,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DatepickerI18n } from './datepicker.i18n';\nimport { SwissDateParserFormatter } from './swiss-date-parser-formatter';\nimport { IsoDateAdapter } from './iso-date-adapter';\n\n/**\n * @typeParam T - defines the type used by the backend. As long as you use the IsoDateAdapter, this will be <string>.\n */\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatepickerComponent),\n      multi: true,\n    },\n    {\n      provide: NgbDateAdapter,\n      useClass: IsoDateAdapter,\n    },\n    {\n      provide: NgbDateParserFormatter,\n      useClass: SwissDateParserFormatter,\n    },\n    {\n      provide: NgbDatepickerI18n,\n      useClass: DatepickerI18n,\n    },\n  ],\n})\nexport class DatepickerComponent<T> implements ControlValueAccessor {\n  @HostBinding('attr.id')\n  externalId: string | null = '';\n\n  @ViewChild(NgbInputDatepicker, { static: true })\n  datepicker!: NgbInputDatepicker;\n\n  @ViewChild('dateButton')\n  button!: HTMLButtonElement;\n\n  private _value!: T | null;\n\n  public get value(): T | null {\n    return this._value;\n  }\n\n  public set value(v: T | null) {\n    this._value = v;\n    this.onChange(this._value);\n    this.onTouched();\n  }\n\n  private _id = '';\n\n  @Input()\n  set id(value: string) {\n    this._id = value;\n    this.externalId = null;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  constructor(\n    private readonly calendar: NgbCalendar,\n    private readonly adapter: NgbDateAdapter<T>\n  ) {}\n\n  selectToday(): void {\n    const today = this.calendar.getToday();\n    this.value = this.adapter.toModel(today);\n    this.datepicker.navigateTo(today);\n  }\n\n  /**\n   * Empty listener, to be overwritten by 'registerOnChange'\n   */\n  onChange: (date: T | null) => void = () => undefined;\n  /**\n   * Empty listener, to be overwritten by 'registerOnTouched'\n   */\n  onTouched: () => void = () => undefined;\n\n  registerOnChange(fn: (date: T | null) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.datepicker.disabled = isDisabled;\n    this.button.disabled = isDisabled;\n  }\n\n  writeValue(obj: T): void {\n    this.value = obj;\n    this.onChange(this.value);\n  }\n}\n","<h1 class=\"mt-3 mb-4\">Modal Dialog</h1>\n\n<p class=\"lead\">\n  Ein Modal Dialog unterbricht den Arbeitsfluss des Nutzers und zentriert seine volle Aufmerksamkeit\n  auf den Dialog.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Wenn die volle Aufmerksamkeit des Nutzers gefragt ist.</li>\n  <li>\n    Wenn eine Aktion aus einer Tabelle oder Seite heraus erfolgt, z.B. Hinzufügen eines Datensatzes.\n  </li>\n  <li>\n    Die Buttons, insbesondere der ausführende Aktionsbutton, soll die Handlung verbal wiederholen\n    und nicht nur mit OK bezeichnet sein. Z.B. \"Eintragen\", \"Übernehmen\", \"Jahr abschliessen\",\n    \"Hinzufügen\", \"Dokument erzeugen\" etc.\n  </li>\n  <li>\n    Das Element im Dialog, welches den Fokus erhält, soll mit\n    <code>ngbAutofocus</code>\n    immer definiert werden.\n    <br />\n    Bei Dialogen mit Eingabefeldern sollte in der Regel das erste Eingabefeld den Fokus erhalten,\n    bei Aktionsdialogen hingegen der Primary Button.\n  </li>\n  <li>\n    Dialoge, die nur Text und Aktions-Buttons enthalten, sollen in der Regel mit\n    <span class=\"keyboard-key\">Esc</span>\n    oder via Klick auf den Backdrop schliessbar sein.\n    <br />\n    Dialoge mit Eingabefeldern hingegen nicht. Diese sollten höchstens mit\n    <span class=\"keyboard-key\">Esc</span>\n    oder Backdrop-Klick schliessbar sein, wenn noch keine Eingabe erfolgt ist.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Für Informationen, welche nicht die volle Aufmerksamkeit des Nutzers verlangen, sind Alerts\n    besser geeignet.\n    <a routerLink=\"/styleguide/ui-elements/alerts\" class=\"highlight\">Alerts</a>\n  </li>\n  <li>Es soll nie mehr als ein Dialog gleichzeitig angezeigt werden.</li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/ui-elements/alerts\">Alerts</a></li>\n  <li><a routerLink=\"/styleguide/ui-elements/datatables\">Data Tables</a></li>\n</ul>\n\n<div class=\"card my-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Wir verwenden\n      <a\n        class=\"external\"\n        href=\"https://ng-bootstrap.github.io/#/components/modal/examples\"\n        target=\"_blank\">\n        NgbModal aus ng-bootstrap\n      </a>\n      .\n    </p>\n  </div>\n</div>\n\n<app-code-example\n  src=\"ui-elements/modal-dialog/modal-dialog.component.html#d,ui-elements/modal-dialog/modal-dialog.component.ts\">\n  <button class=\"btn btn-outline-primary mb-4 mr-2\" (click)=\"open(content, 'lg')\">\n    Grosser Dialog\n  </button>\n  <button class=\"btn btn-outline-primary mb-4\" (click)=\"open(contentsm, 'sm')\">\n    Kleiner Dialog\n  </button>\n  <pre>{{ closeResult }}</pre>\n\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">Neue Anfrage erstellen</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('[x] click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <form (ngSubmit)=\"saveIssue()\">\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-12\">\n            <label class=\"required\" for=\"subject\">Titel</label>\n            <input type=\"text\" class=\"form-control\" id=\"subject\" ngbAutofocus />\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-12\">\n            <label class=\"required\" for=\"description\">Beschreibung</label>\n            <textarea id=\"description\" name=\"description\" class=\"form-control\" rows=\"5\"></textarea>\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label class=\"required\" for=\"assignee\">Bearbeiter</label>\n            <ng-select\n              id=\"assignee\"\n              [items]=\"assignees\"\n              [searchable]=\"false\"\n              placeholder=\"Bitte Bearbeiter auswählen\"></ng-select>\n          </div>\n\n          <div class=\"form-group col-md-2 col-sm-auto\">\n            <label class=\"required\" for=\"dueDate\">Ausführungsdatum</label>\n            <app-datepicker id=\"dueDate\"></app-datepicker>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"modal.dismiss('Abbrechen')\">\n        Abbrechen\n      </button>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveIssue()\">Anfrage erstellen</button>\n    </div>\n  </ng-template>\n\n  <ng-template #contentsm let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">2018 abschliessen?</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('[x] click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      Nach dem Jahresabschluss können keine weiteren Buchungen in diesem Jahr erfasst werden.\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"modal.dismiss('Abbrechen')\">\n        Abbrechen\n      </button>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeYear()\" ngbAutofocus>\n        Jahr abschliessen\n      </button>\n    </div>\n  </ng-template>\n</app-code-example>\n","import { Component } from '@angular/core';\nimport {\n  ModalDismissReasons,\n  NgbModal,\n  NgbModalOptions,\n  NgbModalRef,\n} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  templateUrl: './modal-dialog.component.html',\n})\nexport class ModalDialogComponent {\n  assignees = ['Hans Olo', 'Paul Panther'];\n\n  constructor(private readonly modalService: NgbModal) {}\n  modal!: NgbModalRef;\n  closeResult!: string;\n\n  smallDialogOptions: NgbModalOptions = {\n    size: 'sm',\n  };\n\n  largeDialogOptions: NgbModalOptions = {\n    size: 'lg',\n    backdrop: 'static',\n    keyboard: false,\n  };\n\n  private static getDismissReason(reason: ModalDismissReasons | string): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: \"${reason}\"`;\n    }\n  }\n\n  open(content: unknown, size: string): void {\n    const dialogOptions = size === 'lg' ? this.largeDialogOptions : this.smallDialogOptions;\n    this.modal = this.modalService.open(content, dialogOptions);\n    this.modal.result.then(\n      (result: string) => {\n        this.closeResult = `Closed with: \"${result}\"`;\n      },\n      (reason) => {\n        this.closeResult = `Dismissed ${ModalDialogComponent.getDismissReason(reason)}`;\n      }\n    );\n  }\n\n  saveIssue(): void {\n    this.modal.close('Anfrage erstellen');\n  }\n\n  closeYear(): void {\n    this.modal.close('Jahr abschliessen');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './datepicker-demo.component.html',\n})\nexport class DatepickerDemoComponent {\n  birthdate?: string;\n\n  targetDate = new Date().toISOString().substring(0, 10);\n}\n","<h1 class=\"mt-3 mb-4\">Datepicker</h1>\n<p class=\"lead\">Ein Datepicker ermöglicht die Auswahl eines Kalenderdatums.</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Wenn in Formularen ein Datum auszuwählen ist.</li>\n  <li>Klickt der Nutzer ins Feld, kann das Datum über die Tastatur eingegeben werden.</li>\n  <li>Bei Aufruf, steht ein Beispiel im gewünschten Format ausgegraut im Feld. (12.04.1974)</li>\n  <li>\n    Bei der Auswahl von – bis Daten werden die beiden Datumsfelder idealerweise horizontal\n    nebeneinander abgebildet.\n  </li>\n  <li>\n    Das Eingabefeld sollte nicht viel grösser sein, als das Datum Raum beansprucht.\n    <a routerLink=\"/styleguide/layout/grid\" class=\"highlight\">Grid</a>\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/ui-elements/forms/\">Forms</a></li>\n</ul>\n\n<div class=\"card my-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Als Datepicker verwenden wir den\n      <a\n        class=\"external\"\n        href=\"https://ng-bootstrap.github.io/#/components/datepicker/examples\"\n        target=\"_blank\">\n        Datepicker von ng-bootstrap\n      </a>\n      , wir zeigen aber entgegen dem Standardverhalten einen Footer an, der den Benutzer das\n      aktuelle Datum wählen lässt.\n    </p>\n    <p>\n      Da das Erstellen des Footers sehr mühsam ist, sobald mehr als ein Datepicker auf einer Maske\n      ist, gibt es eine Komponente um dies zu kapseln. Diese kann sich dann auch um allfällige\n      weiterführende Validierungen und um die Umwandlung ins fürs Backend gewünschte Datumsformat\n      kümmern. Standardmässig ist ein Adapter für das ISO-Format gesetzt, so dass die Komponente\n      sehr einfach den bisherigen\n      <code>&lt;bsg-datepicker></code>\n      ersetzen kann.\n    </p>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Datum in einem Formular</h2>\n<p>\n  Wird ein Datumsfeld in einem Formular verwendet, muss die Breite wie bei den anderen\n  Formularfeldern mittels\n  <a routerLink=\"/styleguide/layout/grid\" class=\"highlight\">Grid</a>\n  definiert werden. Idealerweise ist es trotzdem nicht zu gross, aber in diesem Fall ist das\n  Erscheinungsbild des Formulars höher zu gewichten.\n</p>\n<app-code-example\n  src=\"ui-elements/forms/datepicker/datepicker-demo.component.html#form,ui-elements/forms/datepicker/datepicker-demo.component.ts\">\n  <form>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label class=\"my-label\" for=\"birthdate\">Geburtsdatum</label>\n        <app-datepicker id=\"birthdate\" name=\"birthdate\" [(ngModel)]=\"birthdate\"></app-datepicker>\n      </div>\n    </div>\n  </form>\n  {{ birthdate | json }}\n</app-code-example>\n\n<h2 class=\"mt-5\">Alleinstehendes Datum</h2>\n<p>\n  Wird ein Datepicker alleine verwendet, kann die Klasse\n  <code>single-datepicker</code>\n  verwendet werden. Dies gibt dem Eingabefeld die optimale Breite. In einem Formular wird ein\n  solches Datumsfeld jedoch aus der Reihe fallen und soll deshalb nicht verwendet werden.\n</p>\n<app-code-example\n  src=\"ui-elements/forms/datepicker/datepicker-demo.component.html#single,ui-elements/forms/datepicker/datepicker-demo.component.ts\">\n  <form>\n    <div class=\"form-row\">\n      <div class=\"form-group single-datepicker\">\n        <label class=\"my-label\" for=\"targetDate\">Stichdatum</label>\n        <app-datepicker id=\"targetDate\" name=\"targetDate\" [(ngModel)]=\"targetDate\"></app-datepicker>\n      </div>\n    </div>\n  </form>\n  {{ targetDate | json }}\n</app-code-example>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-functionbar',\n  templateUrl: './functionbar.component.html',\n  styleUrls: ['./functionbar.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FunctionbarComponent {}\n","<div id=\"functionbarcontainer\">\n  <div id=\"functionbar\" class=\"navbar navbar-expand navbar-light bg-light p-0\">\n    <ng-content></ng-content>\n  </div>\n</div>\n","import { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-functionbar-list',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class FunctionbarListComponent {\n  @Input()\n  align: 'left' | 'right' = 'left';\n\n  @HostBinding('class') class = 'functionbarlist navbar-nav';\n\n  @HostBinding('class.ml-auto') get alignment(): boolean {\n    return this.align === 'right';\n  }\n}\n","import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-functionbar-item',\n  template: `\n    <li class=\"nav-item\">\n      <div ngbTooltip=\"{{ tooltip }}\" placement=\"bottom\">\n        <button\n          type=\"button\"\n          class=\"btn btn-light btn-functionbar btn-lg nav-item\"\n          [attr.aria-label]=\"label ? null : tooltip\"\n          [disabled]=\"disabled\"\n          (click)=\"onclick($event)\">\n          <span *ngIf=\"icon\" class=\"{{ icon }} fa-fw\" aria-hidden=\"true\"></span>\n          <small *ngIf=\"label\">{{ label }}</small>\n        </button>\n      </div>\n    </li>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FunctionbarItemComponent {\n  @Input() routerLink!: string;\n  @Input() icon!: string;\n  @Input() tooltip!: string;\n  @Input() label!: string;\n\n  @Input() disabled = false;\n\n  @Output() itemClicked = new EventEmitter<void>();\n\n  constructor(private readonly router: Router) {}\n\n  onclick(event: MouseEvent): void {\n    this.itemClicked.emit();\n    if (this.routerLink) {\n      void this.router.navigate([this.routerLink]);\n    }\n    event.stopPropagation();\n    // the (click) subscribers have also subscribed to the DOM event, and we don't want them to be invoked twice ...\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'functionbar-demo.component.html',\n})\nexport class FunctionbarDemoComponent {\n  print(): boolean {\n    window.print();\n    return false;\n  }\n\n  reload(): boolean {\n    window.location.reload();\n    return false;\n  }\n\n  noop(): boolean {\n    // We shouldn't have menu entries that do nothing, this is just to keep the demo simple.\n    // It's important to return `false` in these methods so the application will not follow\n    // the link and reload the page.\n    return false;\n  }\n}\n","<!-- Platzhalter -->\n\n<app-functionbar>\n  <app-functionbar-list>\n    <app-functionbar-item icon=\"fas fa-pen\" tooltip=\"Editieren\"></app-functionbar-item>\n    <app-functionbar-item\n      icon=\"fas fa-print\"\n      tooltip=\"Drucken\"\n      (itemClicked)=\"print()\"></app-functionbar-item>\n    <app-functionbar-item icon=\"fas fa-download\" tooltip=\"PDF Herunterladen\"></app-functionbar-item>\n    <app-functionbar-item\n      icon=\"fas fa-sync-alt\"\n      tooltip=\"Daten synchronisieren (inaktiv)\"\n      [disabled]=\"true\"\n      (itemClicked)=\"reload()\"></app-functionbar-item>\n    <app-functionbar-item label=\"Gültigkeit prüfen\"></app-functionbar-item>\n    <li class=\"nav-item dropdown\" ngbDropdown>\n      <a\n        id=\"selectMenu\"\n        class=\"btn btn-light btn-functionbar btn-lg nav-item\"\n        tabindex=\"0\"\n        ngbDropdownToggle\n        role=\"button\">\n        <small>Dossier</small>\n      </a>\n      <div class=\"dropdown-menu\" aria-labelledby=\"selectMenu\" ngbDropdownMenu>\n        <button ngbDropdownItem (click)=\"noop()\">Umbenennen</button>\n        <button ngbDropdownItem (click)=\"noop()\">Kopie erstellen</button>\n        <button ngbDropdownItem (click)=\"noop()\">Archivieren</button>\n        <button ngbDropdownItem (click)=\"noop()\">Löschen</button>\n        <button ngbDropdownItem (click)=\"reload()\">Neu laden</button>\n      </div>\n    </li>\n  </app-functionbar-list>\n\n  <app-functionbar-list align=\"right\">\n    <li class=\"nav-item\">\n      <div class=\"input-group p-1\">\n        <input\n          id=\"search-country\"\n          placeholder=\"Dossier durchsuchen\"\n          type=\"text\"\n          class=\"form-control\" />\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-light\">\n            <span class=\"fas fa-search\" aria-hidden=\"true\"></span>\n          </button>\n        </div>\n      </div>\n    </li>\n    <app-functionbar-item\n      icon=\"fas fa-comment mr-2\"\n      label=\"Kommentar erfassen\"></app-functionbar-item>\n    <li class=\"nav-item dropdown overflow-menu\" ngbDropdown placement=\"bottom-right\">\n      <button\n        id=\"overflowMenu\"\n        class=\"btn btn-light btn-functionbar btn-lg nav-item\"\n        role=\"button\"\n        ngbDropdownToggle>\n        <span class=\"fas fa-ellipsis-v fa-fw\" aria-hidden=\"true\"></span>\n      </button>\n      <div class=\"dropdown-menu\" aria-labelledby=\"overflowMenu\" ngbDropdownMenu>\n        <button ngbDropdownItem (click)=\"noop()\">Function Bar konfigurieren</button>\n        <button ngbDropdownItem (click)=\"noop()\">Verwandte Elemente hinzufügen</button>\n        <div class=\"dropdown-divider\"></div>\n        <button ngbDropdownItem (click)=\"noop()\">Code anzeigen</button>\n      </div>\n    </li>\n  </app-functionbar-list>\n</app-functionbar>\n\n<h1 class=\"mt-3 mb-4\">Function Bar</h1>\n\n<p class=\"lead\">\n  Die Funktionsleiste enthält Aktionen für die aktive Ansicht, die der Benutzer typischerweise\n  während dem Verwenden der aktuellen Ansicht auslösen will.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Für alle Bearbeitungselemente und Aktionen, die den aktuellen Contentbereich betreffen.</li>\n  <li>\n    Die Funktionsleiste kann sich entweder auf eine einzelne Ansicht (z.B. das gerade geöffnete\n    Dossier) beziehen oder Funktionen für einen ganzen Menu-Unterbereich anbieten.\n  </li>\n  <li>\n    Wenn viele Optionen vorhanden sind, sollten die am wenigsten verwendeten in Drop-Down Menus\n    gruppiert werden.\n    <br />\n    Wenn wenig Platz vorhanden ist, können die Optionen auch in einem Overflow-Menu (\n    <span class=\"fas fa-ellipsis-v fa-fw\" aria-hidden=\"true\"></span>\n    ) gruppiert werden. Wenn genügend Platz vorhanden ist, sollte das Overflow-Menu hingegen nicht\n    verwendet werden.\n  </li>\n</ul>\n\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Die Richtlinien für\n    <a routerLink=\"/styleguide/basics/icons\" class=\"highlight\">Icons</a>\n    und\n    <a routerLink=\"/styleguide/ui-elements/buttons\" fragment=\"icon-buttons\" class=\"highlight\">\n      Icon Buttons\n    </a>\n    sollen auch in der Function Bar berücksichtigt werden.\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Die Function Bar sollte keine applikationsweit verfügbaren Funktionen enthalten. Diese gehören\n    eher in den\n    <a class=\"highlight\" routerLink=\"/styleguide/layout/header\">Header</a>\n    .\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements mb-5\">\n  <li><a routerLink=\"/styleguide/layout\">Layout</a></li>\n  <li><a routerLink=\"/styleguide/layout/actionbar\">Action Bar</a></li>\n  <li><a routerLink=\"/styleguide/ui-elements/buttons\">Buttons</a></li>\n  <li><a routerLink=\"/styleguide/basics/icons\">Icons</a></li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/overflow-menu\">Overflow Menu</a>\n  </li>\n  <li><a routerLink=\"/styleguide/layout/breadcrumbs\">Breadcrumbs</a></li>\n</ul>\n\n<app-code-example src=\"layout/functionbar/functionbar-demo.component.html#basic\">\n  <!-- Zuoberst im View-Template, damit der Titel runterrutscht -->\n  <app-functionbar class=\"d-none\">\n    <app-functionbar-list>\n      <app-functionbar-item icon=\"fas fa-pen\" tooltip=\"Editieren\"></app-functionbar-item>\n      <app-functionbar-item\n        icon=\"fas fa-print\"\n        tooltip=\"Drucken\"\n        (itemClicked)=\"print()\"></app-functionbar-item>\n      <app-functionbar-item\n        icon=\"fas fa-download\"\n        tooltip=\"PDF Herunterladen\"></app-functionbar-item>\n      <app-functionbar-item\n        icon=\"fas fa-sync-alt\"\n        tooltip=\"Daten synchronisieren (inaktiv)\"\n        [disabled]=\"true\"\n        (itemClicked)=\"reload()\"></app-functionbar-item>\n      <app-functionbar-item label=\"Gültigkeit prüfen\"></app-functionbar-item>\n      <li class=\"nav-item dropdown\" ngbDropdown>\n        <a\n          id=\"selectMenu\"\n          class=\"btn btn-light btn-functionbar btn-lg nav-item\"\n          tabindex=\"0\"\n          ngbDropdownToggle\n          role=\"button\">\n          <small>Dossier</small>\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"selectMenu\" ngbDropdownMenu>\n          <button ngbDropdownItem (click)=\"noop()\">Umbenennen</button>\n          <button ngbDropdownItem (click)=\"noop()\">Kopie erstellen</button>\n          <button ngbDropdownItem (click)=\"noop()\">Archivieren</button>\n          <button ngbDropdownItem (click)=\"noop()\">Löschen</button>\n          <button ngbDropdownItem (click)=\"reload()\">Neu laden</button>\n        </div>\n      </li>\n    </app-functionbar-list>\n\n    <app-functionbar-list align=\"right\">\n      <li class=\"nav-item\">\n        <div class=\"input-group p-1\">\n          <input\n            id=\"search-country\"\n            placeholder=\"Dossier durchsuchen\"\n            type=\"text\"\n            class=\"form-control\" />\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-light\">\n              <span class=\"fas fa-search\" aria-hidden=\"true\"></span>\n            </button>\n          </div>\n        </div>\n      </li>\n      <app-functionbar-item\n        icon=\"fas fa-comment mr-2\"\n        label=\"Kommentar erfassen\"></app-functionbar-item>\n      <li class=\"nav-item dropdown overflow-menu\" ngbDropdown placement=\"bottom-right\">\n        <button\n          id=\"overflowMenu\"\n          class=\"btn btn-light btn-functionbar btn-lg nav-item\"\n          role=\"button\"\n          ngbDropdownToggle>\n          <span class=\"fas fa-ellipsis-v fa-fw\" aria-hidden=\"true\"></span>\n        </button>\n        <div class=\"dropdown-menu\" aria-labelledby=\"overflowMenu\" ngbDropdownMenu>\n          <button ngbDropdownItem (click)=\"noop()\">Function Bar konfigurieren</button>\n          <button ngbDropdownItem (click)=\"noop()\">Verwandte Elemente hinzufügen</button>\n          <div class=\"dropdown-divider\"></div>\n          <button ngbDropdownItem (click)=\"noop()\">Code anzeigen</button>\n        </div>\n      </li>\n    </app-functionbar-list>\n  </app-functionbar>\n\n  (siehe oben)\n</app-code-example>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss'],\n})\nexport class GridComponent {\n  showAlert = true;\n}\n","<h1 class=\"mt-3 mb-4\">Grid</h1>\n\n<p class=\"lead\">\n  Unser Layout basiert auf dem Bootstrap Grid System. Wie der Name bereits vermuten lässt, wird dazu\n  ein Raster angelegt, in dem sich Kind-Elemente positionieren lassen. Diese Elemente müssen nicht\n  mit festen Grössenangaben versehen werden, sondern lassen sich flexibel arrangieren. Dies\n  ermöglicht es, ein Layout zu erstellen, welches sich automatisch den verschiedenen\n  Bildschirmgrössen anpasst. Somit können wir sicherstellen, dass Applikationen sowohl auf allen\n  Geräten (vom PC bis zum Smartphone), nicht nur gut aussehen, sondern sich auch einwandfrei\n  bedienen lassen.\n</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Immer. Alle Webapplikationen basieren auf einem 12-spaltigem Grid.</li>\n  <li>\n    Das Grid unterstützt dabei, Inhalte wie Text, Tabellen, Bilder oder Formularfelder strukturiert\n    anzuordnen.\n  </li>\n  <li>\n    Es ist insbesondere darauf zu achten, dass z.B.\n    <a routerLink=\"/styleguide/ui-elements/forms\" class=\"highlight\">Formulareingabefelder</a>\n    sich nicht über zu viele Spalten erstrecken, sondern nur so breit sind, dass sie gut bedienbar\n    sind.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/layout\" class=\"highlight\">Layout</a></li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms\" class=\"highlight\">Forms</a>\n  </li>\n</ul>\n\n<div class=\"card my-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Wir verwenden das\n      <a target=\"_blank\" class=\"external\" href=\"http://getbootstrap.com/docs/4.5/layout/grid/\">\n        Bootstrap Grid System\n      </a>\n    </p>\n  </div>\n</div>\n\n<app-code-example src=\"layout/grid/grid.component.html#grid\">\n  <div class=\"container\">\n    <div class=\"row mb-4\">\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n      <div class=\"col-md-1\">.col-md-1</div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"col-md-8\">.col-md-8</div>\n      <div class=\"col-md-4\">.col-md-4</div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"col-md-4\">.col-md-4</div>\n      <div class=\"col-md-4\">.col-md-4</div>\n      <div class=\"col-md-4\">.col-md-4</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">.col-md-6</div>\n      <div class=\"col-md-6\">.col-md-6</div>\n    </div>\n  </div>\n</app-code-example>\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'actionbar-demo.component.html',\n})\nexport class ActionbarDemoComponent {}\n","<h1 class=\"mt-3 mb-4\">Action Bar</h1>\n\n<p class=\"lead\">\n  Die Action Bar enthält die Buttons für die Funktionen, welche der Benutzer erst nach Verwendung\n  der Ansicht auslösen will, wie \"Löschen\" oder \"Speichern\", und die sich auf den gesamten\n  Contentbereich beziehen.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Die Action Bar befindet sich immer am unteren Seitenrand.</li>\n  <li>\n    Sie bietet nur Aktionen, welche\n    <em>nach</em>\n    Verwendung der Ansicht gebraucht werden.\n  </li>\n  <li>\n    Es darf nur ein Primary Button verwendet werden und dieser ist rechts zu platzieren (siehe\n    <a routerLink=\"/styleguide/ui-elements/buttons\" class=\"highlight\">Buttons</a>\n    ).\n  </li>\n  <li>\n    Sie wird verwendet, wenn der Inhalt auf dem zu erwartendem Eingabegerät mindestens knapp die\n    ganze Seite einnimmt.\n    <br />\n    Sofern nicht explizit anders definiert, gehen wir davon aus, dass Fachapplikationenen auf einem\n    24\"-Bildschirm benutzt werden.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul class=\"mb-5\">\n  <li>\n    Die Action Bar soll nicht verwendet werden, wenn dadurch die\n    <a routerLink=\"/styleguide/usability/mauswege\" class=\"highlight\">Mauswege</a>\n    zu gross werden.\n  </li>\n  <li>\n    Wenn der Inhalt der Maske im Normalfall nicht den ganzen Bildschirm einnimmt, werden die\n    Aktionen direkt unterhalb des Inhalts dargestellt.\n    <br />\n    Insbesondere bei der Suche soll der Suchen-Button direkt unter dem Formular und oberhalb des\n    Resultatebereichs angezeigt werden.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements mb-5\">\n  <li><a routerLink=\"/styleguide/layout\">Layout</a></li>\n  <li><a routerLink=\"/styleguide/ui-elements/buttons\">Buttons</a></li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms/large-form-example\" class=\"highlight\">\n      Large Form Example\n    </a>\n  </li>\n  <li><a routerLink=\"/styleguide/usability/mauswege\">Mauswege</a></li>\n  <li><a routerLink=\"/styleguide/layout/functionbar\">Function Bar</a></li>\n</ul>\n\n<app-code-example src=\"layout/actionbar/actionbar-demo.component.html#basic\">\n  Siehe unten ...\n  <div id=\"actionbar\">\n    <button class=\"btn btn-outline-primary mr-2\">Abbrechen</button>\n    <button class=\"btn btn-primary\">Speichern</button>\n  </div>\n</app-code-example>\n\n<p class=\"mt-5\">\n  Abstände zwischen den Buttons können mit den\n  <a href=\"https://getbootstrap.com/docs/4.5/utilities/spacing/\">margin-utilities von Bootstrap</a>\n  kontrolliert werden.\n</p>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LayoutComponent {\n  showAlert = true;\n}\n","<h1 class=\"mt-3 mb-4\">Layout</h1>\n\n<p class=\"lead\">\n  Ein standardisierter Grundaufbau unterstützt den Nutzer bei der schnellen Orientierung und erfolgt\n  innerhalb eines festen Rasters\n  <a routerLink=\"/styleguide/layout/grid\" class=\"highlight\">Grid</a>\n  .\n  <br />\n</p>\n\n<div class=\"bl-example-container text-center\">\n  <div class=\"bl-example-container-header text-center\">Header</div>\n  <div class=\"bl-example-container-sidebar text-center\">Navigation</div>\n  <div class=\"bl-example-container-body\">\n    <div class=\"bl-functionbar text-center\">Function Bar</div>\n    <div class=\"bl-breadcrumbs\">Breadcrumbs</div>\n    Content\n    <div class=\"bl-actionbar text-center\">Action Bar</div>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Header</h2>\nDer\n<a class=\"highlight\" routerLink=\"/styleguide/layout/header\">Header</a>\nermöglicht das Branding der Anwendung (Logo und Name), und enthält applikationsweit wirksame\nAktionen wie Suche, Benutzermenu, Sprachauswahl oder Abmelden.\n\n<h2 class=\"mt-5\">Navigation</h2>\nDie\n<a class=\"highlight\" routerLink=\"/styleguide/layout/navigation\">Navigation</a>\nführt die Benutzer durch die verschiedenen Teile der Anwendung. Sie strukturiert die Inhalte bzw.\nFunktionen der Anwendung für die Benutzer. Die Struktur ist hierarchisch auf bis zu 3 Ebenen.\n\n<h2 class=\"mt-5\">Function Bar</h2>\nDie\n<a class=\"highlight\" routerLink=\"/styleguide/layout/functionbar\">Function Bar</a>\nenthält Aktionen für die aktive Ansicht, die der Benutzer typischerweise während der Verwendung der\nAnsicht auslösen will, wie \"Drucken\", \"Aktualisieren\", oder \"Bearbeiten\".\n\n<h2 class=\"mt-5\">Breadcrumbs</h2>\n<a class=\"highlight\" routerLink=\"/styleguide/layout/breadcrumbs\">Breadcrumbs</a>\ndienen zur besseren Orientierung des Benutzers bei mehr als 2 Navigations-Hierarchiestufen.\n\n<h2 class=\"mt-5\">Content</h2>\nDies ist der eigentliche Inhalts- und Arbeitsbereich.\n\n<h2 class=\"mt-5\">Action Bar</h2>\nDie\n<a class=\"highlight\" routerLink=\"/styleguide/layout/actionbar\">Action Bar</a>\nenthält die Buttons für die Funktionen, die der Benutzer erst nach Verwendung der Ansicht auslösen\nwill, wie \"Abbrechen\" oder \"Speichern\" (Für grosse Formulare) und weitere Aktionen, die sich auf den\ngesamten Contentbereich beziehen.\n\n<h2 class=\"mt-5\">Wann soll das Layout nicht verwendet werden?</h2>\n<p>\n  Es gibt wenige Ausnahmen, bei denen man bewusst von diesem Seitenaufbau abweichen kann. Mögliche\n  Beispiele sind: eine separate Startseite, Wizards oder öffentliche Dashboards. Das zugrunde\n  liegende\n  <a routerLink=\"/styleguide/layout/grid\" class=\"highlight\">Grid</a>\n  gilt aber für alle Seiten.\n</p>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/layout/grid\">Grid</a></li>\n  <li><a routerLink=\"/styleguide/layout/header\">Header</a></li>\n  <li><a routerLink=\"/styleguide/layout/navigation\">Navigation</a></li>\n  <li><a routerLink=\"/styleguide/layout/functionbar\">Function Bar</a></li>\n  <li><a routerLink=\"/styleguide/layout/actionbar\">Action Bar</a></li>\n  <li><a routerLink=\"/styleguide/layout/breadcrumbs\">Breadcrumbs</a></li>\n</ul>\n","<h1 class=\"mt-3 mb-4\">Header</h1>\n\n<p class=\"lead\">\n  Der Header zeigt dem Benutzer auf einen Blick an, in welcher Applikation er sich befindet und\n  enthält übergeordnete Funktionalitäten, die von allen Seiten aus zugänglich sein müssen. Der\n  Header enthält auf jeder Seite einer Applikation die gleichen Elemente.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Der Header kommt in allen Webapplikationen vor.</li>\n  <li>\n    Der Header enthält links immer ein Toggle mit Hamburger-Icon, mit dem die Navigation auf- und\n    zugeklappt werden kann.\n  </li>\n  <li>\n    Rechts vom Navigations-Toggle enthält der Header ein identifizierendes Element: Ein\n    <a class=\"highlight\" routerLink=\"/styleguide/basics/logo\">Logo</a>\n    mit Titel, nur ein Logo oder nur einen Titel.\n    <br />\n    Logo und Titel sind mit der Einstiegsseite der Applikation zu verlinken.\n  </li>\n  <li>\n    Auf der rechten Seite kann der Header je nach Applikation die folgenden Elemente enthalten. Alle\n    Elemente sind optional, die Reihenfolge (v.l.n.r) soll aber eingehalten werden.\n    <ol>\n      <li>Ein Suchfeld für eine applikationsweite (Volltext-) Suche</li>\n      <li>\n        Ein Hilfe-Menu, über welches der Benutzer Zugriff zu unterstützenden Informationen wie\n        Bedienungsanleitung, Keyboard-Shortcuts, stufenabhängige Informationen oder Versionsangaben\n        erhält.\n      </li>\n      <li>\n        Ein Benutzermenu, über welches der Benutzer sich An- und Abmelden kann und Zugriff auf\n        applikationsweit gültige benutzerspezifische Einstellungen wie z.B. die Sprache hat.\n      </li>\n    </ol>\n  </li>\n  <li>Wenn kein Benutzer eingeloggt ist, sollte nur der Login-Button angezeigt werden.</li>\n  <li>\n    Der Header funktioniert auf Desktops und Tablets gut, bei kleineren Mobiltelefonen müssen u.U.\n    einzelne Elemente ausgeblendet werden, damit wichtigere Elemente sichtbar bleiben.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/layout\">Layout</a></li>\n  <li><a routerLink=\"/styleguide/basics/logo\">Logo</a></li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/overflow-menu\" class=\"highlight\">Overflow Menu</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/layout/navigation\" class=\"highlight\">Navigation</a>\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Header</h2>\n<app-code-example\n  basePath=\"layout/header\"\n  src=\"header-demo.component.html#header,header-demo.component.ts\">\n  <!-- nur für Beispiel -->\n  <p>Siehe Beispiel oben.</p>\n  <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"toggleLogin()\">\n    {{ loggedIn ? 'Zeige Header in ausgeloggtem Zustand' : 'Zeige Header in eingeloggtem Zustand' }}\n  </button>\n\n  <!-- Header zum Kopieren und Einfügen -->\n  <nav\n    id=\"header\"\n    class=\"navbar navbar-expand navbar-dark bg-dark p-0 fixed-top\"\n    [attr.aria-label]=\"'Header'\">\n    <button\n      class=\"btn btn-dark menu-toggler-btn mr-2\"\n      (click)=\"toggleNavigation()\"\n      [attr.aria-label]=\"navigationToggleText\">\n      <span class=\"fas fa-bars fa-fw fa-lg\"></span>\n    </button>\n    <a class=\"navbar-brand\" routerLink=\"/styleguide/welcome\">\n      <img src=\"assets/logo.png\" class=\"applogo ml-1 mr-2\" alt=\"\" />\n      Bedag Angular Styleguide (Header Beispiel)\n    </a>\n    <div class=\"navbar-nav ml-auto mr-2 header-list\">\n      <!-- Search Bar -->\n      <div *ngIf=\"loggedIn\" class=\"form-inline mr-2\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            class=\"form-control form-control-sm\"\n            id=\"search\"\n            placeholder=\"Suchen\" />\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-light btn-sm\" type=\"button\">\n              <span class=\"fas fa-search\"></span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Help Menu -->\n      <div *ngIf=\"loggedIn\" ngbDropdown>\n        <button\n          type=\"button\"\n          class=\"btn btn-dark btn-sm\"\n          [attr.aria-label]=\"'Help'\"\n          ngbDropdownToggle>\n          <span class=\"far fa-question-circle fa-2x\" aria-hidden=\"true\"></span>\n        </button>\n        <div class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n          <button ngbDropdownItem>Version: 1.0.0</button>\n          <button ngbDropdownItem>\n            Stufe:\n            <span class=\"bagde badge-success p-1\">Entwicklung</span>\n          </button>\n          <div class=\"dropdown-divider\"></div>\n          <button ngbDropdownItem>Hilfe</button>\n          <div class=\"dropdown-divider\"></div>\n          <button ngbDropdownItem>Keyboard Shortcuts</button>\n        </div>\n      </div>\n      <!-- User Menu -->\n      <div *ngIf=\"loggedIn; else loginButton\" ngbDropdown>\n        <button type=\"button\" class=\"btn btn-dark btn-sm\" ngbDropdownToggle>\n          <span class=\"user-menu mr-2\">Hans Muster</span>\n          <span class=\"fas fa-2x fa-user-circle\" aria-hidden=\"true\"></span>\n          <span class=\"sr-only\">User menu</span>\n        </button>\n        <div class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n          <button ngbDropdownItem>Profil</button>\n          <div class=\"dropdown-divider\"></div>\n          <button ngbDropdownItem>Einstellungen</button>\n          <div class=\"dropdown-divider\"></div>\n          <button\n            ngbDropdownItem\n            *ngFor=\"let language of languages\"\n            (click)=\"selectLanguage(language)\">\n            {{ language }}\n            <span\n              [ngClass]=\"{\n                'fas fa-fw fa-check ml-1': language === selectedLanguage\n              }\"></span>\n          </button>\n          <div class=\"dropdown-divider\"></div>\n          <button (click)=\"toggleLogin()\" ngbDropdownItem>\n            {{ loggedIn ? 'Logout' : 'Login' }}\n          </button>\n        </div>\n      </div>\n      <!-- Login Button -->\n      <ng-template #loginButton>\n        <button type=\"button\" class=\"btn btn-dark btn-sm\" (click)=\"toggleLogin()\">\n          <span class=\"user-menu mr-2\">Anmelden</span>\n          <span class=\"fas fa-2x fa-sign-in-alt\" aria-hidden=\"true\"></span>\n        </button>\n      </ng-template>\n    </div>\n  </nav>\n</app-code-example>\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './header-demo.component.html',\n})\nexport class HeaderDemoComponent {\n  navigationToggleText = 'Close navigation';\n  languages = ['Deutsch', 'Français', 'English'];\n  selectedLanguage = 'Deutsch';\n  loggedIn = true;\n\n  toggleNavigation(): void {\n    const e = document.body;\n    if (e && e.classList) {\n      const closed = e.classList.toggle('close-navigation');\n      this.navigationToggleText = closed ? 'Open navigation' : 'Close navigation';\n    }\n  }\n\n  selectLanguage(language: string): void {\n    this.selectedLanguage = language;\n  }\n\n  toggleLogin(): void {\n    this.loggedIn = !this.loggedIn;\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IconToggleService } from '../../../icon-toggle.service';\n\n@Component({\n  templateUrl: 'navigation-demo.component.html',\n})\nexport class NavigationDemoComponent {\n  constructor(public router: Router, public toggler: IconToggleService) {}\n}\n","<h1 class=\"mt-3 mb-4\">Navigation</h1>\n\n<p class=\"lead\">\n  Die Navigation enthält die zentralen Menupunkte der Applikation. Sie organisiert Inhalte und\n  Funktionen der Anwendung auf bis zu 3 Hierarchiestufen.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Sie ist immer links angeordnet.</li>\n  <li>Sie kann mit dem Hamburger-Icon im Header auf- und zugeklappt werden.</li>\n  <li>\n    Sind Unternavigationspunkte vorhanden, werden diese mit einem Pfeil nach rechts ausgezeichnet.\n  </li>\n  <li>Wenn keine sinnvollen Icons vorhanden sind, ist es besser auf Icons zu verzichten.</li>\n  <li>\n    Globale Systemeinstellungen für Administratoren sind an unterster Stelle zu platzieren, falls\n    vorhanden.\n    <br />\n    Systemeinstellungen, die nur den eingeloggten Benutzer betreffen, sind im Benutzermenu im\n    <a class=\"highlight\" routerLink=\"/styleguide/layout/header\">Header</a>\n    zu platzieren.\n  </li>\n  <li>\n    Informationen (\"About\", \"Hilfe\" etc.) gehören nicht ins Navigationsmenu, sondern in das\n    Hilfe-Menu im\n    <a class=\"highlight\" routerLink=\"/styleguide/layout/header\">Header</a>\n    .\n  </li>\n  <li>\n    Wenn viel Platz im Inhaltsbereich gebraucht wird, kann die Navigation im zugeklappten Zustand\n    auf Icons reduziert werden.\n  </li>\n</ul>\n\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Die URL-Struktur der Anwendung sollte mit der Hierarchie der Main Navigation immer\n    übereinstimmen. Siehe URL dieser Seite als Beispiel:\n    <code>...{{ this.router.url }}</code>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>Auf besonderen Seiten wie z.B. separate Einstiegsseiten oder öffentliche Dashboards.</li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/layout\">Layout</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/basics/icons\">Icons</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/links\">Links</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/layout/header\">Header</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/layout/breadcrumbs\">Breadcrumbs</a>\n  </li>\n</ul>\n\n<div class=\"card my-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Die\n      <code>app-nav-menu</code>\n      Komponente dient als Container für die Navigation und kümmert sich um allgemeine Funktionen\n      wie das Ein- und Ausblenden. Mit dem Attribut\n      <code>startExpanded</code>\n      kann ein Untermenu bereits beim Laden der Seite aufgeklappt werden.\n    </p>\n\n    <p>\n      Die\n      <code>app-nav-item</code>\n      Komponente beschreibt einen einzelnen Eintrag in der Navigation, wobei die Hierarchie durch\n      Verschachtelung beschrieben wird. Sie akzeptiert folgende Inputs:\n    </p>\n\n    <dl class=\"row\">\n      <dt class=\"col-sm-2\">icon</dt>\n      <dd class=\"col-sm-10\">CSS-Klassenname des Fontawesome-Icons</dd>\n      <dt class=\"col-sm-2\">label</dt>\n      <dd class=\"col-sm-10\">Label-Text für das Navigationselement</dd>\n      <dt class=\"col-sm-2\">url</dt>\n      <dd class=\"col-sm-10\">Die interne URL, zu der navigiert werden soll</dd>\n      <dt class=\"col-sm-2\">href</dt>\n      <dd class=\"col-sm-10\">Die externe URL, zu der navigiert werden soll</dd>\n      <dt class=\"col-sm-2\">target</dt>\n      <dd class=\"col-sm-10\">\n        Definiert in welchem Fenster bzw. Tab der Link geöffnet werden soll. Entspricht dem\n        <a\n          class=\"external\"\n          href=\"https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-a-element\"\n          target=\"_blank\">\n          \"target\" Attribut in HTML\n        </a>\n        .\n      </dd>\n    </dl>\n  </div>\n</div>\n\n<app-code-example src=\"../app-nav.component.html\">\n  <p>Navigationsmenu des Bedag Styleguides</p>\n  <p>\n    Hinweis: Der Toggler wurde zu Demonstrationszwecken implementiert - in einer normalen\n    Applikation sollte man sich auf eine Variante festlegen.\n  </p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-primary\"\n    (click)=\"toggler.showIcons = !toggler.showIcons\">\n    {{ toggler.showIcons ? 'Zeige Navigation ohne Icons' : 'Zeige Navigation mit Icons' }}\n  </button>\n</app-code-example>\n\n<h2 class=\"mt-5\">Navigation im zugeklappten Zustand auf Icons reduzieren</h2>\n<p>\n  Wenn die Navigation zugeklappt wird, verschwindet sie vollständig.\n  <br />\n  Für gewisse Applikationen, bei denen viel Raum im Inhaltsbereich gebraucht wird, kann es von\n  Vorteil sein, wenn die Navigation stattdessen auf Icons reduziert wird. Sie nimmt dadurch weniger\n  Platz in Anspruch, bleibt aber immer noch bedienbar. Für Mobile-Applikationen ist diese Variante\n  eher nicht geeignet.\n  <br />\n  Im\n  <a href=\"https://confluence.se.bedag.ch/x/IIFaBg\" class=\"external\" target=\"_blank\">Notariat+</a>\n  wurde diese Variante der Styleguide-Navigation umgesetzt und kann als Beispiel verwendet werden.\n  <a\n    class=\"external\"\n    target=\"_blank\"\n    href=\"https://stash.se.bedag.ch/projects/RAUM-CAPI/repos/capitastra-parent/browse/capitastra-client/src/app/core/extension/navigation?at=refs%2Fheads%2Ffeature%2Fnotariat-plus-development\">\n    Die Implementierung kann auf dem Bitbucket Server nachgeschlagen werden.\n  </a>\n  <br />\n</p>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BreadcrumbsComponent {}\n","<nav aria-label=\"breadcrumb\">\n  <ol class=\"breadcrumb mt-2\">\n    <li class=\"breadcrumb-item\">\n      <a routerLink=\"/styleguide/welcome\">Styleguide</a>\n    </li>\n    <li class=\"breadcrumb-item\">\n      <a routerLink=\"/styleguide/layout\">Layout</a>\n    </li>\n    <li class=\"breadcrumb-item active\" aria-current=\"page\">Breadcrumbs</li>\n  </ol>\n</nav>\n\n<h1 class=\"mt-3 mb-4\">Breadcrumbs</h1>\n\n<p class=\"lead\">\n  Ein Breadcrumb (auch Pfadnavigation) zeigt dem Nutzer zusätzlich zur Hauptnavigation, wo er sich\n  innerhalb der Navigationshierarchie befindet.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Wenn es mehr als zwei Hierarchieebenen gibt und die Übersicht verloren gehen könnte.</li>\n  <li>\n    Wenn nicht direkt mittels Navigation auf die Seite navigiert werden kann. (z.B. Detailansichten)\n  </li>\n  <li>\n    Die Breadcrumb-Navigation wird unterhalb der Function Bar im Inhaltsbereich platziert\n    <a class=\"highlight\" routerLink=\"/styleguide/layout\">Layout</a>\n  </li>\n  <li>Die aktuelle Seite ist immer fett ausgezeichnet.</li>\n  <li>Die übergeordneten Einträge sind mit der entsprechenden Seite verlinkt.</li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Bei einer oder zwei Hierarchieebenen (Navigationsebenen) ist die Hauptnavigation ausreichend für\n    die Orientierung des Nutzers.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li><a routerLink=\"/styleguide/layout\">Layout</a></li>\n  <li><a routerLink=\"/styleguide/layout/navigation\">Navigation</a></li>\n  <li><a routerLink=\"/styleguide/layout/functionbar\">Function Bar</a></li>\n</ul>\n\n<div class=\"card my-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Wir realisieren Breadcrumbs mit Hilfe der Bootstrap-Klassen\n      <code>breadcrumb</code>\n      und\n      <code>breadcrumb-item</code>\n      .\n    </p>\n  </div>\n</div>\n\n<app-code-example src=\"layout/breadcrumbs/breadcrumbs.component.html#crumbs\">\n  <nav aria-label=\"breadcrumb\">\n    <ol class=\"breadcrumb mt-2\">\n      <li class=\"breadcrumb-item\">\n        <a routerLink=\"/styleguide\">Styleguide</a>\n      </li>\n      <li class=\"breadcrumb-item\">\n        <a routerLink=\"/styleguide/ui-elements\">UI Elements</a>\n      </li>\n      <li class=\"breadcrumb-item active\" aria-current=\"page\">Breadcrumbs</li>\n    </ol>\n  </nav>\n\n  <p>Für ein korrekt platziertes Beispiel siehe oben auf dieser Seite.</p>\n</app-code-example>\n","export const DATA: Array<{ type: string; shortNameDe: string }> = [\n  {\n    type: 'Land',\n    shortNameDe: 'Schweiz',\n  },\n  {\n    type: 'Land',\n    shortNameDe: 'Deutschland',\n  },\n  {\n    type: 'Land',\n    shortNameDe: 'Italien',\n  },\n  {\n    type: 'Land',\n    shortNameDe: 'Spanien',\n  },\n  {\n    type: 'Land',\n    shortNameDe: 'Frankreich',\n  },\n  {\n    type: 'Land',\n    shortNameDe: 'Belgien',\n  },\n  {\n    type: 'Land',\n    shortNameDe: 'Jordanien',\n  },\n  {\n    type: 'Land',\n    shortNameDe: 'Kolumbien',\n  },\n  {\n    type: 'Land',\n    shortNameDe: 'Venezuela',\n  },\n  {\n    type: 'Ort',\n    shortNameDe: 'Bern',\n  },\n  {\n    type: 'Ort',\n    shortNameDe: 'Zürich',\n  },\n  {\n    type: 'Ort',\n    shortNameDe: 'St. Gallen',\n  },\n  {\n    type: 'Ort',\n    shortNameDe: 'Fribourg',\n  },\n  {\n    type: 'Ort',\n    shortNameDe: 'Ostermundigen',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '3052 (Zollikofen)',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '3421 (Rüti b. Lyssach)',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '3421 (Lyssach)',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '6274 (Eschenbach LU)',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '6000 (Luzern)',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '3000 (Bern)',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '3011 (Bern)',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '3012 (Bern)',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '3013 (Bern)',\n  },\n  {\n    type: 'PLZ',\n    shortNameDe: '8000 (Zürich)',\n  },\n  {\n    type: 'Kanton',\n    shortNameDe: 'Bern',\n  },\n  {\n    type: 'Kanton',\n    shortNameDe: 'Freiburg',\n  },\n  {\n    type: 'Kanton',\n    shortNameDe: 'Wallis',\n  },\n  {\n    type: 'Kanton',\n    shortNameDe: 'Graubünden',\n  },\n  {\n    type: 'Kanton',\n    shortNameDe: 'Tessin',\n  },\n  {\n    type: 'Kanton',\n    shortNameDe: 'Zürich',\n  },\n  {\n    type: 'Kanton',\n    shortNameDe: 'Basel Stadt',\n  },\n];\n","<h1 class=\"mt-3 mb-4\">Autocompletion</h1>\n\n<p class=\"lead\">\n  Unterstützt Benutzer bei der effizienten Suche nach Inhalten für Formulareingabefelder.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Wird in Suchfeldern eingesetzt, sobald der Nutzer mit Tippen beginnt.\n    <br />\n    Je nach Grösse des Datasets erst ab dem zweiten oder dritten Buchstaben anzeigen, um die\n    Applikation nicht zu verlangsamen.\n  </li>\n  <li>\n    Wenn unterschiedliche Kategorien von Daten in einem Autocomplete-Popup angezeigt werden, soll\n    die Kategorie-Bezeichnung ebenfalls angezeigt werden. Dazu kann das Autocomplete-Popup\n    individuell gestaltet werden (Siehe Beispiel mit Template).\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Wenn keine sinnvollen Vorschläge gemacht werden können oder diese nicht sinnvoll unterschieden\n    werden können.\n    <br />\n    z.B. Eingabe: \"54\", wenn dies die Postleitzahl, die Hausnummer oder die Kundennummer sein kann.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms/\" class=\"highlight\">Forms</a>\n  </li>\n</ul>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Für die Umsetzung des Autocomplete verwenden wir\n      <a\n        class=\"external\"\n        href=\"https://ng-bootstrap.github.io/#/components/typeahead/api\"\n        target=\"_blank\">\n        ngbTypeahead\n      </a>\n      .\n      <br />\n      In den Typescript Files der Code-Beispiele befinden sich zwei verschiedene Suchalgorithmen,\n      auf die man aufbauen kann.\n    </p>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Einfaches Autocomplete</h2>\n<app-code-example\n  basePath=\"ui-elements/forms/autocompletion\"\n  src=\"autocompletion-demo.component.html#basic,autocompletion-demo.component.ts,data.ts\">\n  <div class=\"row\">\n    <div class=\"col-10 col-md-6 col-lg-4\">\n      <label for=\"search-country\" class=\"sr-only\">Land suchen</label>\n      <div class=\"input-group\">\n        <input\n          id=\"search-country\"\n          placeholder=\"Land suchen\"\n          type=\"text\"\n          class=\"form-control\"\n          [(ngModel)]=\"country\"\n          [ngbTypeahead]=\"searchCountries\"\n          [editable]=\"false\" />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-search\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</app-code-example>\n\n<h2 class=\"mt-5\">Autocomplete mit Template</h2>\n<app-code-example\n  basePath=\"ui-elements/forms/autocompletion\"\n  src=\"autocompletion-demo.component.html#complex,autocompletion-demo.component.ts,data.ts\">\n  <div class=\"row\">\n    <div class=\"col-10 col-md-6 col-lg-4\">\n      <label for=\"search-item\" class=\"sr-only\">Land, Kanton, Ort, PLZ</label>\n      <div class=\"input-group\">\n        <input\n          id=\"search-item\"\n          placeholder=\"Land, Kanton, Ort, PLZ\"\n          type=\"text\"\n          class=\"form-control\"\n          [(ngModel)]=\"item\"\n          [ngbTypeahead]=\"searchLocation\"\n          [resultTemplate]=\"itemTemplate\"\n          [inputFormatter]=\"formatItem\"\n          [editable]=\"false\" />\n        <div class=\"input-group-append\">\n          <div class=\"input-group-text\">\n            <span class=\"fas fa-search\"></span>\n          </div>\n        </div>\n      </div>\n      <ng-template #itemTemplate let-r=\"result\" let-t=\"term\">\n        <div class=\"autocomplete-result\">\n          <ngb-highlight [result]=\"r.shortNameDe\" [term]=\"t\"></ngb-highlight>\n          <ngb-highlight\n            class=\"text-secondary float-right ml-4\"\n            [result]=\"r.type\"\n            [term]=\"t\"></ngb-highlight>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</app-code-example>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { Observable, OperatorFunction } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DATA } from './data';\n\nconst MAX_SEARCH_RESULTS = 10;\n\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './autocompletion-demo.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AutocompletionDemoComponent {\n  private readonly countries: string[] = DATA.filter((t) => t.type === 'Land').map(\n    (t) => t.shortNameDe\n  );\n  private readonly data: Item[] = DATA.map((item) => new Item(item.type, item.shortNameDe));\n  public country!: string;\n\n  public item!: Item;\n\n  /** EXAMPLE Simple search method\n   * Results that start with the exact search term will be shown first.\n   * This search algorithm is suited for data sets consisting of single words.\n   * For a more complete algorithm see below.\n   */\n  searchCountries: OperatorFunction<string, readonly string[]> = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      filter((term) => term.length > 0),\n      map((term) => {\n        const normalizedTerm = term.toLowerCase().trim();\n        const startsWith = this.countries\n          .filter((c) => c.toLowerCase().startsWith(normalizedTerm))\n          .slice(0, MAX_SEARCH_RESULTS);\n        const remaining = MAX_SEARCH_RESULTS - startsWith.length;\n        if (remaining === 0) {\n          return startsWith;\n        }\n        const contains = this.countries\n          .filter((c) => c.toLowerCase().includes(normalizedTerm, 1))\n          .slice(0, remaining);\n        return startsWith.concat(contains);\n      })\n    );\n\n  /** EXAMPLE Complex search method\n   * This search algorithm is suited for data sets consisting of multiple words.\n   * 1st priority: Results that start with the exact search term.\n   * 2nd priority: Results that contain a word, starting with the exact search term.\n   * 3rd priority: Results containing the search term anywhere.\n   */\n  searchLocation: OperatorFunction<string, readonly Item[]> = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      filter((term) => term.length > 0),\n      map((term) => {\n        const normalizedTerm = term.toLowerCase().trim();\n        let result = this.data\n          .filter((c) => c.startsWith(normalizedTerm))\n          .slice(0, MAX_SEARCH_RESULTS);\n        let remaining = MAX_SEARCH_RESULTS - result.length;\n\n        if (remaining > 0) {\n          const tokenMatches = this.data\n            .filter((c) => !result.includes(c))\n            .filter((c) => c.tokenMatch(normalizedTerm))\n            .slice(0, MAX_SEARCH_RESULTS);\n          result = result.concat(tokenMatches);\n          remaining = MAX_SEARCH_RESULTS - result.length;\n        }\n\n        if (remaining > 0) {\n          const contains = this.data\n            .filter((c) => !result.includes(c))\n            .filter((c) => c.matches(normalizedTerm))\n            .slice(0, remaining);\n          result = result.concat(contains);\n        }\n        return result;\n      })\n    );\n\n  formatItem(item: Item): string {\n    return `${item.shortNameDe}`;\n  }\n}\n\nclass Item {\n  constructor(public type: string, public shortNameDe: string) {}\n\n  public startsWith(term: string): boolean {\n    return this.shortNameDe.toLowerCase().startsWith(term);\n  }\n\n  public tokenMatch(term: string): boolean {\n    const terms = term.split(/\\s+/);\n    const tokens = this.shortNameDe.toLowerCase().split(/\\s+/);\n    let tokenIndex = -1;\n    for (const termToken of terms) {\n      let found = false;\n      for (let i = tokenIndex + 1; i < tokens.length; i++) {\n        if (tokens[i].startsWith(termToken)) {\n          tokenIndex = i;\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public matches(term: string): boolean {\n    return this.shortNameDe.toLowerCase().indexOf(term) >= 0;\n  }\n}\n","<h1 class=\"mt-3 mb-4\">Tabs</h1>\n\n<p class=\"lead\">\n  Tabs eignen sich insbesondere zum Unterteilen von grossen Geschäften oder Dossiers mit vielen\n  Datenlabels oder Formularfeldern. Sie ermöglichen einen effizienten Wechsel zwischen den einzelnen\n  Teilbereichen.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Wenn der Nutzer zwischen verschiedenen Ansichten wechseln will, ohne dass es eine logische\n    sequentielle Abfolge gibt. (z.B. Produkteigenschaften, Technische Daten, Downloads)\n  </li>\n  <li>\n    Das Dropdown kann eingesetzt werden, wenn:\n    <ol>\n      <li>\n        ... weiterführende Aktionen angeboten werden sollen, die zu der in den Tabs angezeigten\n        Entität gehören. In diesem Fall ist das Dropdown rechtsbündig zu platzieren.\n      </li>\n      <li>... es zu einem Tab mehrere logische Inhalte gibt. Z.B. Anzeige für die CH, DE, AT.</li>\n      <li>\n        ... es sehr viele Tabs gibt und diese aus Platzgründen (kleine Screengrössen) in ein\n        \"Overflow-Tab\" ausgelagert werden sollen.\n      </li>\n    </ol>\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Wenn der Nutzer Inhalte hintereinander lesen soll. Dann ist eine Seitenstruktur mit Untertiteln\n    besser.\n  </li>\n</ul>\n\n<div class=\"card my-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    Für die Implementierung von Tabs verwenden wir die\n    <a\n      class=\"external\"\n      href=\"https://ng-bootstrap.github.io/#/components/nav/overview\"\n      target=\"_blank\">\n      ng-bootstrap Nav\n    </a>\n    Komponente. Dort finden sich auch zahlreiche\n    <a\n      class=\"external\"\n      href=\"https://ng-bootstrap.github.io/#/components/nav/examples\"\n      target=\"_blank\">\n      Code-Beispiele\n    </a>\n    .\n    <br />\n    Das Design wird vom Styleguide überschrieben.\n  </div>\n</div>\n\n<app-code-example src=\"ui-elements/tabs/tabs.component.html#simple\">\n  <ul ngbNav #nav=\"ngbNav\" [activeId]=\"1\" class=\"nav-tabs\">\n    <li [ngbNavItem]=\"1\">\n      <a ngbNavLink>Person</a>\n      <ng-template ngbNavContent>\n        <div class=\"ml-3 mt-4\">\n          <p class=\"title-divider font-weight-bold\">Personendaten</p>\n          <dl class=\"row\">\n            <dt class=\"col-sm-3\">Amtlicher Name:</dt>\n            <dd class=\"col-sm-9\">Muster</dd>\n            <dt class=\"col-sm-3\">Vornamen:</dt>\n            <dd class=\"col-sm-9\">Hans Ferdinand</dd>\n            <dt class=\"col-sm-3\">Geburtsdatum:</dt>\n            <dd class=\"col-sm-9\">06.11.1963</dd>\n            <dt class=\"col-sm-3\">Geschlecht:</dt>\n            <dd class=\"col-sm-9\">männlich</dd>\n          </dl>\n          <p class=\"title-divider font-weight-bold mt-4\">Zusatzangaben Person</p>\n          <dl class=\"row\">\n            <dt class=\"col-sm-3\">Korrespondenzsprache:</dt>\n            <dd class=\"col-sm-9\">Deutsch</dd>\n          </dl>\n        </div>\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"2\">\n      <a ngbNavLink>Adressen</a>\n      <ng-template ngbNavContent>\n        <div class=\"ml-3 mt-4\">\n          <p class=\"font-weight-bold\">Adressen</p>\n        </div>\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"3\">\n      <a ngbNavLink>Beziehungen</a>\n      <ng-template ngbNavContent>\n        <div class=\"ml-3 mt-4\">\n          <p class=\"font-weight-bold\">Beziehungen</p>\n        </div>\n      </ng-template>\n    </li>\n    <li ngbNavItem [disabled]=\"true\">\n      <a ngbNavLink>Disabled Tab</a>\n      <ng-template ngbNavContent>\n        <p>Geheim</p>\n      </ng-template>\n    </li>\n    <li ngbDropdown class=\"nav-item ml-auto\">\n      <a href (click)=\"(false)\" class=\"nav-link\" ngbDropdownToggle>Person nachschlagen</a>\n      <div ngbDropdownMenu>\n        <button ngbDropdownItem>SUSA</button>\n        <button ngbDropdownItem>NESKO-Frontend</button>\n        <button ngbDropdownItem>Geres Personenindex</button>\n        <button ngbDropdownItem disabled>Capitastra</button>\n        <div class=\"dropdown-divider\"></div>\n        <button ngbDropdownItem>Infostar</button>\n        <button ngbDropdownItem>Zefix</button>\n        <button ngbDropdownItem>ZEMIS</button>\n      </div>\n    </li>\n  </ul>\n  <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n</app-code-example>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TabsComponent {}\n","export interface AddressData extends IndexedByFieldname {\n  _id: string;\n  name: string;\n  vorname: string;\n  company: string;\n  email: string;\n  phone: string;\n  address: string;\n  plz: number;\n  ort: string;\n}\n/**\n * This type definition is only required for accessing the data by using the field name as index.\n * If you replace the sortAddressData function with sortBy or orderBy from underscore or lodash,\n * you most likely won't need it.\n */\ntype IndexedByFieldname = { [index: string]: string | number };\n\nexport const ADDRESS_DATA: Array<AddressData> = [\n  {\n    _id: '5a65b29933c88887f184ffd4',\n    name: 'Salazar',\n    vorname: 'Yang',\n    company: 'Hometown',\n    email: 'salazaryang@hometown.com',\n    phone: '+1 (815) 411-2873',\n    address: 'Nassau Street 818',\n    plz: 1064,\n    ort: 'Layhill',\n  },\n  {\n    _id: '5a65b299038c6e1b52421d81',\n    name: 'Whitehead',\n    vorname: 'Wells',\n    company: 'Corporana',\n    email: 'whiteheadwells@corporana.com',\n    phone: '+1 (810) 443-3512',\n    address: 'Chestnut Street 847',\n    plz: 1297,\n    ort: 'Rivereno',\n  },\n  {\n    _id: '5a65b2995bbff8dc9b6b8518',\n    name: 'Ward',\n    vorname: 'Collier',\n    company: 'Zillanet',\n    email: 'wardcollier@zillanet.com',\n    phone: '+1 (977) 547-3822',\n    address: 'Lewis Place 478',\n    plz: 7149,\n    ort: 'Chapin',\n  },\n  {\n    _id: '5a65b29994f0794facee7662',\n    name: 'Sanders',\n    vorname: 'Fox',\n    company: 'Enaut',\n    email: 'sandersfox@enaut.com',\n    phone: '+1 (843) 461-2166',\n    address: 'Vanderbilt Street 246',\n    plz: 8091,\n    ort: 'Robinson',\n  },\n  {\n    _id: '5a65b299eebef1e8039bad94',\n    name: 'Wiggins',\n    vorname: 'Nieves',\n    company: 'Exostream',\n    email: 'wigginsnieves@exostream.com',\n    phone: '+1 (827) 451-3835',\n    address: 'Jackson Street 308',\n    plz: 8649,\n    ort: 'Carrsville',\n  },\n  {\n    _id: '5a65b299b1b40887ab016711',\n    name: 'Ramirez',\n    vorname: 'Hart',\n    company: 'Geologix',\n    email: 'ramirezhart@geologix.com',\n    phone: '+1 (983) 446-3189',\n    address: 'Bedford Place 676',\n    plz: 7752,\n    ort: 'Needmore',\n  },\n  {\n    _id: '5a65b29910246272cee7354f',\n    name: 'Bray',\n    vorname: 'Sears',\n    company: 'Zaggle',\n    email: 'braysears@zaggle.com',\n    phone: '+1 (887) 495-2590',\n    address: 'Furman Avenue 398',\n    plz: 5870,\n    ort: 'Tilden',\n  },\n  {\n    _id: '5a65b299cee18a7022736e2f',\n    name: 'Carey',\n    vorname: 'Mendez',\n    company: 'Vitricomp',\n    email: 'careymendez@vitricomp.com',\n    phone: '+1 (831) 464-3757',\n    address: 'Stone Avenue 454',\n    plz: 2418,\n    ort: 'Echo',\n  },\n  {\n    _id: '5a65b299a754de365a97319f',\n    name: 'Roach',\n    vorname: 'Mayer',\n    company: 'Mixers',\n    email: 'roachmayer@mixers.com',\n    phone: '+1 (915) 416-3059',\n    address: 'Beaumont Street 580',\n    plz: 3062,\n    ort: 'Matheny',\n  },\n  {\n    _id: '5a65b29953acecc2f6a9acd3',\n    name: 'Dianne',\n    vorname: 'Hicks',\n    company: 'Acruex',\n    email: 'diannehicks@acruex.com',\n    phone: '+1 (939) 476-2331',\n    address: 'Moore Place 443',\n    plz: 1857,\n    ort: 'Adamstown',\n  },\n  {\n    _id: '5a65b299c8dcd413daeacf2a',\n    name: 'Gayle',\n    vorname: 'Cote',\n    company: 'Gology',\n    email: 'gaylecote@gology.com',\n    phone: '+1 (970) 559-2432',\n    address: 'Arkansas Drive 580',\n    plz: 2373,\n    ort: 'Warren',\n  },\n  {\n    _id: '5a65b299c1170ec75bffd8d5',\n    name: 'Maria',\n    vorname: 'Moon',\n    company: 'Assistix',\n    email: 'mariamoon@assistix.com',\n    phone: '+1 (881) 403-3592',\n    address: 'Poplar Street 499',\n    plz: 2640,\n    ort: 'Hartsville/Hartley',\n  },\n  {\n    _id: '5a65b299ff94dc62b76545d2',\n    name: 'Foster',\n    vorname: 'Goodwin',\n    company: 'Ziggles',\n    email: 'fostergoodwin@ziggles.com',\n    phone: '+1 (955) 517-3966',\n    address: 'Portal Street 336',\n    plz: 6900,\n    ort: 'Ebro',\n  },\n  {\n    _id: '5a65b2997787b485e5a0bfca',\n    name: 'Fran',\n    vorname: 'Griffith',\n    company: 'Printspan',\n    email: 'frangriffith@printspan.com',\n    phone: '+1 (881) 503-2969',\n    address: 'Lewis Avenue 768',\n    plz: 6972,\n    ort: 'Brandermill',\n  },\n  {\n    _id: '5a65b2996e10b209bd660435',\n    name: 'Reeves',\n    vorname: 'Kemp',\n    company: 'Maxemia',\n    email: 'reeveskemp@maxemia.com',\n    phone: '+1 (856) 512-2669',\n    address: 'Brooklyn Avenue 833',\n    plz: 7743,\n    ort: 'Biehle',\n  },\n  {\n    _id: '5a65b299e3af09fb91dc2dc9',\n    name: 'Riley',\n    vorname: 'Francis',\n    company: 'Aquazure',\n    email: 'rileyfrancis@aquazure.com',\n    phone: '+1 (967) 466-2551',\n    address: 'Locust Street 553',\n    plz: 2125,\n    ort: 'Shasta',\n  },\n  {\n    _id: '5a65b2994661ee67056651b7',\n    name: 'Herrera',\n    vorname: 'Wise',\n    company: 'Sybixtex',\n    email: 'herrerawise@sybixtex.com',\n    phone: '+1 (881) 494-3527',\n    address: 'Cornelia Street 856',\n    plz: 1715,\n    ort: 'Brookfield',\n  },\n  {\n    _id: '5a65b299546f8843b817a0dd',\n    name: 'Leigh',\n    vorname: 'Campos',\n    company: 'Zilla',\n    email: 'leighcampos@zilla.com',\n    phone: '+1 (977) 570-3702',\n    address: 'Lincoln Terrace 606',\n    plz: 8134,\n    ort: 'Dorneyville',\n  },\n  {\n    _id: '5a65b2992516de18b79852fe',\n    name: 'Cristina',\n    vorname: 'Gilmore',\n    company: 'Applidec',\n    email: 'cristinagilmore@applidec.com',\n    phone: '+1 (808) 548-3042',\n    address: 'Grove Place 201',\n    plz: 7746,\n    ort: 'Robbins',\n  },\n  {\n    _id: '5a65b2993451b9f82f5fa4c1',\n    name: 'Mcconnell',\n    vorname: 'Guzman',\n    company: 'Neptide',\n    email: 'mcconnellguzman@neptide.com',\n    phone: '+1 (841) 445-2693',\n    address: 'Robert Street 359',\n    plz: 6212,\n    ort: 'Richville',\n  },\n  {\n    _id: '5a65b29938d44d972427ac09',\n    name: 'Hobbs',\n    vorname: 'Travis',\n    company: 'Collaire',\n    email: 'hobbstravis@collaire.com',\n    phone: '+1 (808) 442-2106',\n    address: 'Just Court 693',\n    plz: 7201,\n    ort: 'Colton',\n  },\n  {\n    _id: '5a65b2990853031786fd703b',\n    name: 'Paul',\n    vorname: 'Donaldson',\n    company: 'Housedown',\n    email: 'pauldonaldson@housedown.com',\n    phone: '+1 (962) 423-3375',\n    address: 'Bushwick Court 488',\n    plz: 6388,\n    ort: 'Catharine',\n  },\n  {\n    _id: '5a65b299fc5e490680f4f46f',\n    name: 'Taylor',\n    vorname: 'Hammond',\n    company: 'Beadzza',\n    email: 'taylorhammond@beadzza.com',\n    phone: '+1 (880) 580-2863',\n    address: 'Gem Street 557',\n    plz: 7476,\n    ort: 'Bergoo',\n  },\n  {\n    _id: '5a65b299bf76799f34754389',\n    name: 'Elise',\n    vorname: 'Mclean',\n    company: 'Dreamia',\n    email: 'elisemclean@dreamia.com',\n    phone: '+1 (959) 452-3760',\n    address: 'Throop Avenue 352',\n    plz: 1294,\n    ort: 'Saranap',\n  },\n  {\n    _id: '5a65b299e90112fce1053da1',\n    name: 'Raquel',\n    vorname: 'Houston',\n    company: 'Comvex',\n    email: 'raquelhouston@comvex.com',\n    phone: '+1 (914) 402-2626',\n    address: 'Rock Street 420',\n    plz: 3325,\n    ort: 'Westphalia',\n  },\n  {\n    _id: '5a65b299174006a150a8d741',\n    name: 'Cross',\n    vorname: 'Cooke',\n    company: 'Satiance',\n    email: 'crosscooke@satiance.com',\n    phone: '+1 (914) 565-2836',\n    address: 'Graham Avenue 614',\n    plz: 9233,\n    ort: 'Lisco',\n  },\n  {\n    _id: '5a65b2999f5c217c694d9f32',\n    name: 'Clemons',\n    vorname: 'Joyner',\n    company: 'Supportal',\n    email: 'clemonsjoyner@supportal.com',\n    phone: '+1 (840) 526-2549',\n    address: 'Seaview Court 501',\n    plz: 7840,\n    ort: 'Balm',\n  },\n  {\n    _id: '5a65b299934cf069386f6646',\n    name: 'Valerie',\n    vorname: 'Collins',\n    company: 'Knowlysis',\n    email: 'valeriecollins@knowlysis.com',\n    phone: '+1 (963) 406-2683',\n    address: 'Montieth Street 263',\n    plz: 5095,\n    ort: 'Tonopah',\n  },\n  {\n    _id: '5a65b29906e9dc18d67d5927',\n    name: 'Deann',\n    vorname: 'Frederick',\n    company: 'Apex',\n    email: 'deannfrederick@apex.com',\n    phone: '+1 (961) 510-2518',\n    address: 'Diamond Street 747',\n    plz: 8172,\n    ort: 'Broadlands',\n  },\n  {\n    _id: '5a65b299c2dc13dd103163cf',\n    name: 'Natasha',\n    vorname: 'Hickman',\n    company: 'Prosure',\n    email: 'natashahickman@prosure.com',\n    phone: '+1 (959) 534-2101',\n    address: 'Sedgwick Street 157',\n    plz: 1655,\n    ort: 'Gila',\n  },\n  {\n    _id: '5a65b299774ded67980581c3',\n    name: 'Lizzie',\n    vorname: 'Long',\n    company: 'Malathion',\n    email: 'lizzielong@malathion.com',\n    phone: '+1 (814) 493-2908',\n    address: 'Kenilworth Place 569',\n    plz: 7071,\n    ort: 'Cornucopia',\n  },\n  {\n    _id: '5a65b2997743e49335744ae7',\n    name: 'Bowman',\n    vorname: 'Roy',\n    company: 'Syntac',\n    email: 'bowmanroy@syntac.com',\n    phone: '+1 (871) 483-3012',\n    address: 'Noble Street 623',\n    plz: 6686,\n    ort: 'Driftwood',\n  },\n  {\n    _id: '5a65b2993670308c0ac56456',\n    name: 'Jodi',\n    vorname: 'Montgomery',\n    company: 'Kindaloo',\n    email: 'jodimontgomery@kindaloo.com',\n    phone: '+1 (849) 506-3467',\n    address: 'Degraw Street 508',\n    plz: 2153,\n    ort: 'Moscow',\n  },\n  {\n    _id: '5a65b299bee75a900b39ce18',\n    name: 'Harris',\n    vorname: 'Bryant',\n    company: 'Poshome',\n    email: 'harrisbryant@poshome.com',\n    phone: '+1 (855) 554-3953',\n    address: 'Irvington Place 297',\n    plz: 6562,\n    ort: 'Waterford',\n  },\n  {\n    _id: '5a65b29958e652c28612081b',\n    name: 'Brooks',\n    vorname: 'Sweeney',\n    company: 'Quantalia',\n    email: 'brookssweeney@quantalia.com',\n    phone: '+1 (928) 517-3577',\n    address: 'Dunham Place 601',\n    plz: 8547,\n    ort: 'Germanton',\n  },\n  {\n    _id: '5a65b299d8c13d7af989d23d',\n    name: 'Rodriguez',\n    vorname: 'Lloyd',\n    company: 'Combot',\n    email: 'rodriguezlloyd@combot.com',\n    phone: '+1 (906) 572-2774',\n    address: 'Main Street 959',\n    plz: 3768,\n    ort: 'Calverton',\n  },\n  {\n    _id: '5a65b299a2cdf194d3382520',\n    name: 'David',\n    vorname: 'Jarvis',\n    company: 'Anocha',\n    email: 'davidjarvis@anocha.com',\n    phone: '+1 (876) 415-2334',\n    address: 'John Street 280',\n    plz: 1840,\n    ort: 'Salvo',\n  },\n  {\n    _id: '5a65b2993f90bb41dd25af27',\n    name: 'Roman',\n    vorname: 'Donovan',\n    company: 'Digitalus',\n    email: 'romandonovan@digitalus.com',\n    phone: '+1 (850) 479-2977',\n    address: 'Arlington Avenue 762',\n    plz: 6441,\n    ort: 'Marion',\n  },\n  {\n    _id: '5a65b299368b48472b3a98dc',\n    name: 'Alma',\n    vorname: 'Silva',\n    company: 'Dogspa',\n    email: 'almasilva@dogspa.com',\n    phone: '+1 (807) 460-2715',\n    address: 'Hausman Street 514',\n    plz: 4384,\n    ort: 'Sanborn',\n  },\n  {\n    _id: '5a65b2991361aae0a995cfea',\n    name: 'Ladonna',\n    vorname: 'Reid',\n    company: 'Comstar',\n    email: 'ladonnareid@comstar.com',\n    phone: '+1 (981) 533-2804',\n    address: 'Havens Place 324',\n    plz: 6409,\n    ort: 'Downsville',\n  },\n  {\n    _id: '5a65b299e8ae714a72e10133',\n    name: 'Rasmussen',\n    vorname: 'Hays',\n    company: 'Makingway',\n    email: 'rasmussenhays@makingway.com',\n    phone: '+1 (980) 546-2825',\n    address: 'Polhemus Place 936',\n    plz: 9987,\n    ort: 'Rossmore',\n  },\n  {\n    _id: '5a65b2990ba4ac22150acb22',\n    name: 'Lawson',\n    vorname: 'Melton',\n    company: 'Zaphire',\n    email: 'lawsonmelton@zaphire.com',\n    phone: '+1 (968) 578-2844',\n    address: 'Gain Court 302',\n    plz: 8306,\n    ort: 'Alleghenyville',\n  },\n  {\n    _id: '5a65b299f7f4d34f48a0588f',\n    name: 'Pena',\n    vorname: 'Hooper',\n    company: 'Petigems',\n    email: 'penahooper@petigems.com',\n    phone: '+1 (853) 578-3494',\n    address: 'Essex Street 599',\n    plz: 8568,\n    ort: 'Tyro',\n  },\n  {\n    _id: '5a65b299b06cee9f6b925592',\n    name: 'Maynard',\n    vorname: 'Carroll',\n    company: 'Matrixity',\n    email: 'maynardcarroll@matrixity.com',\n    phone: '+1 (866) 551-3103',\n    address: 'Dahill Road 270',\n    plz: 1851,\n    ort: 'Ballico',\n  },\n  {\n    _id: '5a65b299419417936ae4c0bc',\n    name: 'Tanisha',\n    vorname: 'Vaughan',\n    company: 'Acium',\n    email: 'tanishavaughan@acium.com',\n    phone: '+1 (838) 558-3135',\n    address: 'Hicks Street 384',\n    plz: 6740,\n    ort: 'Jacksonwald',\n  },\n  {\n    _id: '5a65b2998c64a5ac05ff00ee',\n    name: 'Merritt',\n    vorname: 'Hernandez',\n    company: 'Krog',\n    email: 'merritthernandez@krog.com',\n    phone: '+1 (998) 446-3790',\n    address: 'Ashland Place 841',\n    plz: 2467,\n    ort: 'Stouchsburg',\n  },\n  {\n    _id: '5a65b299411bf2d1c4bc3295',\n    name: 'Floyd',\n    vorname: 'Harding',\n    company: 'Strozen',\n    email: 'floydharding@strozen.com',\n    phone: '+1 (871) 469-2431',\n    address: 'Bennet Court 242',\n    plz: 8613,\n    ort: 'Lacomb',\n  },\n  {\n    _id: '5a65b2990868b4e79e977012',\n    name: 'Leola',\n    vorname: 'Barron',\n    company: 'Filodyne',\n    email: 'leolabarron@filodyne.com',\n    phone: '+1 (919) 533-3575',\n    address: 'Butler Place 861',\n    plz: 5252,\n    ort: 'Monument',\n  },\n  {\n    _id: '5a65b2992e2db72bb3593643',\n    name: 'Mallory',\n    vorname: 'Cooper',\n    company: 'Enersol',\n    email: 'mallorycooper@enersol.com',\n    phone: '+1 (838) 501-2635',\n    address: 'Pulaski Street 560',\n    plz: 1642,\n    ort: 'Coldiron',\n  },\n  {\n    _id: '5a65b299013fb50d5c669c8c',\n    name: 'Lynch',\n    vorname: 'Dunn',\n    company: 'Skyplex',\n    email: 'lynchdunn@skyplex.com',\n    phone: '+1 (826) 446-3381',\n    address: 'National Drive 361',\n    plz: 3782,\n    ort: 'Mansfield',\n  },\n  {\n    _id: '5a65b29984c42e8797a9b087',\n    name: 'Cora',\n    vorname: 'Ramsey',\n    company: 'Verton',\n    email: 'coraramsey@verton.com',\n    phone: '+1 (884) 447-3102',\n    address: 'Polar Street 897',\n    plz: 6642,\n    ort: 'Northridge',\n  },\n  {\n    _id: '5a65b2990db9586ce5e9755d',\n    name: 'Inez',\n    vorname: 'Oliver',\n    company: 'Zentry',\n    email: 'inezoliver@zentry.com',\n    phone: '+1 (843) 546-3053',\n    address: 'Ide Court 810',\n    plz: 8466,\n    ort: 'Brutus',\n  },\n  {\n    _id: '5a65b2997b5119570f732ca6',\n    name: 'Colleen',\n    vorname: 'Lee',\n    company: 'Oatfarm',\n    email: 'colleenlee@oatfarm.com',\n    phone: '+1 (987) 580-3482',\n    address: 'McClancy Place 596',\n    plz: 5603,\n    ort: 'Leeper',\n  },\n  {\n    _id: '5a65b299c54c935ed0b490af',\n    name: 'Corine',\n    vorname: 'Dawson',\n    company: 'Viocular',\n    email: 'corinedawson@viocular.com',\n    phone: '+1 (897) 426-2138',\n    address: 'Conselyea Street 151',\n    plz: 5393,\n    ort: 'Trucksville',\n  },\n  {\n    _id: '5a65b299d515e5caa351db88',\n    name: 'Schwartz',\n    vorname: 'Stout',\n    company: 'Solaren',\n    email: 'schwartzstout@solaren.com',\n    phone: '+1 (986) 561-3610',\n    address: 'Tompkins Place 314',\n    plz: 1164,\n    ort: 'Sardis',\n  },\n  {\n    _id: '5a65b2992b4c3e6ca474b6e1',\n    name: 'Casey',\n    vorname: 'Potts',\n    company: 'Delphide',\n    email: 'caseypotts@delphide.com',\n    phone: '+1 (828) 485-3022',\n    address: 'Williamsburg Street 341',\n    plz: 7540,\n    ort: 'Deercroft',\n  },\n  {\n    _id: '5a65b299c6c34ae92c970052',\n    name: 'Brooke',\n    vorname: 'Farmer',\n    company: 'Parcoe',\n    email: 'brookefarmer@parcoe.com',\n    phone: '+1 (899) 406-2073',\n    address: 'Lake Street 244',\n    plz: 1077,\n    ort: 'Martell',\n  },\n  {\n    _id: '5a65b29911913c496414e072',\n    name: 'Bette',\n    vorname: 'Mcdowell',\n    company: 'Roughies',\n    email: 'bettemcdowell@roughies.com',\n    phone: '+1 (927) 545-3547',\n    address: 'Cozine Avenue 663',\n    plz: 5724,\n    ort: 'Savage',\n  },\n];\n","<div style=\"max-width: 70em\">\n  <h1 class=\"mt-3 mb-4\">Data Tables</h1>\n\n  <p class=\"lead\">Data Tables stellen Daten geordnet in Zeilen und Spalten dar.</p>\n\n  <h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n  <ul>\n    <li>Zur strukturierten Darstellung von grossen Datenmengen.</li>\n    <li>\n      Jede Spalte hat eine aussagekräftige Titelzeile. Bei Spalten, die nur Aktionsbuttons\n      enthalten, ist eine Titelzeile optional.\n    </li>\n    <li>\n      Aktionsbuttons, deren Kontext der Datensatz einer einzelnen Tabellenzeile ist, werden immer am\n      rechten Rand der Zeile positioniert. Bei mehr als 2-3 Aktionen ist es besser, diese in ein\n      Overflow-Menu auszulagern anstatt dichtgedrängte Gruppen von Icon-Buttons einzusetzen.\n    </li>\n    <li>\n      Damit die Tabellen auch auf mobilen Geräten bedienbar bleiben, sollten sie mit\n      <code>table-responsive</code>\n      horizontal scrollbar gemacht werden. Mehr zu Responsive Tables in der\n      <a\n        class=\"external\"\n        href=\"https://getbootstrap.com/docs/4.1/content/tables/#responsive-tables\"\n        target=\"_blank\">\n        Bootstrap Dokumentation\n      </a>\n      .\n    </li>\n    <li>\n      Die \"Zebra\"-Musterung (\n      <code>table-striped</code>\n      ) steigert insbesondere bei grösseren Tabellen die Lesbarkeit und erleichtert die Orientierung\n      in der Tabelle. Sie sollte deshalb durchgehend eingesetzt werden.\n    </li>\n  </ul>\n\n  <h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n  <ul>\n    <li>Wenn es nur eine Spalte gibt</li>\n  </ul>\n\n  <h2 class=\"mt-5\">Verwandte Elemente</h2>\n  <ul class=\"related-elements\">\n    <li><a routerLink=\"/styleguide/ui-elements/buttons\">Buttons</a></li>\n    <li>\n      <a routerLink=\"/styleguide/ui-elements/overflow-menu\">Overflow Menu</a>\n    </li>\n  </ul>\n\n  <div class=\"card mt-5\">\n    <h2 class=\"card-header\">\n      <em class=\"fas fa-wrench mr-3\"></em>\n      Implementierung\n    </h2>\n    <div class=\"card-body\">\n      <p>\n        Wir realisieren Data Tables in einfachen Fällen direkt mit den Mitteln von Angular (und\n        <a\n          class=\"external\"\n          href=\"https://ng-bootstrap.github.io/#/components/pagination/examples\"\n          target=\"_blank\">\n          ngb-pagination\n        </a>\n        ).\n      </p>\n      <p>\n        Damit generische Funktionalität nicht für jede Tabelle in einer Applikation dupliziert\n        werden muss und damit alle Data Tables einer Applikation einfacher konsistent gehalten\n        werden können, empfehlen wir das Erstellen einer wiederverwendbaren Data Table Komponente.\n      </p>\n      <p>\n        Auf eine allgemeine Implementierung für alle Bedag Angular Applikationen verzichten wir, da\n        eine solche Komponente alle möglichen Anforderungen der Applikationen berücksichtigen müsste\n        und dadurch unnötig komplex würde. Eine Implementierung pro Applikation oder Gruppe von\n        Applikationen erachten wir als sinnvoller.\n      </p>\n    </div>\n  </div>\n  <h2 class=\"mt-5\">Angular Data Table</h2>\n</div>\n<app-code-example\n  basePath=\"ui-elements/datatables\"\n  src=\"datatables.component.html#t,datatables.component.ts,data.ts\">\n  <h3 id=\"tablecaption\">Adressdaten</h3>\n  <div class=\"table-header\">\n    <div class=\"btn-group dropdown\" ngbDropdown container=\"body\">\n      <button class=\"btn btn-outline-primary\" ngbDropdownToggle>Auswahl</button>\n      <div class=\"dropdown-menu\" ngbDropdownMenu>\n        <button ngbDropdownItem (click)=\"processSelected('Exportiere')\">Exportieren</button>\n        <button ngbDropdownItem (click)=\"processSelected('Lösche')\">Löschen</button>\n      </div>\n    </div>\n    <div class=\"position-relative\">\n      <input\n        class=\"form-control pl-5\"\n        placeholder=\"Filter...\"\n        [(ngModel)]=\"searchTerm\"\n        (keyup)=\"search()\" />\n      <span class=\"fas fa-filter input-icon left-icon\"></span>\n    </div>\n  </div>\n  <div class=\"table-responsive\">\n    <table class=\"table table-striped table-hover\" aria-describedby=\"tablecaption\">\n      <thead>\n        <tr>\n          <th class=\"py-0\" scope=\"col\">\n            <div class=\"custom-control custom-checkbox\">\n              <input\n                id=\"selectAll_checkbox\"\n                type=\"checkbox\"\n                class=\"custom-control-input\"\n                [checked]=\"selectAll\"\n                (change)=\"toggleSelectAll()\" />\n              <label class=\"custom-control-label\" for=\"selectAll_checkbox\">&nbsp;</label>\n            </div>\n          </th>\n          <th scope=\"col\">\n            <a href (click)=\"sortBy('name')\">\n              Name\n              <span [class]=\"getColumnClassNames('name')\" aria-hidden=\"true\"></span>\n            </a>\n          </th>\n          <th scope=\"col\">\n            <a href (click)=\"sortBy('vorname')\">\n              Vorname\n              <span [class]=\"getColumnClassNames('vorname')\" aria-hidden=\"true\"></span>\n            </a>\n          </th>\n          <th scope=\"col\">\n            <a href (click)=\"sortBy('company')\">\n              Firma\n              <span [class]=\"getColumnClassNames('company')\" aria-hidden=\"true\"></span>\n            </a>\n          </th>\n          <th scope=\"col\">\n            <a href (click)=\"sortBy('email')\">\n              E-Mail\n              <span [class]=\"getColumnClassNames('email')\" aria-hidden=\"true\"></span>\n            </a>\n          </th>\n          <th scope=\"col\">\n            <a href (click)=\"sortBy('phone')\">\n              Telefon\n              <span [class]=\"getColumnClassNames('phone')\" aria-hidden=\"true\"></span>\n            </a>\n          </th>\n          <th scope=\"col\">\n            <a href (click)=\"sortBy('address')\">\n              Strasse\n              <span [class]=\"getColumnClassNames('address')\" aria-hidden=\"true\"></span>\n            </a>\n          </th>\n          <th scope=\"col\">\n            <a href (click)=\"sortBy('plz')\">\n              PLZ\n              <span [class]=\"getColumnClassNames('plz')\" aria-hidden=\"true\"></span>\n            </a>\n          </th>\n          <th scope=\"col\">\n            <a href (click)=\"sortBy('ort')\">\n              Ort\n              <span [class]=\"getColumnClassNames('ort')\" aria-hidden=\"true\"></span>\n            </a>\n          </th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let a of pagedItems; let i = index\" (click)=\"showModal(userDetail, i)\">\n          <td class=\"py-0\" (click)=\"$event.stopPropagation()\">\n            <div class=\"custom-control custom-checkbox\">\n              <input\n                id=\"checkbox_{{ i }}\"\n                type=\"checkbox\"\n                class=\"custom-control-input\"\n                [checked]=\"isSelected(i)\"\n                (change)=\"toggleSelection(i)\"\n                (keydown)=\"focusNextCheckbox($event, i)\" />\n              <label class=\"custom-control-label\" for=\"checkbox_{{ i }}\">&nbsp;</label>\n            </div>\n          </td>\n          <td>{{ a.name }}</td>\n          <td>{{ a.vorname }}</td>\n          <td>{{ a.company }}</td>\n          <td (click)=\"$event.stopPropagation()\">\n            <a href=\"mailto:{{ a.email }}\">{{ a.email }}</a>\n          </td>\n          <td>{{ a.phone }}</td>\n          <td>{{ a.address }}</td>\n          <td>{{ a.plz }}</td>\n          <td>{{ a.ort }}</td>\n          <td class=\"text-right py-0\" (click)=\"$event.stopPropagation()\">\n            <div\n              class=\"dropdown overflow-menu\"\n              ngbDropdown\n              placement=\"bottom-right\"\n              container=\"body\">\n              <button class=\"btn btn-outline-primary btn-sm\" ngbDropdownToggle>\n                <span class=\"fa-fw fas fa-ellipsis-v\"></span>\n              </button>\n              <div class=\"dropdown-menu\" ngbDropdownMenu>\n                <button ngbDropdownItem (click)=\"showModal(userDetail, i)\">Details anzeigen</button>\n                <button ngbDropdownItem (click)=\"showAlert(a, 'Nach aktuellster Adresse suchen')\">\n                  Nach aktuellster Adresse suchen\n                </button>\n                <div class=\"dropdown-divider\"></div>\n                <button ngbDropdownItem (click)=\"showAlert(a, 'In neue Liste hinzufügen')\">\n                  In neue Liste hinzufügen\n                </button>\n                <button ngbDropdownItem (click)=\"showAlert(a, 'Aus dieser Liste entfernen')\">\n                  Aus dieser Liste entfernen\n                </button>\n                <div class=\"dropdown-divider\"></div>\n                <button ngbDropdownItem (click)=\"showAlert(a, 'Editieren')\">Editieren</button>\n                <button ngbDropdownItem (click)=\"showAlert(a, 'Duplizieren')\">Duplizieren</button>\n                <div class=\"dropdown-divider\"></div>\n                <button ngbDropdownItem (click)=\"showAlert(a, 'Löschen')\">Löschen</button>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"table-footer\">\n    <ngb-pagination\n      aria-label=\"Default pagination\"\n      [collectionSize]=\"addressData.length\"\n      [page]=\"page\"\n      [pageSize]=\"pageSize\"\n      [maxSize]=\"7\"\n      [boundaryLinks]=\"true\"\n      (pageChange)=\"setPage($event)\"></ngb-pagination>\n    <ng-select\n      style=\"width: 70px\"\n      class=\"ml-2\"\n      [items]=\"pageSizes\"\n      [(ngModel)]=\"pageSize\"\n      (ngModelChange)=\"setPage(1)\"\n      [searchable]=\"false\"\n      [clearable]=\"false\"></ng-select>\n  </div>\n\n  <ng-template #userDetail let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">Personendetail</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('[x] click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <p>\n        <strong>{{ selectedForDetail.vorname }} {{ selectedForDetail.name }}</strong>\n        <br />\n        {{ selectedForDetail.address }}\n        <br />\n        {{ selectedForDetail.plz }} {{ selectedForDetail.ort }}\n      </p>\n    </div>\n  </ng-template>\n</app-code-example>\n<div style=\"max-width: 70em\">\n  <div class=\"alert alert-warning d-flex align-items-center p-3 text-dark my-5\">\n    <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n    <div>\n      Vorsicht mit Row-Clicks, die Aktionen auslösen: Es muss gewährleistet werden, dass die mit dem\n      Row-Click ausgelöste Funktion auch mit der Tastatur anwählbar ist. Dies kann mit einem Button,\n      einem Eintrag im Overflow Menu oder einem Link ermöglicht werden.\n    </div>\n  </div>\n\n  <h2 class=\"mt-5\">Pagination</h2>\n  <p>\n    Die Advanced Pagination von ng-bootstrap kommt standardmässig bei allen Datatables zum Einsatz\n    und ist immer unten links zu platzieren.\n    <br />\n    Nur wenn sicher ist, dass nie mehr als eine Seite angezeigt werden muss, kann auf die\n    Paginierung verzichtet werden.\n  </p>\n  <ul>\n    <li>\n      Bei mehr als 7 Seiten soll eine Ellipse die überzähligen Seiten ausblenden. Dies wird mit dem\n      Attribut\n      <code>[maxSize]=\"7\"</code>\n      gesetzt.\n    </li>\n    <li>\n      Der Selektor für Anzahl Ergebnisse pro Seite ist optional und soll nur eingesetzt werden, wenn\n      er dem Benutzer einen Mehrwert bietet.\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ADDRESS_DATA, AddressData } from './data';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { AlertHolderDirective } from '../../../bedag-components/alert/alert-holder.directive';\nimport { CustomMaxWidthComponent } from '../../../bedag-components/layout/custom-max-width-component';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './datatables.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DatatablesComponent implements OnInit, CustomMaxWidthComponent {\n  maxWidth = '100%';\n\n  addressData: Array<AddressData> = [];\n  pagedItems: Array<AddressData> = [];\n  selected: number[] = [];\n  sortedBy!: string;\n  sortedAscending!: boolean;\n  searchTerm!: string;\n  page = 1;\n  pageSize = 5;\n  pageSizes = [5, 10, 25, 100];\n  modal!: NgbModalRef;\n  selectAll = false;\n  selectedForDetail!: AddressData;\n\n  constructor(\n    private readonly modalService: NgbModal,\n    private readonly alerts: AlertHolderDirective\n  ) {}\n\n  ngOnInit(): void {\n    this.addressData = ADDRESS_DATA;\n    this.sortBy('name');\n  }\n\n  getColumnClassNames(column: string): string {\n    let classNames = 'fas fa-sort';\n    if (this.sortedBy === column) {\n      classNames += this.sortedAscending ? '-up' : '-down';\n      classNames += ' text-primary';\n    }\n    return classNames;\n  }\n\n  /**\n   * This function could easily be replaced by the sortBy or orderBy functions from underscore or\n   * lodash, but we don't want to force the dependency on the users.\n   */\n  private sortAddressData(): void {\n    this.addressData.sort((a, b) =>\n      a[this.sortedBy] < b[this.sortedBy] ? -1 : a[this.sortedBy] > b[this.sortedBy] ? 1 : 0\n    );\n  }\n\n  sortBy(field: string): boolean {\n    if (this.sortedBy === field) {\n      this.sortedAscending = !this.sortedAscending;\n      this.addressData.reverse();\n    } else {\n      this.sortedBy = field;\n      this.sortedAscending = true;\n      this.sortAddressData();\n    }\n\n    this.setPage(1);\n    return false; // do not follow the href\n  }\n\n  search(): void {\n    this.addressData = ADDRESS_DATA.filter(\n      (item) => JSON.stringify(item).toLowerCase().indexOf(this.searchTerm.toLowerCase()) !== -1\n    );\n\n    if (this.sortedBy) {\n      this.sortAddressData();\n\n      if (!this.sortedAscending) {\n        this.addressData.reverse();\n      }\n    }\n\n    this.setPage(1);\n  }\n\n  setPage(page: number): void {\n    this.page = page;\n    const startIndex = (this.page - 1) * this.pageSize;\n    const endIndex = Math.min(startIndex + this.pageSize, this.addressData.length);\n    this.pagedItems = this.addressData.slice(startIndex, endIndex);\n    this.selected = [];\n    this.selectAll = false;\n  }\n\n  showModal(content: unknown, index: number): boolean {\n    this.selectedForDetail = this.pagedItems[index];\n    this.modal = this.modalService.open(content);\n    return false;\n  }\n\n  isSelected(i: number): boolean {\n    return this.selectAll || this.selected.includes(i);\n  }\n\n  toggleSelection(i: number): void {\n    if (this.selected.includes(i)) {\n      this.selected = this.selected.filter((n) => n !== i);\n    } else {\n      this.selected.push(i);\n    }\n  }\n\n  toggleSelectAll(): void {\n    this.selectAll = !this.selectAll;\n    if (!this.selectAll) {\n      this.selected = [];\n    }\n  }\n\n  focusNextCheckbox(event: KeyboardEvent, i: number): void {\n    switch (event.key) {\n      case 'ArrowDown':\n        document.getElementById(`checkbox_${i + 1}`)?.focus();\n        break;\n      case 'ArrowUp':\n        document.getElementById(`checkbox_${i - 1}`)?.focus();\n        break;\n    }\n  }\n\n  showAlert(address: AddressData, alertText: string): boolean {\n    this.alerts.success(`${alertText} wurde ausgewählt für ${address.vorname} ${address.name}`);\n    return false;\n  }\n\n  processSelected(action: string): boolean {\n    if (!this.selectAll && this.selected.length < 1) {\n      this.alerts.success('Keine Einträge ausgewählt');\n    } else {\n      let text = `${action} `;\n      if (this.selectAll) {\n        text += this.pagedItems.map((a) => `${a.vorname} ${a.name}`).join(', ');\n      } else {\n        text += this.selected\n          .map((i) => `${this.pagedItems[i].vorname} ${this.pagedItems[i].name}`)\n          .join(', ');\n      }\n      this.alerts.success(text);\n    }\n    return false;\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-badges',\n  templateUrl: './badges.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BadgesComponent {}\n","<h1 class=\"mt-3 mb-4\">Badges</h1>\n\n<p class=\"lead\">\n  Mit Badges wird dem Nutzer vereinfacht angezeigt, was der aktuelle Status eines Elements ist.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Bei Elementen, bei denen eine Statusänderung erfolgen kann. Beispiel: Verena Muster\n    <span class=\"badge badge-info\">Neu</span>\n  </li>\n  <li>\n    Für das Anzeigen einer Anzahl von Elementen. Beispiel: Benachrichtigungen\n    <span class=\"badge badge-info\">4 Ungelesen</span>\n  </li>\n  <li>\n    Der Text in Badges sollte möglichst kurz und prägnant sein und wenn möglich nicht mehr als drei\n    Wörter lang.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>Badges sind nicht für Hinweise einzusetzen, sondern nur für die Status-Anzeige.</li>\n  <li>\n    Badges sollten in Tabellen nur sehr gezielt eingesetzt werden, wenn die Aufmerksamkeit des\n    Benutzers unbedingt auf ein Item gelenkt werden muss (z.B. bei Batch-Job Übersichten\n    <span class=\"badge badge-danger mr-1\">Failed</span>\n    ). Ansonsten sind\n    <a class=\"highlight\" routerLink=\"/styleguide/basics/colors\">Textfarbe</a>\n    und\n    <a class=\"highlight\" routerLink=\"/styleguide/basics/icons\">Icons</a>\n    besser geeignet, um die Tabelle optisch schlank zu halten.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/buttons\" class=\"highlight\">Buttons</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/alerts\" class=\"highlight\">Alerts</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/basics/colors\" class=\"highlight\">Colors</a>\n  </li>\n</ul>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    Weitere Informationen sowie Codebeispiele in der\n    <a class=\"external\" href=\"http://getbootstrap.com/docs/4.5/components/badge/\" target=\"_blank\">\n      Bootstrap-Dokumentation\n    </a>\n    .\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Badges</h2>\n<app-code-example src=\"ui-elements/badges/badges.component.html#badge\">\n  <span class=\"badge badge-info mr-2\">Info</span>\n  <span class=\"badge badge-success mr-2\">Success</span>\n  <span class=\"badge badge-danger mr-2\">Danger</span>\n  <span class=\"badge badge-warning mr-2\">Warning</span>\n</app-code-example>\n\n<h2 class=\"mt-5\">Buttons mit Badge</h2>\n<p>\n  Buttons können mit der Klasse\n  <code>btn-with-badge</code>\n  mit einem Badge versehen werden. Das Code-Beispiel befindet sich bei den\n  <a class=\"highlight\" routerLink=\"/styleguide/ui-elements/buttons\">Buttons</a>\n  .\n</p>\n\n<button type=\"button\" class=\"btn btn-outline-primary btn-with-badge mr-4\">\n  Download\n  <span class=\"badge badge-pill badge-dark\">9</span>\n  <span class=\"sr-only\">unread messages</span>\n</button>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-dividers',\n  templateUrl: './dividers.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DividersComponent {}\n","<h1 class=\"mt-3 mb-4\">Dividers</h1>\n\n<p class=\"lead\">Dividers gruppieren Inhalte</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Wenn Inhalte in mentale Einheiten gruppiert werden sollen, um dem Nutzer mehr Struktur und\n    Orientierung zu bieten. Mentale Einheiten sind z.B. Lieferadresse, Rechnungsadresse,\n    Zahlungsmodalitäten, etc.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul class=\"mb-5\">\n  <li>Wenn nach Titeln eine Tabelle folgt.</li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements mb-5\">\n  <li>\n    <a routerLink=\"/styleguide/basics/typography\" class=\"highlight\">Typographie</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms\" class=\"highlight\">Forms</a>\n  </li>\n</ul>\n\n<app-code-example src=\"ui-elements/dividers/dividers.component.html#de\">\n  <h2 class=\"title-divider\">Title Divider</h2>\n  <br />\n  Standard HTML-Divider:\n  <hr />\n</app-code-example>\n","import { asyncScheduler } from '../scheduler/async';\nimport { timer } from './timer';\nexport function interval(period, scheduler) {\n    if (period === void 0) { period = 0; }\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    if (period < 0) {\n        period = 0;\n    }\n    return timer(period, period, scheduler);\n}\n","<h1 class=\"mt-3 mb-4\">Progress Indicators</h1>\n\n<p class=\"lead\">\n  Fortschritts- und Warteanzeigen geben dem Nutzer Feedback, dass eine Wartezeit notwendig ist.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Wenn Aktionen länger dauern, um dem Nutzer anzuzeigen, dass die Applikation am Input verarbeiten\n    oder laden ist.\n  </li>\n  <li>\n    <strong>Progress Bar:</strong>\n    Zeigt Fortschritt an, wenn die voraussichtliche Wartezeit berechnet werden kann.\n    <br />\n  </li>\n  <li>\n    <strong>Spinner Button:</strong>\n    Ein Button mit rotierendem Spinner-Icon ist eine elegante Lösung, um direkt den Aktions-Button\n    als Progress Indicator für kurze Wartezeiten (zum Beispiel Async calls) zu verwenden.\n    <br />\n    Er kommt zum Einsatz, wenn die Wartezeit nicht berechnet werden kann oder kein Platz für eine\n    Progress Bar vorhanden ist.\n    <br />\n    Wenn die Wartezeit berechenbar und kürzer als einige Sekunden ist ein Spinner ebenfalls die\n    bessere Wahl.\n  </li>\n  <li>\n    <strong>Loading Spinner:</strong>\n    Ein Loading Spinner ist geeignet um dem Benutzer kurze Ladevorgänge auf der Arbeitsfläche oder\n    in Modal-Dialogen lokal anzuzeigen. Mögliche Einsatzgebiete: Splash Screens, asynchrones\n    Nachladen von Inhalten in einzelnen Sektionen (z.B. Tabellen, Cards, etc.).\n  </li>\n  <li>\n    <strong>Loading Overlay:</strong>\n    Ein Loading Overlay kommt zum Einsatz, wenn der Aufbau der gesamten Arbeitsfläche eine Wartezeit\n    erfordert (z.B. bei Dashboards).\n  </li>\n</ul>\n\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Spinners und Loading Overlays können bei Anwendern zu Frustration und Unzufriedenheit mit der\n    Applikation führen, wenn sie zu oft oder für zu lange Wartezeiten eingesetzt werden. Sie sollten\n    nicht für Wartezeiten von mehr als 5-7 Sekunden eingesetzt werden. In diesem Fall ist eine\n    Progress Bar mit möglichst vielen Zusatzinformationen die beste Wahl.\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>Wenn Elemente schnell geladen und Aktionen zügig ausgeführt werden können.</li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/buttons\" class=\"highlight\">Buttons</a>\n  </li>\n  <li><a routerLink=\"/styleguide/basics/icons\" class=\"highlight\">Icons</a></li>\n</ul>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Wir verwenden die\n      <a\n        class=\"external\"\n        href=\"https://ng-bootstrap.github.io/#/components/progressbar/examples\"\n        target=\"_blank\">\n        ngb-progressbar von ng-bootstrap\n      </a>\n      .\n      <br />\n      Für Spinner verwenden wir die CSS-Animationen von\n      <a routerLink=\"/styleguide/basics/icons\" class=\"highlight\">Font Awesome</a>\n      .\n    </p>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Progress Bar</h2>\n<p>\n  Für kurze Wartezeiten von unter einer Minute kann eine einfache Progress Bar ohne zusätzliche\n  Angaben eingesetzt werden.\n  <br />\n  Je länger die Wartezeit dauert, desto mehr Angaben sollten dem Benutzer mitgeteilt werden (z.B.\n  Fortschritt in %, \"3 von 7 Dateien heruntergeladen\", etc.). Dies erhöht die Toleranz für\n  Wartezeiten massgeblich.\n  <br />\n  Für Wartezeiten, die länger als eine Minute dauern, sollte dem Benutzer zusätzlich die geschätzte\n  Restwartezeit laufend angezeigt werden.\n</p>\n<app-code-example\n  src=\"ui-elements/progress-indicators/progress-indicators.component.html#progress,ui-elements/progress-indicators/progress-indicators.component.ts\">\n  <ngb-progressbar [value]=\"(progress | async)!\" [showValue]=\"true\"></ngb-progressbar>\n  <button class=\"btn btn-outline-primary mt-2\" (click)=\"longRunningAction()\">\n    Start ohne Restzeitangabe\n  </button>\n\n  <hr />\n\n  <ngb-progressbar [value]=\"(progressWithETA | async)!\" [showValue]=\"true\"></ngb-progressbar>\n  <div class=\"text-center\">{{ progressETA | async }}</div>\n  <button class=\"btn btn-outline-primary mt-2\" (click)=\"longRunningActionWithETA()\">\n    Start mit Restzeitangabe\n  </button>\n</app-code-example>\n\n<h2 class=\"mt-5\">Spinner Button</h2>\n<p>\n  Bei Spinner Buttons ist es wichtig, den Button während der Wartedauer für Bildschirm- und\n  Screenreader-Benutzer als Progress Indicator zu klassifizieren, indem die Attribute\n  <code>disabled</code>\n  , sowie\n  <code>role=\"status\"</code>\n  und\n  <code>aria-hidden=\"true\"</code>\n  gesetzt werden.\n  <br />\n  Standardmässig kommt\n  <span class=\"fas fa-circle-notch fa-fw\"></span>\n  als Spinner-Icon zum Einsatz, für spezielle Fälle wie \"Synchronisieren\" können aber auch andere\n  Icons eingesetzt werden.\n</p>\n<app-code-example\n  src=\"ui-elements/progress-indicators/progress-indicators.component.html#spinner-button,ui-elements/progress-indicators/progress-indicators.component.ts\">\n  <button\n    class=\"btn btn-primary\"\n    type=\"button\"\n    (click)=\"startAsyncJob('job1')\"\n    [disabled]=\"jobRunning\">\n    <span\n      *ngIf=\"jobRunning\"\n      class=\"fas fa-circle-notch fa-spin fa-fw\"\n      role=\"status\"\n      aria-hidden=\"true\"></span>\n    Resultate publizieren\n  </button>\n  <br />\n  <br />\n  <button\n    class=\"btn btn-outline-primary\"\n    type=\"button\"\n    (click)=\"startAsyncJob('job2')\"\n    [disabled]=\"job2Running\">\n    <span\n      class=\"fas fa-sync-alt fa-fw\"\n      [class.fa-spin]=\"job2Running\"\n      [attr.role]=\"job2Running ? 'status' : null\"\n      aria-hidden=\"true\"></span>\n    Synchronisieren\n  </button>\n</app-code-example>\n\n<h2 class=\"mt-5\">Loading Spinner</h2>\n<p>Die Positionierung und Grösse des Loading Spinners ist dem jeweiligen Kontext anzupassen.</p>\n<app-code-example\n  src=\"ui-elements/progress-indicators/progress-indicators.component.html#loading-spinner\">\n  <div class=\"d-flex justify-content-center align-items-center text-secondary\">\n    <span class=\"fas fa-spinner fa-pulse fa-lg\"></span>\n    &nbsp;Daten werden geladen...\n  </div>\n</app-code-example>\n\n<h2 class=\"mt-5\">Loading Overlay</h2>\n<p>\n  Das Overlay kann für die ganze Applikation oder nur für den Content-Bereich gelten. Ein Overlay\n  über die ganze Applikation sollte nur dann verwendet werden, wenn der Benutzer die Aktion\n  möglichst nicht abbrechen soll.\n</p>\n\n<app-code-example\n  src=\"ui-elements/progress-indicators/progress-indicators.component.html#spinner-overlay\">\n  <button type=\"button\" class=\"btn btn-outline-primary mr-2\" (click)=\"showLoadingOverlay()\">\n    Overlay über Content-Bereich anzeigen\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-primary mr-2\" (click)=\"showSavingOverlay()\">\n    Overlay über ganze Applikation anzeigen\n  </button>\n\n  <div class=\"loading-overlay-content text-secondary\" *ngIf=\"isLoading\">\n    <p class=\"h1 mb-5\">Daten werden geladen...</p>\n    <span class=\"fas fa-spinner fa-pulse fa-4x\"></span>\n  </div>\n\n  <div class=\"loading-overlay-full text-secondary\" *ngIf=\"isSaving\">\n    <p class=\"h1 mb-5\">Daten werden gespeichert, bitte nicht abbrechen...</p>\n    <span class=\"fas fa-spinner fa-pulse fa-4x\"></span>\n  </div>\n</app-code-example>\n","import { interval as observableInterval, Observable } from 'rxjs';\n\nimport { map, startWith, take } from 'rxjs/operators';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './progress-indicators.component.html',\n})\nexport class ProgressIndicatorsComponent {\n  progress!: Observable<number>;\n  progressWithETA!: Observable<number>;\n  progressETA!: Observable<string>;\n  jobRunning = false;\n  job2Running = false;\n  isLoading = false;\n  isSaving = false;\n\n  longRunningAction(): void {\n    this.progress = observableInterval(1000).pipe(\n      take(10),\n      map((i) => 10 * (i + 1))\n    );\n  }\n\n  longRunningActionWithETA(): void {\n    const seconds = 30;\n    const observable = observableInterval(1000).pipe(\n      startWith(-1),\n      take(seconds + 1),\n      map((i) => i + 1)\n    );\n    this.progressWithETA = observable.pipe(map((i) => (100 * i) / seconds));\n    this.progressETA = observable.pipe(\n      map((i) => (i < seconds ? `${seconds - i}s verbleiben` : 'Fertig!'))\n    );\n  }\n\n  startAsyncJob(job: string): void {\n    if (job === 'job1') {\n      this.jobRunning = true;\n      setTimeout(() => (this.jobRunning = false), 3000);\n    } else if (job === 'job2') {\n      this.job2Running = true;\n      setTimeout(() => (this.job2Running = false), 3000);\n    }\n  }\n\n  showLoadingOverlay(): void {\n    this.isLoading = true;\n    setTimeout(() => (this.isLoading = false), 4000);\n  }\n\n  showSavingOverlay(): void {\n    this.isSaving = true;\n    setTimeout(() => (this.isSaving = false), 4000);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\n\nconst ALL_CLASSES = ['is-invalid', 'is-read-only'];\n\n/**\n * Hack Directive, only for demo purposes. Definitely not a best practice :>)\n */\n@Directive({ selector: '[appDemoStatus]' })\nexport class DemoStatusDirective implements OnChanges, OnInit {\n  @Input()\n  status!: DemoStatus;\n  private inputId!: string;\n\n  constructor(\n    private readonly element: ElementRef<HTMLInputElement>,\n    private readonly r2: Renderer2\n  ) {}\n\n  ngOnInit(): void {\n    this.inputId = this.element.nativeElement.id;\n    setTimeout(() => this.resetStatus(), 1000);\n  }\n\n  setDisabled(d: boolean): void {\n    this.element.nativeElement.disabled = d;\n  }\n\n  addClass(c: string): void {\n    this.r2.addClass(this.element.nativeElement, c);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const status = changes.status;\n    if (!status) {\n      return;\n    }\n\n    this.resetStatus();\n  }\n\n  private resetStatus() {\n    ALL_CLASSES.forEach((a) => {\n      this.r2.removeClass(this.element.nativeElement, a);\n    });\n    let d = false;\n\n    switch (this.status) {\n      case DemoStatus.invalid:\n        this.addClass('is-invalid');\n        break;\n      case DemoStatus.readOnly:\n        this.addClass('is-read-only');\n        d = true;\n        break;\n      default:\n        break;\n    }\n    this.setDisabled(d);\n  }\n}\n\nexport enum DemoStatus {\n  ok = 'ok',\n  invalid = 'invalid',\n  readOnly = 'readOnly',\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DemoStatus } from '../../../demo-utils/status/demo-status.directive';\n\n@Component({\n  selector: 'app-form-examples',\n  templateUrl: './small-form-example.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SmallFormExampleComponent implements OnInit {\n  issue = {\n    subject: null,\n  };\n  demoStatus = DemoStatus;\n  date?: '2004-06-02';\n  status = this.demoStatus.ok;\n  invalid = false;\n\n  ngOnInit(): void {\n    this.switchStatus(this.demoStatus.ok);\n  }\n\n  switchStatus(s: DemoStatus): void {\n    this.status = s;\n    this.invalid = this.status === DemoStatus.invalid;\n  }\n}\n","<h1 class=\"mt-3 mb-4\">Small Form Example</h1>\n\n<p class=\"lead\">\n  Wenn die Formulare einer Applikation eine gewisse Grösse nicht überschreiten, setzen wir auf eine\n  maximierte Übersichtlichkeit, indem die Labels oberhalb der Felder und die Fehlermeldungen\n  unterhalb der Felder platziert werden.\n</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Kommt zum Einsatz, wenn Formulare eine gewisse Grösse nicht überschreiten und genügend\n    vertikaler Platz für die Labels und Fehlermeldungen vorhanden ist.\n  </li>\n  <li>\n    Buttons (z.B. Abbrechen und Speichern) sind rechtsbündig unterhalb des Formulars platziert.\n  </li>\n  <li>\n    Es gelten auch die allgemeinen Form-Regeln:\n    <a routerLink=\"/styleguide/ui-elements/forms/\" class=\"highlight\">Forms</a>\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Wenn grosse Formulare mit vielen Eingabefelder gebaut werden sollen. In diesem Fall ist das\n    platzsparendere\n    <a routerLink=\"/styleguide/ui-elements/forms/large-form-example\" class=\"highlight\">\n      Large Form Example\n    </a>\n    besser geeignet.\n  </li>\n</ul>\n\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Aus Konsistenzgründen ist es wichtig, sich pro Applikation für einen der beiden Formulartypen zu\n    entscheiden und alle Formulare in der Applikation gleich zu gestalten.\n  </div>\n</div>\n\n<div class=\"btn-group mt-5 mb-4\" role=\"group\" aria-label=\"Basic example\">\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"switchStatus(demoStatus.ok)\"\n    [ngClass]=\"{\n      'btn-primary active': !invalid,\n      'btn-outline-primary': invalid\n    }\">\n    Edit mode\n  </button>\n  <button\n    class=\"btn btn-danger\"\n    (click)=\"switchStatus(demoStatus.invalid)\"\n    [ngClass]=\"{\n      'btn-danger active': invalid,\n      'btn-outline-primary': !invalid\n    }\">\n    Ungültig\n  </button>\n</div>\n\n<app-code-example\n  src=\"ui-elements/forms/small-form-example/small-form-example.component.html#small-form\">\n  <form class=\"needs-validation\">\n    <p class=\"title-divider font-weight-bold\">Profil</p>\n    <div class=\"form-group d-flex align-items-center\">\n      <span class=\"far fa-user-circle fa-border fa-2x text-secondary\"></span>\n      <a class=\"ml-2 btn btn-outline-primary\" href=\"javascript:void(0);\">Profilbild anpassen</a>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"benutzername\">Benutzername</label>\n        <input type=\"text\" class=\"form-control\" id=\"benutzername\" appDemoStatus [status]=\"status\" />\n        <div class=\"invalid-feedback\">Bitte einen Benutzernamen eingeben</div>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"email\">E-Mail</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          id=\"email\"\n          placeholder=\"name@example.com\"\n          appDemoStatus\n          [status]=\"status\" />\n        <div class=\"invalid-feedback\">Bitte eine gültige E-Mail Adresse eingeben</div>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"password\">Passwort</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" />\n        <div class=\"invalid-feedback\">Bitte ein Passwort eingeben</div>\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"required\" for=\"repeat-password\">Passwort wiederholen</label>\n        <input type=\"password\" class=\"form-control\" id=\"repeat-password\" />\n        <div class=\"invalid-feedback\">Bitte das eingegebene Passwort wiederholen</div>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-8\">\n        <label class=\"required\" for=\"kommentar\">Kommentar</label>\n        <textarea name=\"description4\" class=\"form-control\" id=\"kommentar\" rows=\"5\"></textarea>\n        <div class=\"invalid-feedback\">Bitte einen Kommentar eingeben</div>\n      </div>\n    </div>\n\n    <p class=\"title-divider font-weight-bold mt-4\">Person</p>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"vorname\">Vorname</label>\n        <input type=\"text\" class=\"form-control\" id=\"vorname\" />\n        <div class=\"invalid-feedback\">Bitte einen Vornamen eingeben</div>\n      </div>\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"name\">Nachname</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" />\n        <div class=\"invalid-feedback\">Bitte einen Nachnamen eingeben</div>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"geburtsdatum\">Geburtsdatum</label>\n        <app-datepicker id=\"geburtsdatum\"></app-datepicker>\n        <div class=\"invalid-feedback\">Bitte ein Geburtsdatum angeben</div>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"adresse\">Adresse</label>\n        <input type=\"text\" class=\"form-control\" id=\"adresse\" />\n        <div class=\"invalid-feedback\">Bitte eine Adresse eingeben</div>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-2\">\n        <label class=\"required\" for=\"plz\">PLZ</label>\n        <input type=\"text\" class=\"form-control\" id=\"plz\" />\n        <div class=\"invalid-feedback\">Bitte eine PLZ eingeben</div>\n      </div>\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"ort\">Ort</label>\n        <input type=\"text\" class=\"form-control\" id=\"ort\" />\n        <div class=\"invalid-feedback\">Bitte einen Ort eingeben</div>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"land\">Land</label>\n        <ng-select id=\"land\" placeholder=\"Land auswählen...\">\n          <ng-option>Schweiz</ng-option>\n          <ng-option>Liechtenstein</ng-option>\n          <ng-option>Deutschland</ng-option>\n        </ng-select>\n        <div class=\"invalid-feedback\">Bitte ein Land auswählen</div>\n      </div>\n    </div>\n\n    <p class=\"mb-0 font-weight-600\">Ausweis</p>\n    <div class=\"upload-content d-flex flex-column align-items-center justify-content-center\">\n      <div class=\"d-flex align-items-center\">\n        <span class=\"far fa-id-card fa-3x text-secondary mr-2\"></span>\n        <span class=\"fas fa-plus fa-lg text-secondary\"></span>\n      </div>\n      <div class=\"d-flex align-items-center\">\n        <a href=\"javascript:void(0);\" class=\"font-weight-bold my-1 mr-1\">Ausweis hochladen</a>\n        oder per Drag-and-drop reinziehen\n      </div>\n    </div>\n\n    <p class=\"title-divider font-weight-bold mt-4\">Benachrichtigungen</p>\n    <div class=\"form-group\">\n      <div class=\"custom-control custom-checkbox\">\n        <input class=\"custom-control-input\" type=\"checkbox\" value=\"\" id=\"wartungsarbeiten\" />\n        <label class=\"custom-control-label\" for=\"wartungsarbeiten\">\n          Bei Wartungsarbeiten eine Benachrichtigung erhalten\n        </label>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <div class=\"custom-control custom-checkbox\">\n        <input class=\"custom-control-input\" type=\"checkbox\" value=\"\" id=\"statusänderung\" checked />\n        <label class=\"custom-control-label\" for=\"statusänderung\">\n          Bei Statusänderungen eine Benachrichtigung erhalten\n        </label>\n      </div>\n    </div>\n  </form>\n  <div class=\"d-flex float-right mt-4 mb-2\">\n    <button class=\"btn btn-outline-primary\">Abbrechen</button>\n    <button class=\"btn btn-primary ml-2\" (click)=\"switchStatus(demoStatus.invalid)\">\n      Speichern\n    </button>\n  </div>\n</app-code-example>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DemoStatus } from '../../../demo-utils/status/demo-status.directive';\nimport { CustomMaxWidthComponent } from '../../../../bedag-components/layout/custom-max-width-component';\n\n@Component({\n  selector: 'app-form-examples',\n  templateUrl: './large-form-example.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LargeFormExampleComponent implements OnInit, CustomMaxWidthComponent {\n  maxWidth = '100%';\n\n  issue = {\n    subject: null,\n  };\n  demoStatus = DemoStatus;\n  date?: '2004-06-02';\n  status = this.demoStatus.ok;\n  invalid = false;\n\n  ngOnInit(): void {\n    this.switchStatus(this.demoStatus.ok);\n  }\n\n  switchStatus(s: DemoStatus): void {\n    this.status = s;\n    this.invalid = this.status === DemoStatus.invalid;\n  }\n}\n","<div style=\"max-width: 70em\">\n  <h1 class=\"mt-3 mb-4\">Large Form Example</h1>\n\n  <p class=\"lead\">\n    Wenn grosse Formulare in einer Applikation vorkommen, kann viel vertikaler Platz gespart werden,\n    indem die Labels links der Felder platziert werden.\n  </p>\n\n  <h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n  <ul>\n    <li>\n      Wenn grosse Formulare vorkommen und nicht genügend vertikaler Platz für die Labels und\n      Fehlermeldungen vorhanden ist.\n    </li>\n    <li>Buttons (z.B. Abbrechen und Speichern) sind rechtsbündig unterhalb des Forms platziert.</li>\n    <li>\n      Zudem können die Buttons bei sehr grossen Formularen in der\n      <a routerLink=\"/styleguide/layout/actionbar/\" class=\"highlight\">Action Bar</a>\n      angezeigt werden, damit sie zu jedem Zeitpunkt ohne Scrollen für den Benutzer sichtbar sind.\n    </li>\n    <li>\n      Es gelten auch die allgemeinen Form-Regeln:\n      <a routerLink=\"/styleguide/ui-elements/forms/\" class=\"highlight\">Forms</a>\n    </li>\n  </ul>\n\n  <h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n  <ul>\n    <li>\n      Wenn nur kleine Formulare mit wenigen Eingabefeldern gebaut werden sollen. In diesem Fall ist\n      das auf maximale Übersicht optimierte\n      <a routerLink=\"/styleguide/ui-elements/forms/small-form-example\" class=\"highlight\">\n        Small Form Example\n      </a>\n      besser geeignet.\n    </li>\n  </ul>\n\n  <div class=\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\">\n    <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n    <div>\n      Aus Konsistenzgründen ist es wichtig, sich pro Applikation für eine der beiden Formulartypen\n      zu entscheiden und alle Formulare in der Applikation gleich zu gestalten.\n    </div>\n  </div>\n\n  <div class=\"btn-group mt-5 mb-4\" role=\"group\" aria-label=\"Basic example\">\n    <button\n      class=\"btn btn-primary\"\n      (click)=\"switchStatus(demoStatus.ok)\"\n      [ngClass]=\"{\n        'btn-primary active': !invalid,\n        'btn-outline-primary': invalid\n      }\">\n      Edit mode\n    </button>\n    <button\n      class=\"btn btn-danger\"\n      (click)=\"switchStatus(demoStatus.invalid)\"\n      [ngClass]=\"{\n        'btn-danger active': invalid,\n        'btn-outline-primary': !invalid\n      }\">\n      Ungültig\n    </button>\n  </div>\n</div>\n<app-code-example\n  src=\"ui-elements/forms/large-form-example/large-form-example.component.html#large-form\">\n  <form class=\"needs-validation\">\n    <div class=\"row\">\n      <div class=\"col-lg-6 mb-4\">\n        <p class=\"title-divider font-weight-bold\">Person</p>\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label required\" for=\"name\">Nachname</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"name\" appDemoStatus [status]=\"status\" />\n            <div class=\"invalid-feedback\">Bitte einen Nachnamen eingeben</div>\n          </div>\n          <label class=\"col-md-2 col-form-label required\" for=\"vorname\">Vorname</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"vorname\" appDemoStatus [status]=\"status\" />\n            <div class=\"invalid-feedback\">Bitte einen Vornamen eingeben</div>\n          </div>\n        </div>\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label required\" for=\"adresse\">Adresse</label>\n          <div class=\"col-md-10\">\n            <input type=\"text\" class=\"form-control\" id=\"adresse\" appDemoStatus [status]=\"status\" />\n            <div class=\"invalid-feedback\">Bitte eine Adresse eingeben</div>\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label required\" for=\"geburtsdatum\">Geburtsdatum</label>\n          <div class=\"col-md-4\">\n            <app-datepicker id=\"geburtsdatum\" appDemoStatus [status]=\"status\"></app-datepicker>\n            <div class=\"invalid-feedback\">Bitte ein Geburtsdatum angeben</div>\n          </div>\n          <label class=\"col-md-2 col-form-label required\" for=\"heimatort\">Heimatort</label>\n          <div class=\"col-md-4\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"heimatort\"\n              appDemoStatus\n              [status]=\"status\" />\n            <div class=\"invalid-feedback\">Bitte Heimatort eingeben</div>\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label required\" for=\"sprache\">Sprache</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"sprache\" appDemoStatus [status]=\"status\" />\n            <div class=\"invalid-feedback\">Bitte eine Sprache eingeben</div>\n          </div>\n          <label class=\"col-md-2 col-form-label required\" for=\"geschlecht\">Geschlecht</label>\n          <div class=\"col-md-4\">\n            <ng-select\n              id=\"geschlecht\"\n              appDemoStatus\n              [status]=\"status\"\n              placeholder=\"Geschlecht wählen...\">\n              <ng-option>Weiblich</ng-option>\n              <ng-option>Männlich</ng-option>\n              <ng-option>Andere</ng-option>\n            </ng-select>\n            <div class=\"invalid-feedback\">Bitte Geschlecht wählen</div>\n          </div>\n        </div>\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label required\" for=\"versicherung\">Versicherung</label>\n          <div class=\"col-md-10\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"versicherung\"\n              appDemoStatus\n              [status]=\"status\" />\n            <div class=\"invalid-feedback\">Bitte eine Versicherung eingeben</div>\n          </div>\n        </div>\n\n        <p class=\"title-divider font-weight-bold mt-4\">Ausweis</p>\n        <div class=\"row mb-3\">\n          <div class=\"col-md-2\">\n            <div class=\"custom-control custom-checkbox\">\n              <input class=\"custom-control-input\" type=\"checkbox\" id=\"kat-a\" value=\"option1\" />\n              <label class=\"custom-control-label\" for=\"kat-a\">Kat. A</label>\n            </div>\n          </div>\n          <div class=\"col-md-2\">\n            <div class=\"custom-control custom-checkbox\">\n              <input class=\"custom-control-input\" type=\"checkbox\" id=\"kat-b\" value=\"option2\" />\n              <label class=\"custom-control-label\" for=\"kat-b\">Kat. B</label>\n            </div>\n          </div>\n          <div class=\"col-md-2\">\n            <div class=\"custom-control custom-checkbox\">\n              <input class=\"custom-control-input\" type=\"checkbox\" id=\"kat-c\" value=\"option3\" />\n              <label class=\"custom-control-label\" for=\"kat-c\">Kat. C</label>\n            </div>\n          </div>\n        </div>\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"erstellt\">Erstellt</label>\n          <div class=\"col-md-4\">\n            <app-datepicker id=\"erstellt\"></app-datepicker>\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"gültigbis\">Gültig bis</label>\n          <div class=\"col-md-4\">\n            <app-datepicker id=\"gültigbis\"></app-datepicker>\n          </div>\n        </div>\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"zid-nummer\">SAP-ZID Nummer</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"zid-nummer\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"tg-nummer\">Mil. TG-Nummer</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"tg-nummer\" />\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"kommentar\">Kommentar</label>\n          <textarea name=\"description4\" class=\"form-control\" id=\"kommentar\" rows=\"8\"></textarea>\n        </div>\n      </div>\n      <div class=\"col-lg-6 mb-4\">\n        <p class=\"title-divider font-weight-bold\">Fahrzeug</p>\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"schild\">Schild</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"schild\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"farbe\">Farbe</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"farbe\" />\n          </div>\n        </div>\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"verwendung\">Bes. Verwendung</label>\n          <div class=\"col-md-10\">\n            <input type=\"text\" class=\"form-control\" id=\"verwendung\" />\n          </div>\n        </div>\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"fahrzeug-art\">Art des Fahrzeuges</label>\n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" id=\"fahrzeug-art\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"code\">Code</label>\n          <div class=\"col-md-2\">\n            <input type=\"text\" class=\"form-control\" id=\"code\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"marke-typ\">Marke und Typ</label>\n          <div class=\"col-md-10\">\n            <input type=\"text\" class=\"form-control\" id=\"marke-typ\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"fahrgestell-nr\">Fahrgestell-Nr.</label>\n          <div class=\"col-md-10\">\n            <input type=\"text\" class=\"form-control\" id=\"fahrgestell-nr\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"plaetze-total\">Plätze Total</label>\n          <div class=\"col-md-2\">\n            <input type=\"text\" class=\"form-control\" id=\"plaetze-total\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"plaetze-vorne\">Plätze Vorne</label>\n          <div class=\"col-md-2\">\n            <input type=\"text\" class=\"form-control\" id=\"plaetze-vorne\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"leergewicht\">Leergewicht (kg)</label>\n          <div class=\"col-md-2\">\n            <input type=\"text\" class=\"form-control\" id=\"leergewicht\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"stammnummer\">Stammnummer</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"stammnummer\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"nutz-last\">Nutz-/Sattellast (kg)</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"nutz-last\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"typengenehminung\">Typengenehmigung</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"typengenehminung\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"gesamtgewicht\">Gesamtgewicht (kg)</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"gesamtgewicht\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"hubraum\">Hubraum (cm3)</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"hubraum\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"zulässiges-gewicht\">\n            Maximalgewicht (kg)\n          </label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"zulässiges-gewicht\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"leistung\">Leistung (kW)</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"leistung\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"anhängelast\">Anhängelast (kg)</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"anhängelast\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"kw-leergewicht\">kW/kg Leergewicht</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"kw-leergewicht\" />\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"dachlast\">Dachlast (kg)</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"dachlast\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"erste-inverkehrsetzung\">\n            1. Inverkehrsetzung\n          </label>\n          <div class=\"col-md-4\">\n            <app-datepicker id=\"erste-inverkehrsetzung\"></app-datepicker>\n          </div>\n          <label class=\"col-md-2 col-form-label\" for=\"emissionscode\">Emissionscode</label>\n          <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" id=\"emissionscode\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"ort-datum\">Ort, Datum</label>\n          <div class=\"col-md-10\">\n            <input type=\"text\" class=\"form-control\" id=\"ort-datum\" />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"col-md-2 col-form-label\" for=\"prüfung\">Prüfung</label>\n          <div class=\"col-md-10\">\n            <input type=\"text\" class=\"form-control\" id=\"prüfung\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <p class=\"mb-0 font-weight-600\">Weitere Dokumente</p>\n    <div class=\"upload-content d-flex flex-column align-items-center justify-content-center\">\n      <div class=\"d-flex align-items-center\">\n        <span class=\"far fa-file-alt fa-3x text-secondary mr-2\"></span>\n        <span class=\"fas fa-plus fa-lg text-secondary\"></span>\n      </div>\n      <div class=\"d-flex align-items-center\">\n        <a href=\"javascript:void(0);\" class=\"font-weight-bold my-1 mr-1\">Dokumente hochladen</a>\n        oder per Drag-and-drop reinziehen\n      </div>\n    </div>\n  </form>\n</app-code-example>\n<div id=\"actionbar\">\n  <button class=\"btn btn-outline-primary mr-2\">Abbrechen</button>\n  <button class=\"btn btn-primary\" (click)=\"switchStatus(demoStatus.invalid)\">Speichern</button>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './mauswege.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MauswegeComponent {}\n","<h1 class=\"mt-3 mb-4\">Mauswege</h1>\n\n<p class=\"lead\">\n  Mauswege beschreiben die Distanz, die der Nutzer von einem Interaktionselement zum nächsten\n  braucht.\n</p>\n\n<h2>Warum ist es wichtig?</h2>\n<p>\n  Die Berechnung der Mauswege mag banal erscheinen. Wenn aber der Nutzer bei der Bedienung laufend\n  die gesamte Bedienoberfläche überqueren muss, senkt das seine Effizienz und die Zufriedenheit mit\n  der Anwendung.\n</p>\n\n<h2 class=\"mt-5\">Was ist zu berücksichtigen?</h2>\n<p>Die zentralen Fragen sind:</p>\n<ul>\n  <li>Welche Informationen muss der Nutzer als erstes wahrnehmen und mental verarbeiten?</li>\n  <li>\n    Sind beispielsweise Dropdowns nur so breit, wie sie es für eine gute Lesbarkeit sein müssen?\n    Sonst liest der Nutzer vorne den Text und zirkelt dann zum Dropdown Pfeil.\n  </li>\n  <li>In welcher Reihenfolge bedient der Nutzer üblicherweise die Bedienoberfläche?</li>\n  <li>\n    Wie können die Interaktionselemente so angeordnet werden, dass der Benutzer möglichst schnell\n    mit der Maus von Element zu Element navigieren kann?\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/usability/tastaturbedienbarkeit\" class=\"highlight\">\n      Tastaturbedienbarkeit\n    </a>\n  </li>\n</ul>\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function repeat(count) {\n    if (count === void 0) { count = Infinity; }\n    return count <= 0\n        ? function () { return EMPTY; }\n        : operate(function (source, subscriber) {\n            var soFar = 0;\n            var innerSub;\n            var subscribeForRepeat = function () {\n                var syncUnsub = false;\n                innerSub = source.subscribe(new OperatorSubscriber(subscriber, undefined, function () {\n                    if (++soFar < count) {\n                        if (innerSub) {\n                            innerSub.unsubscribe();\n                            innerSub = null;\n                            subscribeForRepeat();\n                        }\n                        else {\n                            syncUnsub = true;\n                        }\n                    }\n                    else {\n                        subscriber.complete();\n                    }\n                }));\n                if (syncUnsub) {\n                    innerSub.unsubscribe();\n                    innerSub = null;\n                    subscribeForRepeat();\n                }\n            };\n            subscribeForRepeat();\n        });\n}\n","import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/from';\nexport var defaultThrottleConfig = {\n    leading: true,\n    trailing: false,\n};\nexport function throttle(durationSelector, _a) {\n    var _b = _a === void 0 ? defaultThrottleConfig : _a, leading = _b.leading, trailing = _b.trailing;\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        var sendValue = null;\n        var throttled = null;\n        var isComplete = false;\n        var endThrottling = function () {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        var cleanupThrottling = function () {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        var startThrottle = function (value) {\n            return (throttled = innerFrom(durationSelector(value)).subscribe(new OperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        };\n        var send = function () {\n            if (hasValue) {\n                hasValue = false;\n                var value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, function () {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, Component, Input, Directive, ElementRef, ComponentFactoryResolver, ApplicationRef, ViewContainerRef, Injector, ViewChild, TemplateRef, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, fromEvent, timer, throwError, of } from 'rxjs';\nimport { filter, switchMap, first, tap, repeat, map, throttle, takeUntil, catchError, scan, distinctUntilChanged } from 'rxjs/operators';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction KeyboardShortcutsHelpComponent_ng_template_0_div_1_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.emptyMessage, \" \");\n} }\nfunction KeyboardShortcutsHelpComponent_ng_template_0_div_1_ul_7_ng_keyboard_shortcuts_help_item_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ng-keyboard-shortcuts-help-item\", 11);\n} if (rf & 2) {\n    const shortcut_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    ɵngcc0.ɵɵproperty(\"shortcut\", shortcut_r7)(\"index\", i_r8);\n} }\nfunction KeyboardShortcutsHelpComponent_ng_template_0_div_1_ul_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"h4\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, KeyboardShortcutsHelpComponent_ng_template_0_div_1_ul_7_ng_keyboard_shortcuts_help_item_3_Template, 1, 2, \"ng-keyboard-shortcuts-help-item\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const label_r5 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(label_r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.shortcuts[label_r5]);\n} }\nfunction KeyboardShortcutsHelpComponent_ng_template_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"h3\", 4);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(5, KeyboardShortcutsHelpComponent_ng_template_0_div_1_span_5_Template, 2, 1, \"span\", 6);\n    ɵngcc0.ɵɵelementStart(6, \"div\");\n    ɵngcc0.ɵɵtemplate(7, KeyboardShortcutsHelpComponent_ng_template_0_div_1_ul_7_Template, 4, 2, \"ul\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMap(ctx_r1.className);\n    ɵngcc0.ɵɵproperty(\"@enterAnimation\", undefined);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"modal-\", ctx_r1.title, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.title);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.labels.length);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.labels);\n} }\nfunction KeyboardShortcutsHelpComponent_ng_template_0_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function KeyboardShortcutsHelpComponent_ng_template_0_div_2_Template_div_mousedown_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.hide(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵproperty(\"@overlayAnimation\", undefined);\n} }\nfunction KeyboardShortcutsHelpComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵtemplate(1, KeyboardShortcutsHelpComponent_ng_template_0_div_1_Template, 8, 8, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(2, KeyboardShortcutsHelpComponent_ng_template_0_div_2_Template, 1, 1, \"div\", 2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", \"modal-\" + ctx_r0.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showing);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showing);\n} }\nfunction KeyboardShortcutsHelpItemComponent_div_0_div_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const key_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(key_r6);\n} }\nfunction KeyboardShortcutsHelpItemComponent_div_0_div_5_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtext(1, \" / \");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction KeyboardShortcutsHelpItemComponent_div_0_div_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(1, KeyboardShortcutsHelpItemComponent_div_0_div_5_span_1_Template, 2, 1, \"span\", 6);\n    ɵngcc0.ɵɵtemplate(2, KeyboardShortcutsHelpItemComponent_div_0_div_5_span_2_Template, 2, 0, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const sKey_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", sKey_r2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.parsedKeys.length > 1 && i_r3 < ctx_r1.parsedKeys.length - 1);\n} }\nfunction KeyboardShortcutsHelpItemComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(5, KeyboardShortcutsHelpItemComponent_div_0_div_5_Template, 3, 2, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"item--odd\", ctx_r0.index % 2 !== 0);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.shortcut.description);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.parsedKeys);\n} }\nfunction isFunction(x) {\n    return typeof x === \"function\";\n}\nconst invert = obj => {\n    const new_obj = {};\n    for (const prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            new_obj[obj[prop]] = prop;\n        }\n    }\n    return new_obj;\n};\nconst any = (fn, list) => {\n    let idx = 0;\n    while (idx < list.length) {\n        if (fn(list[idx])) {\n            return true;\n        }\n        idx += 1;\n    }\n    return false;\n};\nconst identity = x => x;\n/**\n * @ignore\n * @param x\n * @returns boolean\n */\nconst isNill = x => x == null;\n/**\n * @ignore\n * @param xs\n * @param key\n * @returns any\n */\nconst groupBy = (xs, key) => xs.reduce((result, x) => (Object.assign(Object.assign({}, result), { [x[key]]: [...(result[x[key]] || []), x] })), {});\n/**\n * @ignore\n * @param first\n * @param second\n * @returns any[]\n */\nconst difference = (first, second) => first.filter(item => !second.includes(item));\n/**\n * @ignore\n * @param preds\n * @returns (...args) => boolean;\n */\nconst allPass = preds => (...args) => {\n    let idx = 0;\n    const len = preds.length;\n    while (idx < len) {\n        if (!preds[idx].apply(this, args)) {\n            return false;\n        }\n        idx += 1;\n    }\n    return true;\n};\nconst prop = prop => object => object[prop];\nconst minMaxArrayProp = type => (property, array) => Math[type].apply(Math, array.map(prop(property)));\nconst ɵ0 = minMaxArrayProp;\nconst maxArrayProp = (property, array) => {\n    return array.reduce((acc, curr) => {\n        const propFn = prop(property);\n        const currentValue = propFn(curr);\n        const previousValue = propFn(acc);\n        return currentValue > previousValue ? curr : acc;\n    }, { [property]: 0 });\n};\n\nconst isMac = typeof navigator !== \"undefined\" ? navigator.userAgent.includes(\"Mac OS\") : false;\nconst modifiers = {\n    shift: \"shiftKey\",\n    ctrl: \"ctrlKey\",\n    alt: \"altKey\",\n    cmd: isMac ? \"metaKey\" : \"ctrlKey\",\n    command: isMac ? \"metaKey\" : \"ctrlKey\",\n    meta: isMac ? \"metaKey\" : \"ctrlKey\",\n    \"left command\": \"metaKey\",\n    \"right command\": \"MetaRight\",\n    \"⌘\": isMac ? \"metaKey\" : \"ctrlKey\",\n    option: \"altKey\",\n    ctl: \"ctrlKey\",\n    control: \"ctrlKey\"\n};\nconst _SPECIAL_CASES = {\n    plus: \"+\"\n};\nconst symbols = {\n    cmd: isMac ? \"⌘\" : \"Ctrl\",\n    command: isMac ? \"⌘\" : \"Ctrl\",\n    \"left command\": isMac ? \"⌘\" : \"Ctrl\",\n    \"right command\": isMac ? \"⌘\" : \"Ctrl\",\n    option: isMac ? \"⌥\" : \"Alt\",\n    plus: \"+\",\n    left: \"←\",\n    right: \"→\",\n    up: \"↑\",\n    down: \"↓\",\n    alt: isMac ? \"⌥\" : \"Alt\",\n    ctrl: \"Ctrl\",\n    control: \"Ctrl\",\n    shift: \"⇧\"\n};\nconst _MAP = {\n    8: \"backspace\",\n    9: \"tab\",\n    13: \"enter\",\n    16: \"shift\",\n    17: [\"ctrl\", \"control\"],\n    18: \"alt\",\n    20: \"capslock\",\n    27: [\"esc\", \"escape\"],\n    32: [\"space\", \"spc\"],\n    33: \"pageup\",\n    34: \"pagedown\",\n    35: \"end\",\n    36: \"home\",\n    37: \"left\",\n    38: \"up\",\n    39: \"right\",\n    40: \"down\",\n    45: \"ins\",\n    46: \"del\",\n    91: [\"meta\", \"cmd\", \"command\"],\n    93: [\"meta\", \"cmd\", \"command\"],\n    224: [\"meta\", \"cmd\", \"command\"]\n};\n/*\n * mapping for special characters so they can support\n *\n * this dictionary is only used incase you want to bind a\n * keyup or keydown event to one of these keys\n *\n */\nconst _KEYCODE_MAP = {\n    106: \"*\",\n    107: \"+\",\n    109: \"-\",\n    110: \".\",\n    111: \"/\",\n    186: \";\",\n    187: \"=\",\n    188: \",\",\n    189: \"-\",\n    190: \".\",\n    191: \"/\",\n    192: \"`\",\n    219: \"[\",\n    220: \"\\\\\",\n    221: \"]\",\n    222: \"'\"\n};\n/**\n * this is a mapping of keys that require shift on a US keypad\n * back to the non shift equivelents\n *\n * this is so you can use keyup events with these keys\n *\n * note that this will only work reliably on US keyboards\n *\n */\nconst _SHIFT_MAP = {\n    \"`\": \"~\",\n    \"1\": \"!\",\n    \"2\": \"@\",\n    \"3\": \"#\",\n    \"4\": \"$\",\n    \"5\": \"%\",\n    \"6\": \"^\",\n    \"7\": \"&\",\n    \"8\": \"*\",\n    \"9\": \"(\",\n    \"0\": \")\",\n    \"-\": \"_\",\n    \"=\": \"+\",\n    \";\": \":\",\n    \"'\": '\"',\n    \",\": \"<\",\n    \".\": \">\",\n    \"/\": \"?\",\n    \"\\\\\": \"|\"\n};\nconst _INVERTED_SHIFT_MAP = invert(_SHIFT_MAP);\n/**\n * loop through the f keys, f1 to f19 and add them to the map\n * programatically\n */\nfor (let i = 1; i < 20; ++i) {\n    _MAP[111 + i] = \"f\" + i;\n}\n/**\n * loop through to map numbers on the numeric keypad\n */\nfor (let i = 0; i <= 9; ++i) {\n    // This needs to use a string cause otherwise since 0 is falsey\n    // event will never fire for numpad 0 pressed as part of a keydown\n    // event.\n    _MAP[i + 96] = i.toString();\n}\n\n/**\n * @ignore\n * @type {number}\n */\nlet guid = 0;\nclass KeyboardShortcutsService {\n    /**\n     * @ignore\n     */\n    constructor(document) {\n        this.document = document;\n        /**\n         * Parsed shortcuts\n         * for each key create a predicate function\n         */\n        this._shortcuts = [];\n        this._sequences = [];\n        /**\n         * Throttle the keypress event.\n         */\n        this.throttleTime = 0;\n        this._pressed = new Subject();\n        /**\n         * Streams of pressed events, can be used instead or with a command.\n         */\n        this.pressed$ = this._pressed.asObservable();\n        /**\n         * Disable all keyboard shortcuts\n         */\n        this.disabled = false;\n        this._shortcutsSub = new BehaviorSubject([]);\n        this.shortcuts$ = this._shortcutsSub\n            .asObservable()\n            .pipe(filter(shortcuts => !!shortcuts.length));\n        this._ignored = [\"INPUT\", \"TEXTAREA\", \"SELECT\"];\n        /**\n         * @ignore\n         * Subscription for on destroy.\n         */\n        this.subscriptions = [];\n        /**\n         * @ignore\n         * @param shortcut\n         */\n        this.isAllowed = (shortcut) => {\n            const target = shortcut.event.target;\n            if (target === shortcut.target) {\n                return true;\n            }\n            if (shortcut.allowIn.length) {\n                return !difference(this._ignored, shortcut.allowIn).includes(target.nodeName);\n            }\n            return !this._ignored.includes(target.nodeName);\n        };\n        /**\n         * @ignore\n         * @param event\n         */\n        this.mapEvent = event => {\n            return this._shortcuts\n                .filter(shortcut => !shortcut.isSequence)\n                .map(shortcut => Object.assign({}, shortcut, {\n                predicates: any(identity, shortcut.predicates.map((predicates) => allPass(predicates)(event))),\n                event: event\n            }))\n                .filter(shortcut => shortcut.predicates)\n                .reduce((acc, shortcut) => (acc.priority > shortcut.priority ? acc : shortcut), {\n                priority: 0\n            });\n        };\n        this.keydown$ = fromEvent(this.document, \"keydown\");\n        /**\n         * fixes for firefox prevent default\n         * on click event on button focus:\n         * see issue:\n         * keeping this here for now, but it is commented out\n         * Firefox reference bug:\n         * https://bugzilla.mozilla.org/show_bug.cgi?id=1487102\n         * and my repo:\n         *\n         * https://github.com/omridevk/ng-keyboard-shortcuts/issues/35\n         */\n        this.ignore$ = this.pressed$.pipe(filter(e => e.event.defaultPrevented), switchMap(() => this.clicks$.pipe(first())), tap((e) => {\n            e.preventDefault();\n            e.stopPropagation();\n        }), repeat());\n        /**\n         * @ignore\n         */\n        this.clicks$ = fromEvent(this.document, \"click\", { capture: true });\n        this.keyup$ = fromEvent(this.document, \"keyup\");\n        /**\n         * @ignore\n         */\n        this.keydownCombo$ = this.keydown$.pipe(filter(_ => !this.disabled), map(this.mapEvent), filter((shortcut) => !shortcut.target || shortcut.event.target === shortcut.target), filter((shortcut) => isFunction(shortcut.command)), filter(this.isAllowed), tap(shortcut => {\n            if (!shortcut.preventDefault) {\n                return;\n            }\n            shortcut.event.preventDefault();\n            shortcut.event.stopPropagation();\n        }), throttle(shortcut => timer(shortcut.throttleTime)), tap(shortcut => shortcut.command({ event: shortcut.event, key: shortcut.key })), tap(shortcut => this._pressed.next({ event: shortcut.event, key: shortcut.key })), takeUntil(this.keyup$), repeat(), catchError(error => throwError(error)));\n        /**\n         * @ignore\n         */\n        this.timer$ = new Subject();\n        /**\n         * @ignore\n         */\n        this.resetCounter$ = this.timer$\n            .asObservable()\n            .pipe(switchMap(() => timer(KeyboardShortcutsService.TIMEOUT_SEQUENCE)));\n        /**\n         * @ignore\n         */\n        this.keydownSequence$ = this.shortcuts$.pipe(map(shortcuts => shortcuts.filter(shortcut => shortcut.isSequence)), switchMap(sequences => this.keydown$.pipe(map(event => {\n            return {\n                event,\n                sequences\n            };\n        }), tap(this.timer$))), scan((acc, arg) => {\n            let { event } = arg;\n            const currentLength = acc.events.length;\n            const sequences = currentLength ? acc.sequences : arg.sequences;\n            let [characters] = this.characterFromEvent(event);\n            characters = Array.isArray(characters)\n                ? [...characters, event.key]\n                : [characters, event.key];\n            const result = sequences\n                .map(sequence => {\n                const sequences = sequence.sequence.filter(seque => characters.some(key => (_SPECIAL_CASES[seque[currentLength]] ||\n                    seque[currentLength]) === key));\n                const partialMatch = sequences.length > 0;\n                if (sequence.fullMatch) {\n                    return sequence;\n                }\n                return Object.assign(Object.assign({}, sequence), { sequence: sequences, partialMatch, event: event, fullMatch: partialMatch &&\n                        this.isFullMatch({ command: sequence, events: acc.events }) });\n            })\n                .filter(sequences => sequences.partialMatch || sequences.fullMatch);\n            let [match] = result;\n            if (!match || this.modifiersOn(event)) {\n                return { events: [], sequences: this._sequences };\n            }\n            /*\n             * handle case of \"?\" sequence and \"? a\" sequence\n             * need to determine which one to trigger.\n             * if both match, we pick the longer one (? a) in this case.\n             */\n            const guess = maxArrayProp(\"priority\", result);\n            if (result.length > 1 && guess.fullMatch) {\n                return { events: [], command: guess, sequences: this._sequences };\n            }\n            if (result.length > 1) {\n                return { events: [...acc.events, event], command: result, sequences: result };\n            }\n            if (match.fullMatch) {\n                return { events: [], command: match, sequences: this._sequences };\n            }\n            return { events: [...acc.events, event], command: result, sequences: result };\n        }, { events: [], sequences: [] }), switchMap(({ command }) => {\n            if (Array.isArray(command)) {\n                /*\n                 * Add a timer to handle the case where for example:\n                 * a sequence \"?\" is registered and \"? a\" is registered as well\n                 * if the user does not hit any key for 500ms, the single sequence will trigger\n                 * if any keydown event occur, this timer will reset, given a chance to complete\n                 * the full sequence (? a) in this case.\n                 * This delay only occurs when single key sequence is the beginning of another sequence.\n                 */\n                return timer(500).pipe(map(() => ({ command: command.filter(command => command.fullMatch)[0] })));\n            }\n            return of({ command });\n        }), takeUntil(this.pressed$), filter(({ command }) => command && command.fullMatch), map(({ command }) => command), filter((shortcut) => isFunction(shortcut.command)), filter((shortcut) => !shortcut.target || shortcut.event.target === shortcut.target), filter(this.isAllowed), tap(shortcut => !shortcut.preventDefault || shortcut.event.preventDefault()), throttle(shortcut => timer(shortcut.throttleTime)), tap(shortcut => shortcut.command({ event: shortcut.event, key: shortcut.key })), tap(shortcut => this._pressed.next({ event: shortcut.event, key: shortcut.key })), takeUntil(this.resetCounter$), repeat());\n        /**\n         * @ignore\n         * transforms a shortcut to:\n         * a predicate function\n         */\n        this.getKeys = (keys) => {\n            return keys\n                .map(key => key.trim())\n                .filter(key => key !== \"+\")\n                .map(key => {\n                // for modifiers like control key\n                // look for event['ctrlKey']\n                // otherwise use the keyCode\n                key = _SPECIAL_CASES[key] || key;\n                if (modifiers.hasOwnProperty(key)) {\n                    return event => {\n                        return !!event[modifiers[key]];\n                    };\n                }\n                return event => {\n                    const isUpper = key === key.toUpperCase();\n                    const isNonAlpha = (/[^a-zA-Z\\d\\s:]/).test(key);\n                    const inShiftMap = _INVERTED_SHIFT_MAP[key];\n                    let [characters, shiftKey] = this.characterFromEvent(event);\n                    const allModifiers = Object.keys(modifiers).map((key) => {\n                        return modifiers[key];\n                    });\n                    const hasModifiers = allModifiers.some(modifier => event[modifier]);\n                    characters = Array.isArray(characters)\n                        ? [...characters, event.key]\n                        : [characters, event.key];\n                    // if has modifiers:\n                    // we want to make sure it is not upper case letters\n                    // (because upper has modifiers so we want continue the check)\n                    // we also want to make sure it is not alphanumeric char like ? / ^ & and others (since those could require modifiers as well)\n                    // we also want to check this only if the length of\n                    // of the keys is one (i.e the command key is \"?\" or \"c\"\n                    // this while check is here to verify that:\n                    // if registered key like \"e\"\n                    // it won't be fired when clicking ctrl + e, or any modifiers + the key\n                    // we only want to trigger when the single key is clicked alone\n                    // thus all these edge cases.\n                    // hopefully this would cover all cases\n                    // TODO:: find a way simplify this\n                    if (hasModifiers\n                        && (!isUpper || isNonAlpha)\n                        && !inShiftMap\n                        && keys.length === 1) {\n                        return false;\n                    }\n                    return characters.some(char => {\n                        if (char === key && isUpper) {\n                            return true;\n                        }\n                        return key === char;\n                    });\n                };\n            });\n        };\n        this.subscriptions.push(this.keydownSequence$.subscribe(), this.keydownCombo$.subscribe()\n        // this.ignore$.subscribe()\n        );\n    }\n    /**\n     * @ignore\n     * @param command\n     * @param events\n     */\n    isFullMatch({ command, events }) {\n        if (!command) {\n            return false;\n        }\n        return command.sequence.some(sequence => {\n            return sequence.length === events.length + 1;\n        });\n    }\n    /**\n     * @ignore\n     */\n    get shortcuts() {\n        return this._shortcuts;\n    }\n    /**\n     * @ignore\n     * @param event\n     */\n    _characterFromEvent(event) {\n        if (typeof event.which !== \"number\") {\n            event.which = event.keyCode;\n        }\n        if (_SPECIAL_CASES[event.which]) {\n            return [_SPECIAL_CASES[event.which], event.shiftKey];\n        }\n        if (_MAP[event.which]) {\n            // for non keypress events the special maps are needed\n            return [_MAP[event.which], event.shiftKey];\n        }\n        if (_KEYCODE_MAP[event.which]) {\n            return [_KEYCODE_MAP[event.which], event.shiftKey];\n        }\n        // in case event key is lower case but registered key is upper case\n        // return it in the lower case\n        if (String.fromCharCode(event.which).toLowerCase() !== event.key) {\n            return [String.fromCharCode(event.which).toLowerCase(), event.shiftKey];\n        }\n        return [event.key, event.shiftKey];\n    }\n    characterFromEvent(event) {\n        let [key, shiftKey] = this._characterFromEvent(event);\n        if (shiftKey && _SHIFT_MAP[key]) {\n            return [_SHIFT_MAP[key], shiftKey];\n        }\n        return [key, shiftKey];\n    }\n    /**\n     * @ignore\n     * Remove subscription.\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n    /**\n     * @ignore\n     * @param shortcuts\n     */\n    isSequence(shortcuts) {\n        return !shortcuts.some(shortcut => shortcut.includes(\"+\") || shortcut.length === 1);\n    }\n    /**\n     * Add new shortcut/s\n     */\n    add(shortcuts) {\n        shortcuts = Array.isArray(shortcuts) ? shortcuts : [shortcuts];\n        const commands = this.parseCommand(shortcuts);\n        commands.forEach(command => {\n            if (command.isSequence) {\n                this._sequences.push(command);\n                return;\n            }\n            this._shortcuts.push(command);\n        });\n        setTimeout(() => {\n            this._shortcutsSub.next([...this._shortcuts, ...this._sequences]);\n        });\n        return commands.map(command => command.id);\n    }\n    /**\n     * Remove a command based on key or array of keys.\n     * can be used for cleanup.\n     * @returns\n     * @param ids\n     */\n    remove(ids) {\n        ids = Array.isArray(ids) ? ids : [ids];\n        this._shortcuts = this._shortcuts.filter(shortcut => !ids.includes(shortcut.id));\n        this._sequences = this._sequences.filter(shortcut => !ids.includes(shortcut.id));\n        setTimeout(() => {\n            this._shortcutsSub.next([...this._shortcuts, ...this._sequences]);\n        });\n        return this;\n    }\n    /**\n     * Returns an observable of keyboard shortcut filtered by a specific key.\n     * @param key - the key to filter the observable by.\n     */\n    select(key) {\n        return this.pressed$.pipe(filter(({ event, key: eventKeys }) => {\n            eventKeys = Array.isArray(eventKeys) ? eventKeys : [eventKeys];\n            return !!eventKeys.find(eventKey => eventKey === key);\n        }));\n    }\n    /**\n     * @ignore\n     * @param event\n     */\n    modifiersOn(event) {\n        return [\"metaKey\", \"altKey\", \"ctrlKey\"].some(mod => event[mod]);\n    }\n    /**\n     * @ignore\n     * Parse each command using getKeys function\n     */\n    parseCommand(command) {\n        const commands = Array.isArray(command) ? command : [command];\n        return commands.map(command => {\n            const keys = Array.isArray(command.key) ? command.key : [command.key];\n            const priority = Math.max(...keys.map(key => key.split(\" \").filter(identity).length));\n            const predicates = keys.map(key => this.getKeys(key.split(\" \").filter(identity)));\n            const isSequence = this.isSequence(keys);\n            const sequence = isSequence\n                ? keys.map(key => key\n                    .split(\" \")\n                    .filter(identity)\n                    .map(key => key.trim()))\n                : [];\n            return Object.assign(Object.assign({}, command), { isSequence, sequence: isSequence ? sequence : [], allowIn: command.allowIn || [], key: keys, id: `${guid++}`, throttle: isNill(command.throttleTime) ? this.throttleTime : command.throttleTime, priority: priority, predicates: predicates });\n        });\n    }\n}\nKeyboardShortcutsService.ɵfac = function KeyboardShortcutsService_Factory(t) { return new (t || KeyboardShortcutsService)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/**\n * @ignore\n * 2000 ms window to allow between key sequences otherwise\n * the sequence will reset.\n */\nKeyboardShortcutsService.TIMEOUT_SEQUENCE = 1000;\nKeyboardShortcutsService.ɵprov = ɵɵdefineInjectable({ factory: function KeyboardShortcutsService_Factory() { return new KeyboardShortcutsService(ɵɵinject(DOCUMENT)); }, token: KeyboardShortcutsService, providedIn: \"root\" });\nKeyboardShortcutsService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardShortcutsService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * A component to bind global shortcuts, can be used multiple times across the app\n * will remove registered shortcuts when element is removed from DOM.\n */\nclass KeyboardShortcutsComponent {\n    /**\n     * @ignore\n     * @param {KeyboardShortcutsService} keyboard\n     */\n    constructor(keyboard) {\n        this.keyboard = keyboard;\n        /**\n         * A list of shortcuts.\n         */\n        this.shortcuts = [];\n        /**\n         * @ignore\n         * list of registered keyboard shortcuts\n         * used for clean up on NgDestroy.\n         */\n        this.clearIds = [];\n        /**\n         * @ignore\n         */\n        this._disabled = false;\n    }\n    /**\n     * Disable all shortcuts for this component.\n     */\n    set disabled(value) {\n        this._disabled = value;\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n            this.clearIds = [];\n        }\n        if (value) {\n            return;\n        }\n        this.clearIds = this.keyboard.add(this.shortcuts);\n    }\n    /**\n     * @ignore\n     */\n    ngOnInit() { }\n    /**\n     * Select a key to listen to, will emit when the selected key is pressed.\n     */\n    select(key) {\n        return this.keyboard.select(key);\n    }\n    /**\n     * @ignore\n     */\n    ngAfterViewInit() { }\n    /**\n     * @ignore\n     */\n    ngOnChanges(changes) {\n        if (!changes.shortcuts || !changes.shortcuts.currentValue) {\n            return;\n        }\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        if (!this._disabled) {\n            setTimeout(() => (this.clearIds = this.keyboard.add(changes.shortcuts.currentValue)));\n        }\n    }\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this.keyboard.remove(this.clearIds);\n    }\n}\nKeyboardShortcutsComponent.ɵfac = function KeyboardShortcutsComponent_Factory(t) { return new (t || KeyboardShortcutsComponent)(ɵngcc0.ɵɵdirectiveInject(KeyboardShortcutsService)); };\nKeyboardShortcutsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: KeyboardShortcutsComponent, selectors: [[\"ng-keyboard-shortcuts\"]], inputs: { shortcuts: \"shortcuts\", disabled: \"disabled\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function KeyboardShortcutsComponent_Template(rf, ctx) { }, encapsulation: 2 });\nKeyboardShortcutsComponent.ctorParameters = () => [\n    { type: KeyboardShortcutsService }\n];\nKeyboardShortcutsComponent.propDecorators = {\n    shortcuts: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardShortcutsComponent, [{\n        type: Component,\n        args: [{\n                selector: \"ng-keyboard-shortcuts\",\n                template: \"\"\n            }]\n    }], function () { return [{ type: KeyboardShortcutsService }]; }, { shortcuts: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * Service to assist showing custom help screen\n */\nclass KeyboardShortcutsHelpService {\n    /**\n     * @ignore\n     * @param {KeyboardShortcutsService} keyboard\n     */\n    constructor(keyboard) {\n        this.keyboard = keyboard;\n        /**\n         * Observable to provide access to all registered shortcuts in the app.\n         * @type {Observable<any>}\n         */\n        this.shortcuts$ = this.keyboard.shortcuts$.pipe(map(shortcuts => shortcuts\n            .filter(shortcut => Boolean(shortcut.label) && Boolean(shortcut.description))\n            .map(({ key, label, description }) => ({\n            key,\n            label,\n            description\n        }))));\n    }\n}\nKeyboardShortcutsHelpService.ɵfac = function KeyboardShortcutsHelpService_Factory(t) { return new (t || KeyboardShortcutsHelpService)(ɵngcc0.ɵɵinject(KeyboardShortcutsService)); };\nKeyboardShortcutsHelpService.ɵprov = ɵɵdefineInjectable({ factory: function KeyboardShortcutsHelpService_Factory() { return new KeyboardShortcutsHelpService(ɵɵinject(KeyboardShortcutsService)); }, token: KeyboardShortcutsHelpService, providedIn: \"root\" });\nKeyboardShortcutsHelpService.ctorParameters = () => [\n    { type: KeyboardShortcutsService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardShortcutsHelpService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], function () { return [{ type: KeyboardShortcutsService }]; }, null); })();\n\n/**\n * Use this service to listen to a specific keyboards events using Rxjs.\n * The shortcut must be declared in the app for the select to work.\n */\nclass KeyboardShortcutsSelectService {\n    constructor(keyboardService) {\n        this.keyboardService = keyboardService;\n    }\n    /**\n     * Returns an observable of keyboard shortcut filtered by a specific key.\n     * @param key - the key to filter the observable by.\n     */\n    select(key) {\n        return this.keyboardService.select(key);\n    }\n}\nKeyboardShortcutsSelectService.ɵfac = function KeyboardShortcutsSelectService_Factory(t) { return new (t || KeyboardShortcutsSelectService)(ɵngcc0.ɵɵinject(KeyboardShortcutsService)); };\nKeyboardShortcutsSelectService.ɵprov = ɵɵdefineInjectable({ factory: function KeyboardShortcutsSelectService_Factory() { return new KeyboardShortcutsSelectService(ɵɵinject(KeyboardShortcutsService)); }, token: KeyboardShortcutsSelectService, providedIn: \"root\" });\nKeyboardShortcutsSelectService.ctorParameters = () => [\n    { type: KeyboardShortcutsService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardShortcutsSelectService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], function () { return [{ type: KeyboardShortcutsService }]; }, null); })();\n\nvar AllowIn;\n(function (AllowIn) {\n    AllowIn[\"Textarea\"] = \"TEXTAREA\";\n    AllowIn[\"Input\"] = \"INPUT\";\n    AllowIn[\"Select\"] = \"SELECT\";\n})(AllowIn || (AllowIn = {}));\n\n/**\n * A directive to be used with \"focusable\" elements, like:\n * textarea, input, select.\n */\nclass KeyboardShortcutsDirective {\n    /**\n     * @ignore\n     * @param {KeyboardShortcutsService} keyboard\n     * @param {ElementRef} el\n     */\n    constructor(keyboard, el) {\n        this.keyboard = keyboard;\n        this.el = el;\n        /**\n         * @ignore\n         * @type {boolean}\n         * @private\n         */\n        this._disabled = false;\n    }\n    /**\n     * whether to disable the shortcuts for this directive\n     * @param value\n     */\n    set disabled(value) {\n        this._disabled = value;\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        setTimeout(() => {\n            if (value === false && this.ngKeyboardShortcuts) {\n                this.clearIds = this.keyboard.add(this.transformInput(this.ngKeyboardShortcuts));\n            }\n        });\n    }\n    /**\n     * @ignore\n     * @param {Shortcut[]} shortcuts\n     * @returns {any}\n     */\n    transformInput(shortcuts) {\n        return shortcuts.map(shortcut => (Object.assign(Object.assign({}, shortcut), { target: this.el.nativeElement, allowIn: [AllowIn.Select, AllowIn.Input, AllowIn.Textarea] })));\n    }\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        if (!this.clearIds) {\n            return;\n        }\n        this.keyboard.remove(this.clearIds);\n    }\n    /**\n     * @ignore\n     * @param {SimpleChanges} changes\n     */\n    ngOnChanges(changes) {\n        const { ngKeyboardShortcuts } = changes;\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        if (!ngKeyboardShortcuts || !ngKeyboardShortcuts.currentValue) {\n            return;\n        }\n        this.clearIds = this.keyboard.add(this.transformInput(ngKeyboardShortcuts.currentValue));\n    }\n}\nKeyboardShortcutsDirective.ɵfac = function KeyboardShortcutsDirective_Factory(t) { return new (t || KeyboardShortcutsDirective)(ɵngcc0.ɵɵdirectiveInject(KeyboardShortcutsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nKeyboardShortcutsDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: KeyboardShortcutsDirective, selectors: [[\"\", \"ngKeyboardShortcuts\", \"\"]], inputs: { disabled: \"disabled\", ngKeyboardShortcuts: \"ngKeyboardShortcuts\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nKeyboardShortcutsDirective.ctorParameters = () => [\n    { type: KeyboardShortcutsService },\n    { type: ElementRef }\n];\nKeyboardShortcutsDirective.propDecorators = {\n    ngKeyboardShortcuts: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardShortcutsDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[ngKeyboardShortcuts]\"\n            }]\n    }], function () { return [{ type: KeyboardShortcutsService }, { type: ɵngcc0.ElementRef }]; }, { disabled: [{\n            type: Input\n        }], ngKeyboardShortcuts: [{\n            type: Input\n        }] }); })();\n\n/**\n * @ignore\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (host == null) {\n            // TODO: add error\n            console.error(\"null portal error\");\n        }\n        if (host.hasAttached()) {\n            console.error(\"portal already attached\");\n            // throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host == null) {\n            console.error(\"no portal attached!\");\n            // throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * @ignore\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * @ignore\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * @ignore\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (!portal) {\n            console.error('null portal!');\n            // throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            console.error('portal already attached');\n            // throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            console.error('portal out already disposed');\n            // throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n        }\n        console.error('unknown portal type');\n        // throwUnknownPortalTypeError();\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n\n/**\n * @ignore\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        this.setDisposeFn((() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n\n/**\n * @ignore\n */\nconst scrollAbleKeys = new Map([\n    [31, 1],\n    [38, 1],\n    [39, 1],\n    [40, 1]\n]);\n/**\n * @ignore\n */\nconst preventDefault = (ignore) => e => {\n    const modal = e.target.closest(ignore);\n    if (modal) {\n        return;\n    }\n    e = e || window.event;\n    if (e.preventDefault)\n        e.preventDefault();\n    e.returnValue = false;\n};\nconst ɵ0$1 = preventDefault;\n/**\n * @ignore\n */\nconst preventDefaultForScrollKeys = e => {\n    if (!scrollAbleKeys.has(e.keyCode)) {\n        return;\n    }\n    preventDefault(e);\n    return false;\n};\nconst ɵ1 = preventDefaultForScrollKeys;\n/**\n * @ignore\n */\nlet scrollEvents = [\n    { name: \"wheel\", callback: null },\n    { name: \"touchmove\", callback: null },\n    { name: \"DOMMouseScroll\", callback: null }\n];\n/**\n * @ignore\n */\nconst disableScroll = (ignore) => {\n    scrollEvents = scrollEvents.map(event => {\n        const callback = preventDefault(ignore);\n        window.addEventListener(event.name, callback, { passive: false });\n        return Object.assign(Object.assign({}, event), { callback });\n    });\n    window.addEventListener(\"keydown\", preventDefaultForScrollKeys);\n};\nconst ɵ2 = disableScroll;\n/**\n * @ignore\n */\nconst enableScroll = () => {\n    scrollEvents = scrollEvents.map(event => {\n        window.removeEventListener(event.name, event.callback);\n        return Object.assign(Object.assign({}, event), { callback: null });\n    });\n    window.removeEventListener(\"keydown\", preventDefaultForScrollKeys);\n};\nconst ɵ3 = enableScroll;\n/**\n * A Component to show all registered shortcut in the app\n * it is shown as a modal\n */\nclass KeyboardShortcutsHelpComponent {\n    /**\n     * @ignore\n     */\n    constructor(componentFactoryResolver, appRef, keyboard, element, keyboardHelp, viewContainer, injector) {\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.appRef = appRef;\n        this.keyboard = keyboard;\n        this.element = element;\n        this.keyboardHelp = keyboardHelp;\n        this.viewContainer = viewContainer;\n        this.injector = injector;\n        /**\n         * Disable scrolling while modal is open\n         */\n        this.disableScrolling = true;\n        this.className = \"help-modal\";\n        /**\n         * The title of the help screen\n         * @default: \"Keyboard shortcuts\"\n         */\n        this.title = \"Keyboard shortcuts\";\n        /**\n         * What message to show when no shortcuts are available on the page.\n         * @default \"No shortcuts available\"\n         */\n        this.emptyMessage = \"No shortcuts available\";\n        /**\n         * @ignore\n         */\n        this.showing = false;\n        this.bodyPortalHost = new DomPortalOutlet(document.body, this.componentFactoryResolver, this.appRef, this.injector);\n    }\n    /**\n     * The shortcut to show/hide the help screen\n     */\n    set key(value) {\n        this._key = value;\n        if (!value) {\n            return;\n        }\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        this.clearIds = this.addShortcut({\n            key: value,\n            preventDefault: true,\n            command: () => this.toggle(),\n            description: this.keyDescription,\n            label: this.keyLabel\n        });\n    }\n    addShortcut(shortcut) {\n        return this.keyboard.add(shortcut);\n    }\n    set closeKey(value) {\n        this._closeKey = value;\n        if (!value) {\n            return;\n        }\n        if (this.closeKeyIds) {\n            this.keyboard.remove(this.closeKeyIds);\n        }\n        this.closeKeyIds = this.addShortcut({\n            key: value,\n            preventDefault: true,\n            command: () => this.hide(),\n            description: this.closeKeyDescription,\n            label: this.closeKeyDescription\n        });\n    }\n    /**\n     * Reveal the help screen manually.\n     */\n    reveal() {\n        this.hide();\n        if (this.disableScrolling) {\n            disableScroll(`.${this.className}`);\n        }\n        const portal = new TemplatePortal(this.template, this.viewContainer);\n        this.bodyPortalHost.attach(portal);\n        this.showing = true;\n        return this;\n    }\n    /**\n     * Check if help screen is visible.\n     * @returns boolean\n     */\n    visible() {\n        return this.bodyPortalHost.hasAttached();\n    }\n    /**\n     * Hide the help screen manually.\n     */\n    hide() {\n        if (this.disableScrolling) {\n            enableScroll();\n        }\n        if (!this.bodyPortalHost.hasAttached()) {\n            return this;\n        }\n        this.bodyPortalHost.detach();\n        this.showing = false;\n        return this;\n    }\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this.hide();\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        if (this.closeKeyIds) {\n            this.keyboard.remove(this.closeKeyIds);\n        }\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n    }\n    /**\n     * Show/Hide the help screen manually.\n     */\n    toggle() {\n        this.visible() ? this.hide() : this.reveal();\n        return this;\n    }\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        this.subscription = this.keyboardHelp.shortcuts$\n            .pipe(distinctUntilChanged(), map(shortcuts => groupBy(shortcuts, \"label\")))\n            .subscribe(shortcuts => {\n            this.shortcuts = shortcuts;\n            this.labels = Object.keys(shortcuts);\n        });\n    }\n}\nKeyboardShortcutsHelpComponent.ɵfac = function KeyboardShortcutsHelpComponent_Factory(t) { return new (t || KeyboardShortcutsHelpComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(KeyboardShortcutsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(KeyboardShortcutsHelpService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nKeyboardShortcutsHelpComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: KeyboardShortcutsHelpComponent, selectors: [[\"ng-keyboard-shortcuts-help\"]], viewQuery: function KeyboardShortcutsHelpComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, inputs: { disableScrolling: \"disableScrolling\", title: \"title\", emptyMessage: \"emptyMessage\", key: \"key\", closeKey: \"closeKey\", keyDescription: \"keyDescription\", keyLabel: \"keyLabel\", closeKeyLabel: \"closeKeyLabel\", closeKeyDescription: \"closeKeyDescription\" }, decls: 1, vars: 0, consts: [[\"role\", \"dialog\", 1, \"help-modal__container\"], [3, \"class\", 4, \"ngIf\"], [\"class\", \"help-modal__backdrop\", 3, \"mousedown\", 4, \"ngIf\"], [1, \"title\"], [1, \"title__text\", 3, \"id\"], [1, \"help-modal__body\"], [4, \"ngIf\"], [\"class\", \"help-modal__list\", 4, \"ngFor\", \"ngForOf\"], [1, \"help-modal__list\"], [1, \"item-group-label\"], [3, \"shortcut\", \"index\", 4, \"ngFor\", \"ngForOf\"], [3, \"shortcut\", \"index\"], [1, \"help-modal__backdrop\", 3, \"mousedown\"]], template: function KeyboardShortcutsHelpComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, KeyboardShortcutsHelpComponent_ng_template_0_Template, 3, 3, \"ng-template\");\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgForOf, KeyboardShortcutsHelpItemComponent]; }, styles: [\".help-modal__container[_ngcontent-%COMP%]{align-items:center;bottom:0;display:flex;justify-content:center;left:0;position:fixed;right:0;top:0;z-index:500}.help-modal[_ngcontent-%COMP%]{background:#fff;box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);max-height:calc(100% - 100px);min-width:420px;overflow:auto;padding:20px;z-index:2000}.item-group-label[_ngcontent-%COMP%]{text-transform:capitalize}.title[_ngcontent-%COMP%]{padding:20px 0}.title__text[_ngcontent-%COMP%]{margin:0;padding:0}.help-modal__list[_ngcontent-%COMP%]{padding:0}.help-modal__backdrop[_ngcontent-%COMP%]{-webkit-tap-highlight-color:transparent;background:rgba(0,0,0,.27);bottom:0;left:0;opacity:1;pointer-events:auto;position:absolute;right:0;top:0;z-index:1000}\"], data: { animation: [\n            trigger(\"enterAnimation\", [\n                transition(\":enter\", [\n                    style({ transform: \"translateX(-100%)\", opacity: 0 }),\n                    animate(\"0.33s cubic-bezier(0,0,0.3,1)\", style({ transform: \"translateX(0)\", opacity: 1 }))\n                ]),\n                transition(\":leave\", [\n                    style({ transform: \"translateX(0)\", opacity: 1 }),\n                    animate(\"0.23s cubic-bezier(0,0,0.3,1)\", style({ transform: \"translateX(-100%)\", opacity: 0 }))\n                ])\n            ]),\n            trigger(\"overlayAnimation\", [\n                transition(\":enter\", [\n                    style({ opacity: 0 }),\n                    animate(\"1s cubic-bezier(0,0,0.3,1)\", style({ opacity: 1 }))\n                ]),\n                transition(\":leave\", [\n                    style({ opacity: 1 }),\n                    animate(\"1s cubic-bezier(0,0,0.3,1)\", style({ opacity: 0 }))\n                ])\n            ])\n        ] } });\nKeyboardShortcutsHelpComponent.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: KeyboardShortcutsService },\n    { type: ElementRef },\n    { type: KeyboardShortcutsHelpService },\n    { type: ViewContainerRef },\n    { type: Injector }\n];\nKeyboardShortcutsHelpComponent.propDecorators = {\n    disableScrolling: [{ type: Input }],\n    keyDescription: [{ type: Input }],\n    keyLabel: [{ type: Input }],\n    closeKeyLabel: [{ type: Input }],\n    closeKeyDescription: [{ type: Input }],\n    key: [{ type: Input }],\n    closeKey: [{ type: Input }],\n    title: [{ type: Input }],\n    emptyMessage: [{ type: Input }],\n    template: [{ type: ViewChild, args: [TemplateRef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardShortcutsHelpComponent, [{\n        type: Component,\n        args: [{\n                selector: \"ng-keyboard-shortcuts-help\",\n                template: \"<ng-template>\\n    <div class=\\\"help-modal__container\\\" [attr.aria-labelledby]=\\\"'modal-' + title\\\" role=\\\"dialog\\\">\\n        <div class=\\\"{{className}}\\\" [@enterAnimation] *ngIf=\\\"showing\\\">\\n            <div class=\\\"title\\\">\\n                <h3 id=\\\"modal-{{title}}\\\" class=\\\"title__text\\\">{{title}}</h3>\\n            </div>\\n            <div class=\\\"help-modal__body\\\">\\n                <span *ngIf=\\\"!labels.length\\\">\\n                    {{emptyMessage}}\\n                </span>\\n                <div>\\n                    <ul *ngFor=\\\"let label of labels\\\" class=\\\"help-modal__list\\\">\\n                        <h4 class=\\\"item-group-label\\\">{{label}}</h4>\\n                        <ng-keyboard-shortcuts-help-item\\n                                *ngFor=\\\"let shortcut of shortcuts[label]; let i = index\\\"\\n                                [shortcut]=\\\"shortcut\\\"\\n                                [index]=\\\"i\\\"\\n                        ></ng-keyboard-shortcuts-help-item>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"help-modal__backdrop\\\" [@overlayAnimation] (mousedown)=\\\"hide()\\\" *ngIf=\\\"showing\\\"></div>\\n    </div>\\n</ng-template>\\n\",\n                animations: [\n                    trigger(\"enterAnimation\", [\n                        transition(\":enter\", [\n                            style({ transform: \"translateX(-100%)\", opacity: 0 }),\n                            animate(\"0.33s cubic-bezier(0,0,0.3,1)\", style({ transform: \"translateX(0)\", opacity: 1 }))\n                        ]),\n                        transition(\":leave\", [\n                            style({ transform: \"translateX(0)\", opacity: 1 }),\n                            animate(\"0.23s cubic-bezier(0,0,0.3,1)\", style({ transform: \"translateX(-100%)\", opacity: 0 }))\n                        ])\n                    ]),\n                    trigger(\"overlayAnimation\", [\n                        transition(\":enter\", [\n                            style({ opacity: 0 }),\n                            animate(\"1s cubic-bezier(0,0,0.3,1)\", style({ opacity: 1 }))\n                        ]),\n                        transition(\":leave\", [\n                            style({ opacity: 1 }),\n                            animate(\"1s cubic-bezier(0,0,0.3,1)\", style({ opacity: 0 }))\n                        ])\n                    ])\n                ],\n                styles: [\".help-modal__container{align-items:center;bottom:0;display:flex;justify-content:center;left:0;position:fixed;right:0;top:0;z-index:500}.help-modal{background:#fff;box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);max-height:calc(100% - 100px);min-width:420px;overflow:auto;padding:20px;z-index:2000}.item-group-label{text-transform:capitalize}.title{padding:20px 0}.title__text{margin:0;padding:0}.help-modal__list{padding:0}.help-modal__backdrop{-webkit-tap-highlight-color:transparent;background:rgba(0,0,0,.27);bottom:0;left:0;opacity:1;pointer-events:auto;position:absolute;right:0;top:0;z-index:1000}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: KeyboardShortcutsService }, { type: ɵngcc0.ElementRef }, { type: KeyboardShortcutsHelpService }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.Injector }]; }, { disableScrolling: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], emptyMessage: [{\n            type: Input\n        }], key: [{\n            type: Input\n        }], closeKey: [{\n            type: Input\n        }], keyDescription: [{\n            type: Input\n        }], keyLabel: [{\n            type: Input\n        }], closeKeyLabel: [{\n            type: Input\n        }], closeKeyDescription: [{\n            type: Input\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }] }); })();\n\n/**\n * @ignore\n */\nclass KeyboardShortcutsHelpItemComponent {\n    constructor() { }\n    set shortcut(shortcut) {\n        const key = Array.isArray(shortcut.key) ? shortcut.key : [shortcut.key];\n        this.parsedKeys = key.map(key => key\n            .split(\" \")\n            .filter(identity)\n            .filter(key => key !== \"+\")\n            .map(key => {\n            if (symbols[key]) {\n                return symbols[key];\n            }\n            return key;\n        }));\n        this._shortcut = shortcut;\n    }\n    get shortcut() {\n        return this._shortcut;\n    }\n    ngOnInit() { }\n}\nKeyboardShortcutsHelpItemComponent.ɵfac = function KeyboardShortcutsHelpItemComponent_Factory(t) { return new (t || KeyboardShortcutsHelpItemComponent)(); };\nKeyboardShortcutsHelpItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: KeyboardShortcutsHelpItemComponent, selectors: [[\"ng-keyboard-shortcuts-help-item\"]], inputs: { shortcut: \"shortcut\", index: \"index\" }, decls: 1, vars: 1, consts: [[\"class\", \"item\", 3, \"item--odd\", 4, \"ngIf\"], [1, \"item\"], [1, \"description\"], [1, \"keys\"], [\"class\", \"key__container\", 4, \"ngFor\", \"ngForOf\"], [1, \"key__container\"], [\"class\", \"key\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"separator\", 4, \"ngIf\"], [1, \"key\"], [1, \"separator\"]], template: function KeyboardShortcutsHelpItemComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, KeyboardShortcutsHelpItemComponent_div_0_Template, 6, 4, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.shortcut.description);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], styles: [\".key[_ngcontent-%COMP%]{background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px;margin-right:5px;padding:5px 12px}.key__container[_ngcontent-%COMP%]{display:inline-block}.separator[_ngcontent-%COMP%]{margin-right:5px}.keys[_ngcontent-%COMP%]{float:right}.item[_ngcontent-%COMP%]{background-color:#ebebeb;padding:12px}.description[_ngcontent-%COMP%]{color:#333;display:inline-block;min-width:168px}.item--odd[_ngcontent-%COMP%]{background-color:#fff}\"] });\nKeyboardShortcutsHelpItemComponent.ctorParameters = () => [];\nKeyboardShortcutsHelpItemComponent.propDecorators = {\n    index: [{ type: Input }],\n    shortcut: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardShortcutsHelpItemComponent, [{\n        type: Component,\n        args: [{\n                selector: \"ng-keyboard-shortcuts-help-item\",\n                template: \"<div class=\\\"item\\\" [class.item--odd]=\\\"index % 2 !== 0\\\" *ngIf=\\\"shortcut.description\\\">\\n  <div class=\\\"description\\\">\\n    <span>{{shortcut.description}}</span>\\n  </div>\\n  <div class=\\\"keys\\\">\\n    <div *ngFor=\\\"let sKey of parsedKeys;let i = index\\\" class=\\\"key__container\\\">\\n      <span class=\\\"key\\\" *ngFor=\\\"let key of sKey;\\\">{{key}}</span>\\n      <span *ngIf=\\\"parsedKeys.length > 1 && i < parsedKeys.length - 1\\\" class=\\\"separator\\\"> / </span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                styles: [\".key{background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px;margin-right:5px;padding:5px 12px}.key__container{display:inline-block}.separator{margin-right:5px}.keys{float:right}.item{background-color:#ebebeb;padding:12px}.description{color:#333;display:inline-block;min-width:168px}.item--odd{background-color:#fff}\"]\n            }]\n    }], function () { return []; }, { shortcut: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }] }); })();\n\nclass KeyboardShortcutsModule {\n    static forRoot() {\n        return {\n            ngModule: KeyboardShortcutsModule,\n            providers: [\n                KeyboardShortcutsService,\n                KeyboardShortcutsHelpService,\n                KeyboardShortcutsSelectService\n            ]\n        };\n    }\n}\nKeyboardShortcutsModule.ɵfac = function KeyboardShortcutsModule_Factory(t) { return new (t || KeyboardShortcutsModule)(); };\nKeyboardShortcutsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: KeyboardShortcutsModule });\nKeyboardShortcutsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardShortcutsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                entryComponents: [KeyboardShortcutsHelpComponent],\n                declarations: [\n                    KeyboardShortcutsComponent,\n                    KeyboardShortcutsDirective,\n                    KeyboardShortcutsHelpComponent,\n                    KeyboardShortcutsHelpItemComponent\n                ],\n                exports: [\n                    KeyboardShortcutsComponent,\n                    KeyboardShortcutsDirective,\n                    KeyboardShortcutsHelpComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(KeyboardShortcutsModule, { declarations: function () { return [KeyboardShortcutsComponent, KeyboardShortcutsDirective, KeyboardShortcutsHelpComponent, KeyboardShortcutsHelpItemComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [KeyboardShortcutsComponent, KeyboardShortcutsDirective, KeyboardShortcutsHelpComponent]; } }); })();\n\n(function () {\n    if (typeof Element === \"undefined\") {\n        return;\n    }\n    if (!Element.prototype.matches) {\n        Element.prototype.matches =\n            Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n    }\n    if (!Element.prototype.closest) {\n        Element.prototype.closest = function (s) {\n            let el = this;\n            do {\n                if (el.matches(s))\n                    return el;\n                el = el.parentElement || el.parentNode;\n            } while (el !== null && el.nodeType === 1);\n            return null;\n        };\n    }\n})();\nif (!Array.prototype.flat) {\n    Array.prototype.flat = function (depth) {\n        var flattend = [];\n        (function flat(array, depth) {\n            for (let el of array) {\n                if (Array.isArray(el) && depth > 0) {\n                    flat(el, depth - 1);\n                }\n                else {\n                    flattend.push(el);\n                }\n            }\n        })(this, Math.floor(depth) || 1);\n        return flattend;\n    };\n}\nif (!Array.prototype.flatMap) {\n    Array.prototype.flatMap = function () {\n        return Array.prototype.map.apply(this, arguments).flat(1);\n    };\n}\n\n/*\n * Public API Surface of ng-keyboard-shortcuts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AllowIn, KeyboardShortcutsComponent, KeyboardShortcutsDirective, KeyboardShortcutsHelpComponent, KeyboardShortcutsHelpService, KeyboardShortcutsModule, KeyboardShortcutsSelectService, KeyboardShortcutsService as ɵa, KeyboardShortcutsHelpItemComponent as ɵb };\n\n","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nexport function throwError(errorOrErrorFactory, scheduler) {\n    var errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function () { return errorOrErrorFactory; };\n    var init = function (subscriber) { return subscriber.error(errorFactory()); };\n    return new Observable(scheduler ? function (subscriber) { return scheduler.schedule(init, 0, subscriber); } : init);\n}\n","<h1 class=\"mt-3 mb-4\">Tastaturbedienbarkeit</h1>\n\n<p class=\"lead\">\n  Für die Gewährleistung der Barrierefreiheit, aber auch für das \"Enabling\" von Power-Usern einer\n  Fachapplikation, ist eine gut durchdachte Tastaturbedienbarkeit essentiell.\n</p>\n\n<h2 class=\"mt-5\">Warum ist es wichtig?</h2>\n<ul>\n  <li>\n    Verbesserung der Barrierefreiheit der Applikation (z.B. setzen viele assistive Werkzeuge für\n    Menschen mit Behinderung voraus, dass eine Webapplikation tastaturbedienbar ist).\n  </li>\n  <li>Enabling von Power-Usern. Erhöht die Effizienz und die Zufriedenheit mit der Applikation.</li>\n</ul>\n\n<h2 class=\"mt-5\">Was ist zu berücksichtigen?</h2>\n<ul>\n  <li>\n    Am besten legt man die Maus zur Seite und zwingt sich die Applikation ausschliesslich via\n    Tastatur zu bedienen. So können die Probleme schnell identifiziert werden.\n  </li>\n  <li>\n    Wie oft benutzt ein durchschnittlicher Endanwender die Fachapplikation?\n    <br />\n    Bei einem Admin-GUI, welches einmal im Monat kurz verwendet wird, ist eine ausgefeilte\n    Tastatursteuerung nicht notwendig. Für Schalterangestellte, die eine Anwendung den ganzen Tag\n    lang bedienen, ist die Tastaturbedienbarkeit dagegen von grosser Wichtigkeit.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/usability/mauswege\" class=\"highlight\">Mauswege</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/modal-dialog\" class=\"highlight\">Modal Dialog</a>\n  </li>\n  <li><a routerLink=\"/styleguide/ui-elements/buttons\">Buttons</a></li>\n</ul>\n\n<h2 class=\"mt-5\">Basics</h2>\n<p>Folgende minimale Tastaturbedienbarkeit sollte jede Fachapplikation implementieren:</p>\n<ul>\n  <li>\n    Die Tabulator-Reihenfolge der UI-Elemente muss der Bedienlogik entsprechen.\n    <br />\n    Blinde Benutzer bedienen die Applikation mit Screenreadern. Diese lesen ihnen die Seiteninhalte\n    vor. Screenreader springen dabei von UI-Element zu UI-Element. Daher ist die korrekte\n    Tabulator-Reihenfolge für die barrierefreie Umsetzung zentral.\n    <br />\n  </li>\n  <li>\n    Jedes funktionale UI-Element muss mit dem Tabulator ansteuerbar sein.\n    <br />\n    Landet der Tabulator z.B. nie auf dem Senden Button, kann der blinde Nutzer das Formular nie\n    versenden.\n  </li>\n  <li>\n    <span class=\"keyboard-key\">Enter</span>\n    betätigt den Primary Button einer Ansicht oder eines Dialogs, falls einer vorhanden ist. Bei\n    Suchfeldern wird die Suche ausgelöst.\n  </li>\n  <li>\n    <span class=\"keyboard-key\">Esc</span>\n    schliesst Modal Dialoge. Ausnahmen, siehe\n    <a routerLink=\"/styleguide/ui-elements/modal-dialog\" class=\"highlight\">Modal Dialog</a>\n    <br />\n  </li>\n  <li>\n    Wo sinnvoll, sollen Elemente mit den Cursor-Tasten auswählbar sein.\n    <br />\n    Beispiele: \"Create\" Modal Dialog im Confluence oder eine Tabelle mit Checkboxen auf jeder Zeile\n    für eine rasche Selektion.\n  </li>\n</ul>\n\n<div class=\"alert alert-warning d-flex align-items-center p-3 text-dark my-5\">\n  <span class=\"fas fa-info-circle fa-2x text-info mr-4\"></span>\n  <div>\n    Für die Erreichbarkeit via Tabulator ist zu beachten, dass nur aktive\n    <code>&lt;input></code>\n    und\n    <code>&lt;button></code>\n    und\n    <code>&lt;a></code>\n    mit einem\n    <code>href</code>\n    -Attribut per Tastatur erreichbar sind. Um andere Elemente erreichbar zu machen, muss das\n    Attribut\n    <code>tabindex=\"0\"</code>\n    gesetzt werden. Der Wert\n    <code>0</code>\n    sorgt hier dafür, dass das Element in der natürlichen Tab-Reihenfolge erreichbar ist.\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Hotkeys</h2>\n<p>\n  Für eine optimierte Tastaturbedienbarkeit können in der Applikation Hotkeys/Shortcuts für die\n  Navigation und für häufig verwendete Funktionen definiert werden:\n</p>\n<ul>\n  <li>\n    Hotkeys dürfen nicht mit Browser oder OS-Shortcuts kollidieren (also kein\n    <span class=\"keyboard-key\">Ctrl</span>\n    +\n    <span class=\"keyboard-key\">n</span>\n    für neues Element).\n  </li>\n  <li>\n    Am besten eignen sich Hotkeys ohne Modifier-Taste (Beispiel:\n    <span class=\"keyboard-key\">e</span>\n    - edit,\n    <span class=\"keyboard-key\">c</span>\n    - create)\n  </li>\n  <li>\n    Wenn besonders viele Hotkeys nötig sind, können Hotkey-Sequenzen von zwei Buchstaben sinnvoll\n    sein.\n    <br />\n    Beispiel:\n    <span class=\"keyboard-key\">g</span>\n    &nbsp;\n    <span class=\"keyboard-key\">p</span>\n    für gehe zu Person,\n    <span class=\"keyboard-key\">g</span>\n    &nbsp;\n    <span class=\"keyboard-key\">f</span>\n    für gehe zu Fahrzeug, etc.\n  </li>\n  <li>\n    Hotkeys müssen unabhängig von der aktiven Sprache immer dieselben sein. Wenn kein gemeinsamer\n    Buchstabe in allen Sprachen passt, bietet sich Englisch als Kompromiss an.\n  </li>\n  <li>\n    Eine Legende aller Hotkeys sollte für Benutzer innerhalb der Applikation leicht zugreifbar sein\n    und nicht irgendwo in einer Bedienungsanleitung versteckt sein. Optimalerweise wird die Legende\n    in einem Modal Dialog präsentiert, welcher über einen Menupunkt aufgerufen werden kann.\n  </li>\n  <li>\n    Wenn erhöhte Ansprüche an die Barrierefreiheit vorhanden sind, müssen weitere Faktoren beachtet\n    werden. Siehe dazu die\n    <a\n      class=\"external\"\n      href=\"https://www.w3.org/WAI/WCAG21/Understanding/character-key-shortcuts.html\"\n      target=\"_blank\">\n      Ausführungen der Web Accessibility Initiative (WAI)\n    </a>\n    des W3C.\n  </li>\n</ul>\n\n<div class=\"card my-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Wir verwenden\n      <a\n        class=\"external\"\n        href=\"https://omridevk.github.io/ng-keyboard-shortcuts/index.html\"\n        target=\"_blank\">\n        ng-keyboard-shortcuts\n      </a>\n      für die Implementierung von Hotkeys.\n      <br />\n      <br />\n      Mit\n      <code>ng-keyboard-shortcuts-help</code>\n      kann zwar automatisch eine Hotkey-Legende erstellt werden. Jedoch kann diese nicht individuell\n      gelayoutet werden, es muss\n      <code>BrowserAnimationsModule</code>\n      importiert werden, und das\n      <span class=\"keyboard-key\">Esc</span>\n      -Binding zum Schliessen der Hilfe unterbindet das\n      <span class=\"keyboard-key\">Esc</span>\n      -Binding von NgbModal. Dies hat zur Folge, dass die Modal Dialoge der Fachapplikation nicht\n      mehr mit\n      <span class=\"keyboard-key\">Esc</span>\n      geschlossen werden können.\n      <br />\n      <br />\n      Deshalb setzen wir auf eine selbst erstellte Hotkey-Legende mit NgbModal (Siehe\n      Code-Beispiel).\n    </p>\n  </div>\n</div>\n\n<app-code-example\n  src=\"usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.html#tastaturbedienbarkeit,usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.ts\">\n  <ng-keyboard-shortcuts [shortcuts]=\"shortcuts\"></ng-keyboard-shortcuts>\n\n  <p>\n    Tastaturbefehle anzeigen mit einem einfachen Hotkey:\n    <span class=\"keyboard-key\">?</span>\n    oder\n    <span class=\"keyboard-key\">h</span>\n    <br />\n    Tastaturbefehle anzeigen mit einer Hotkey-Sequenz:\n    <span class=\"keyboard-key\">k</span>\n    &nbsp;\n    <span class=\"keyboard-key\">s</span>\n    <br />\n  </p>\n  <button class=\"btn btn-outline-primary my-2\" (click)=\"showModal()\">\n    Tastaturbefehle anzeigen\n  </button>\n\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">Tastaturbefehle</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('[x] click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-md-6 h4 pb-3\">Navigation</div>\n        <div class=\"col-md-6 h4 pb-3\">Aktionen</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6 pb-2\">\n          Startseite\n          <div class=\"float-right pr-4\">\n            <span class=\"keyboard-key\">s</span>\n          </div>\n        </div>\n        <div class=\"col-md-6 pb-2\">\n          Neue Person erfassen\n          <div class=\"float-right pr-4\">\n            <span class=\"keyboard-key\">n</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6 pb-2\">\n          Personensuche\n          <div class=\"float-right pr-4\">\n            <span class=\"keyboard-key\">p</span>\n          </div>\n        </div>\n        <div class=\"col-md-6 pb-2\">\n          Editieren - Person\n          <div class=\"float-right pr-4\">\n            <span class=\"keyboard-key\">e</span>\n            &nbsp;\n            <span class=\"keyboard-key\">p</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6 pb-2\">\n          Fahrzeugsuche\n          <div class=\"float-right pr-4\">\n            <span class=\"keyboard-key\">f</span>\n          </div>\n        </div>\n        <div class=\"col-md-6 pb-2\">\n          Editieren - Fahrzeug\n          <div class=\"float-right pr-4\">\n            <span class=\"keyboard-key\">e</span>\n            &nbsp;\n            <span class=\"keyboard-key\">f</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</app-code-example>\n","import { AfterViewInit, Component, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { KeyboardShortcutsComponent, ShortcutInput } from 'ng-keyboard-shortcuts';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './tastaturbedienbarkeit.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TastaturbedienbarkeitComponent implements AfterViewInit {\n  shortcuts: ShortcutInput[] = [];\n  modal!: NgbModalRef;\n\n  @ViewChild(KeyboardShortcutsComponent)\n  private readonly keyboard!: KeyboardShortcutsComponent;\n  @ViewChild('content')\n  templateRef!: TemplateRef<unknown>;\n\n  constructor(private readonly modalService: NgbModal) {}\n\n  ngAfterViewInit(): void {\n    this.shortcuts.push(\n      {\n        key: '?',\n        command: () => this.showModal(),\n        preventDefault: true,\n      },\n      {\n        key: 'h',\n        command: () => this.showModal(),\n        preventDefault: true,\n      },\n      {\n        key: ['k s'],\n        command: () => this.showModal(),\n        preventDefault: true,\n      }\n    );\n  }\n\n  showModal(): void {\n    if (this.modalService.hasOpenModals()) {\n      this.modal.close();\n    }\n    this.modal = this.modalService.open(this.templateRef);\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './datenstruktur.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DatenstrukturComponent {}\n","<h1 class=\"mt-3 mb-4\">Datenstruktur</h1>\n\n<p class=\"lead\">\n  Die Strukturierung von Daten ist ein zentraler Aspekt der Informationsarchitektur. Nach welchen\n  Kriterien können die Inhalte der Navigation oder einer Liste strukturiert werden?\n</p>\n\n<h2>Warum ist es wichtig?</h2>\n<p>\n  In Navigationen, Filtern oder Listen wollen Nutzer schnell das Gewünschte finden. Es ist wichtig,\n  sich zu überlegen, was die zentralen Nutzungsanforderungen einer Ansicht sind. Mögliche Muster\n  sind:\n</p>\n<h2 class=\"mt-5\">Ungeordnete Struktur</h2>\n<ul>\n  <li>Themen (z.B. Inland, Ausland, Wirtschaft, Sport, Finanzen)</li>\n  <li>Zielgruppen (z.B. Männer, Frauen, Kinder)</li>\n  <li>Tätigkeiten (z.B. importieren, exportieren, hochladen etc.)</li>\n</ul>\n\n<h2 class=\"mt-5\">Strukturierte Anordnung</h2>\n<ul>\n  <li>Chronologisch (z.B. nach Speicherdatum, Veröffentlichungsdatum etc.)</li>\n  <li>Alphabetisch (Wikis, Glossar, Länderlisten,...)</li>\n  <li>Häufigkeit (meistgenutzt, etc.)</li>\n</ul>\n\n<h2 class=\"mt-5\">Was ist zu berücksichtigen?</h2>\n<ul>\n  <li>\n    Wie oft benötigt der Nutzer welche Informationen? Es ist beispielsweise eine Themenliste einer\n    Alphabetischen Liste vorzuziehen, wenn der Nutzer manche Navigationspunkte viel häufiger\n    braucht.\n  </li>\n  <li>\n    Eine alphabetische Liste macht Sinn, wenn bei vielen Daten dem Nutzer das Auffinden vereinfacht\n    wird, z.B. die Länderliste. Werden z.B. drei Länder, wie CH; DE; AT am häufigsten benötigt,\n    macht es Sinn, diese vor die alphabetische Liste in einem Dropdown einzufügen und erst dann mit\n    Angola zu beginnen.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/layout/navigation\" class=\"highlight\">Navigation</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/usability/mauswege\" class=\"highlight\">Mauswege</a>\n  </li>\n</ul>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './mentale-modelle.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MentaleModelleComponent {}\n","<h1 class=\"mt-3 mb-4\">Mentale Modelle</h1>\n\n<p class=\"lead\">\n  Mentale Modelle sind die Vorstellungen, die Benutzer über Systeme, Vorgänge, Geräte etc. haben.\n</p>\n\n<h2>Warum ist es wichtig?</h2>\n<p>\n  Wenn ein mentales Modell eines Benutzers von einem interaktiven System unvollständig oder\n  widersprüchlich ist, dann kann der Benutzer das interaktive System nicht hindernisfrei benutzen.\n  Beim GUI Design sollte man sich also immer fragen: \"Was sind die mentalen Modelle der Benutzer?\"\n</p>\n\n<h2 class=\"mt-5\">Was ist zu berücksichtigen?</h2>\n<p>\n  Wer die mentalen Modelle seiner Nutzer kennt, baut die besseren Applikationen.\n  <br />\n  Softwareentwickler haben häufig aufgrund der technischen Datenstrukturen andere mentale Modelle\n  als die Nutzer, die sich an der realen Welt und nicht Datenbankstrukturen orientieren.\n</p>\n\n<h2 class=\"mt-5\">Beispiel</h2>\n<div class=\"form-row\">\n  <div class=\"col-md-4\">\n    <img\n      src=\"assets/mentale-modelle1.png\"\n      alt=\"Game Screenshot Top down view\"\n      class=\"img-thumbnail w-100\" />\n  </div>\n  <div class=\"col-md-8\">\n    Bei einem Game bewegt\n    <span class=\"keyboard-key\">\n      <span class=\"fas fa-long-arrow-alt-right\"></span>\n    </span>\n    die Spielfigur nach rechts.\n  </div>\n</div>\n<div class=\"form-row mt-4\">\n  <div class=\"col-md-4\">\n    <img\n      src=\"assets/mentale-modelle2.png\"\n      alt=\"Screenshot Website Bildergallerie\"\n      class=\"img-thumbnail w-100\" />\n  </div>\n  <div class=\"col-md-8\">\n    Auf einer Website bewegt genau dasselbe Icon (bzw. dieselbe Taste) das Bild nach links.\n    <br />\n    Je nach Kontext, hat der Nutzer ein anderes Mentales Modell wie sich die Welt, respektive das\n    GUI verhält.\n  </div>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { AlertHolderDirective } from '../../../bedag-components/alert/alert-holder.directive';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './overflow-menu.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class OverflowMenuComponent {\n  constructor(private readonly alerts: AlertHolderDirective) {}\n\n  showAlert(alertText: string): void {\n    this.alerts.success(`${alertText} wurde ausgewählt`);\n  }\n}\n","<h1 class=\"mt-3 mb-4\">Overflow Menu</h1>\n\n<p class=\"lead\">\n  Wenn zusätzliche Navigationspunkte oder Aktionen aufgrund von Platzmangel oder für verbesserte\n  Übersichtlichkeit nicht auf der Bedienoberfläche dargestellt werden sollen, können sie in einem\n  Overflow Menu (\n  <span class=\"fas fa-ellipsis-v fa-fw\" aria-hidden=\"true\"></span>\n  ) ausgelagert werden.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Wenn in einer Navigationsleiste nicht ausreichend Platz für alle Navigationspunkte ist. Es ist\n    klar zu priorisieren. Die wichtigen Elemente sollten sichtbar sein, die weniger wichtigen im\n    Overflow Menu erscheinen.\n  </li>\n  <li>\n    Wenn weniger wichtige Elemente weniger prominent platziert werden sollen, beispielsweise im\n    Applikationsheader (\"Hilfe\", \"About\", etc.)\n  </li>\n  <li>\n    Wenn \"gefährliche\" Aktionen versteckt werden sollen, sodass sie nicht aus Versehen mit einem\n    Klick betätigt werden (zum Beispiel \"Alles Löschen\").\n  </li>\n  <li>Wenn aus einer Tabellenzeile mehrere Aktionen ausgelöst werden können.</li>\n  <li>\n    Die Reihenfolge der Menupunkte muss dem Kontext angepasst sein. Wenn viele Menupunkte vorhanden\n    sind, sollten die Aktionen nach Themen gruppiert und mit Dividern optisch getrennt werden.\n  </li>\n  <li>\n    Aktionen, die signifikante Änderungen an den zu bearbeitenden Daten bewirken (z.B. Löschen),\n    werden zusätzlich durch einen Divider abgetrennt, am Ende der Liste aufgeführt.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul class=\"mb-5\">\n  <li>Wenn es nur einen Unterpunkt gibt.</li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements mb-5\">\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/dropdown-menu\" class=\"highlight\">Drop-Down Menu</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/layout/functionbar\" class=\"highlight\">Function Bar</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/datatables\" class=\"highlight\">Data Tables</a>\n  </li>\n  <li><a routerLink=\"/styleguide/basics/icons\" class=\"highlight\">Icons</a></li>\n</ul>\n\n<app-code-example src=\"ui-elements/overflow-menu/overflow-menu.component.html#overflow-menu\">\n  <div ngbDropdown class=\"d-inline-block overflow-menu\">\n    <button class=\"btn btn-outline-primary btn-sm\" id=\"dropdownBasic1\" ngbDropdownToggle>\n      <span class=\"fa-fw fas fa-ellipsis-v\"></span>\n    </button>\n    <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n      <button ngbDropdownItem (click)=\"showAlert('Nach aktuellster Adresse suchen')\">\n        Nach aktuellster Adresse suchen\n      </button>\n      <div class=\"dropdown-divider\"></div>\n      <button ngbDropdownItem (click)=\"showAlert('In neue Liste hinzufügen')\">\n        In neue Liste hinzufügen\n      </button>\n      <button ngbDropdownItem (click)=\"showAlert('Aus dieser Liste entfernen')\">\n        Aus dieser Liste entfernen\n      </button>\n      <div class=\"dropdown-divider\"></div>\n      <button ngbDropdownItem (click)=\"showAlert('Editieren')\">Editieren</button>\n      <button ngbDropdownItem (click)=\"showAlert('Duplizieren')\">Duplizieren</button>\n      <div class=\"dropdown-divider\"></div>\n      <button ngbDropdownItem (click)=\"showAlert('Löschen')\">Löschen</button>\n    </div>\n  </div>\n\n  <p class=\"mt-3\">\n    Für ein in einem Kontext eingebettetes Beispiel, siehe die Overflow-Menus in\n    <a routerLink=\"/styleguide/layout/functionbar\" class=\"highlight\">Function Bar</a>\n    und\n    <a routerLink=\"/styleguide/ui-elements/datatables\" class=\"highlight\">Data Tables</a>\n    .\n  </p>\n</app-code-example>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './forms.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FormsComponent {\n  search(): void {\n    // here to be filter search function\n  }\n}\n","<h1 class=\"mt-3 mb-4\">Forms</h1>\n\n<p class=\"lead\">Formulare kommen zum Einsatz, wenn der Nutzer Daten eingeben muss.</p>\n<p>\n  Das Spektrum reicht dabei vom einzelnen Eingabefeld bis zum mehrspaltigen Layout mit mehreren\n  Gruppen von Formularelementen, mit Labels, Hilfetexten und Validierungsmeldungen.\n</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>\n    Es ist wichtig, dass Felder, die inhaltlich zusammengehören, visuell als ein Block abgebildet\n    werden.\n  </li>\n  <li>Mehrere Inhaltsblöcke können durch Zwischenüberschriften abgegrenzt werden.</li>\n  <li>Es sollte kein Flattersatz entstehen, da dieser für das Auge unruhig wirkt.</li>\n  <li>Es ist darauf zu achten, dass einzelne Eingabefelder nicht zu breit ausfallen.</li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Wenn es sehr viele Eingaben gibt, die immer einer klaren Sequenz folgen, ist ein Wizard\n    einzusetzen.\n  </li>\n  <li>\n    Wenn der Nutzer Texte nur lesen, aber nicht bearbeiten kann (read-only), ist die Darstellung der\n    Daten mit HTML Description Lists vorzuziehen.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Formularelemente und Beispiele</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms/small-form-example\" class=\"highlight\">\n      Small Form Example\n    </a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms/large-form-example\" class=\"highlight\">\n      Large Form Example\n    </a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms/select-dropdowns\" class=\"highlight\">\n      Select Dropdowns\n    </a>\n  </li>\n\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms/datepicker\" class=\"highlight\">Datepicker</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms/autocompletion\" class=\"highlight\">\n      Autocompletion\n    </a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/buttons\" class=\"highlight\">Buttons</a>\n  </li>\n</ul>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Wir verwenden den\n      <a\n        class=\"external\"\n        href=\"https://getbootstrap.com/docs/4.5/components/forms/\"\n        target=\"_blank\">\n        Bootstrap Form Style\n      </a>\n      zum Gestalten von Formularen.\n      <br />\n      Wir layouten Formulare mit dem\n      <a routerLink=\"/styleguide/layout/grid\" class=\"highlight\">Grid-System</a>\n      von Bootstrap als\n      <a\n        class=\"external\"\n        href=\"https://getbootstrap.com/docs/4.5/components/forms/#horizontal-form\"\n        target=\"_blank\">\n        Horizontal Form\n      </a>\n      .\n      <br />\n    </p>\n    <p>\n      Damit werden\n      <a routerLink=\"/styleguide/ui-elements/forms/large-form-example\" class=\"highlight\">\n        grosse Formulare\n      </a>\n      mehrspaltig dargestellt, wenn viel horizontaler Platz zur Verfügung steht. Die untereinander\n      aufgereihten Feldbeschriftungen vereinfachen das Scanning des Formulars, wodurch gesuchte\n      Informationen rasch gefunden werden können. Steht horizontal wenig Platz zur Verfügung wird\n      das Formular automatisch einspaltig, und die Feldbeschriftungen über den Eingabefeldern\n      dargestellt.\n    </p>\n    <p>\n      Der Styleguide zeigt auf, welche Klassen verwendet werden müssen, damit Fehler korrekt\n      angezeigt werden. Für die Validierung nehmen wir\n      <a href=\"https://angular.io/guide/form-validation\" class=\"external\" target=\"_blank\">\n        Angular Form-Validierung\n      </a>\n      zu Hilfe.\n    </p>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Formulartypen</h2>\n<p>\n  Je nach Grösse der Formulare soll innerhalb einer Applikation nach Möglichkeit immer derselbe\n  Formulartyp verwendet werden.\n</p>\n<h3 class=\"mt-5\">Label oberhalb</h3>\n<p>\n  Anwendungsbeispiel und Informationen siehe:\n  <a routerLink=\"/styleguide/ui-elements/forms/small-form-example\" class=\"highlight\">\n    Small Form Example\n  </a>\n</p>\n<app-code-example src=\"ui-elements/forms/forms.component.html#form-type0\">\n  <form class=\"is-invalid\">\n    <div class=\"row\">\n      <div class=\"form-group col-md-4\">\n        <label class=\"required\" for=\"benutzername\">Benutzername</label>\n        <input type=\"text\" class=\"form-control\" id=\"benutzername\" />\n        <div class=\"invalid-feedback\">Bitte einen Benutzernamen eingeben</div>\n      </div>\n    </div>\n  </form>\n</app-code-example>\n\n<h3 class=\"mt-5\">Label Links</h3>\n<p>\n  Anwendungsbeispiel und Informationen siehe:\n  <a routerLink=\"/styleguide/ui-elements/forms/large-form-example\" class=\"highlight\">\n    Large Form Example\n  </a>\n</p>\n<app-code-example src=\"ui-elements/forms/forms.component.html#form-type1\">\n  <form class=\"is-invalid\">\n    <div class=\"row mb-3\">\n      <label class=\"col-md-2 col-form-label required\" for=\"name\">Name</label>\n      <div class=\"col-md-4\">\n        <input type=\"text\" class=\"form-control\" id=\"name\" />\n        <div class=\"invalid-feedback\">Bitte einen Namen eingeben</div>\n      </div>\n      <label class=\"col-md-2 col-form-label required\" for=\"vorname\">Vorname</label>\n      <div class=\"col-md-4\">\n        <input type=\"text\" class=\"form-control\" id=\"vorname\" />\n        <div class=\"invalid-feedback\">Bitte einen Vornamen eingeben</div>\n      </div>\n    </div>\n  </form>\n</app-code-example>\n\n<h2 class=\"mt-5\">Read-only</h2>\n<p>\n  Wenn der Haupt Use Case für eine Ansicht die Dateneingabe ist, dann können die Daten in einem\n  direkt editierbaren Formular dargestellt werden.\n  <br />\n  Wenn der Use Case nur gelegentlich notwendige Änderungen vorsieht (z.B. die Adresse), dann kann es\n  sinnvoll sein die Daten in einem Read-mode darzustellen und den Edit-mode durch eine\n  Benutzeraktion zu aktivieren (\n  <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" ngbTooltip=\"Editieren\">\n    <span class=\"fas fa-pen fa-fw\"></span>\n  </button>\n  ).\n  <br />\n  Grundsätzlich gilt: Bei wenigen Daten, Edit auf gleicher Seite, bei vielen Daten, Edit auf eigener\n  Ansicht.\n</p>\n\n<h3 class=\"mt-5\">Read-only Daten mit Definition List</h3>\n<p>\n  Wenn Daten Read-only dargestellt werden sollen, ist die beste Lösung meistens eine HTML Definition\n  List. Der Code bleibt sehr übersichtlich und ist mit dem Grid-System leicht zu layouten.\n</p>\n\n<app-code-example src=\"ui-elements/forms/forms.component.html#form-read-only0\">\n  <dl class=\"row\">\n    <dt class=\"col-sm-3\">Amtlicher Name</dt>\n    <dd class=\"col-sm-9\">Muster</dd>\n    <dt class=\"col-sm-3\">Vornamen</dt>\n    <dd class=\"col-sm-9\">Hans Ferdinand</dd>\n    <dt class=\"col-sm-3\">Geburtsdatum</dt>\n    <dd class=\"col-sm-9\">06.11.1963</dd>\n    <dt class=\"col-sm-3\">Geschlecht</dt>\n    <dd class=\"col-sm-9\">männlich</dd>\n  </dl>\n</app-code-example>\n\n<h3 class=\"mt-5\">Read-only Daten mit Bootstrap Forms</h3>\n<p>\n  Die gleichen Daten mit Formular-Code darzustellen benötigt deutlich mehr Code, was mehr\n  Zeitaufwand für das Layouting und die Wartung bedeutet. Deshalb sollten Formulare in der Regel nur\n  für die Dateneingabe verwendet werden.\n  <br />\n  Formular-Code zur Darstellung von Read-only Daten kann in Ausnahmefällen sinnvoll sein:\n</p>\n<ul>\n  <li>Wenn die dargestellten Daten inline editiert werden sollen.</li>\n  <li>Wenn die Felder den Keyboard Focus erhalten können sollen.</li>\n  <li>\n    Wenn die Daten der Read-only Felder eines Formulars beim Senden mitgesendet werden sollen.\n  </li>\n</ul>\n<p>\n  Read-only Formulare werden mit der Klasse\n  <code>form-control-plaintext</code>\n  gerendert.\n</p>\n\n<app-code-example src=\"ui-elements/forms/forms.component.html#form-read-only1\">\n  <div class=\"row mb-3\">\n    <label class=\"col-sm-3 col-form-label\" for=\"name1\">Amtlicher Name</label>\n    <div class=\"col-sm-3\">\n      <input type=\"text\" class=\"form-control-plaintext\" id=\"name1\" value=\"Muster\" readonly />\n    </div>\n    <label class=\"col-sm-3 col-form-label\" for=\"vorname2\">Vornamen</label>\n    <div class=\"col-sm-3\">\n      <input\n        type=\"text\"\n        class=\"form-control-plaintext\"\n        id=\"vorname2\"\n        value=\"Hans Ferdinand\"\n        readonly />\n    </div>\n  </div>\n  <div class=\"row mb-3\">\n    <label class=\"col-sm-3 col-form-label\" for=\"name1\">Geburtsdatum</label>\n    <div class=\"col-sm-3\">\n      <input\n        type=\"text\"\n        class=\"form-control-plaintext\"\n        id=\"birthdate\"\n        value=\"06.11.1963\"\n        readonly />\n    </div>\n    <label class=\"col-sm-3 col-form-label\" for=\"vorname2\">Geschlecht</label>\n    <div class=\"col-sm-3\">\n      <input type=\"text\" class=\"form-control-plaintext\" id=\"gender\" value=\"männlich\" readonly />\n    </div>\n  </div>\n</app-code-example>\n\n<h2 class=\"mt-5\">Eingabefeld ohne Label</h2>\n<p>\n  Ausnahmsweise können Eingabefelder für Formulare ohne ein Label verwendet werden, wenn nur ein\n  einzelnes Formularfeld vorhanden ist. Der Placeholder-Text ist in diesen Fällen besonders wichtig.\n  Zudem muss sichergestellt werden, dass der Zweck des Eingabefelds klar durch den Kontext definiert\n  wird, z.B. mit einem Icon oder durch den Text, den das Feld umgibt.\n</p>\n<app-code-example src=\"ui-elements/forms/forms.component.html#form-single-input\">\n  <div class=\"row\">\n    <div class=\"col-md-4 mb-4\">\n      Einzelnes Eingabefeld ohne Button:\n      <br />\n      <div class=\"form-inline\">\n        <div class=\"input-group\">\n          <input\n            class=\"form-control pl-5\"\n            placeholder=\"Benutzernamen filtern...\"\n            (keyup)=\"search()\" />\n          <span class=\"fas fa-filter input-icon left-icon\"></span>\n        </div>\n      </div>\n      <br />\n      <div class=\"form-inline\">\n        <div class=\"input-group\">\n          <input\n            class=\"form-control pl-5\"\n            placeholder=\"Resultate durchsuchen...\"\n            (keyup)=\"search()\" />\n          <span class=\"fas fa-search input-icon left-icon\"></span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      Einzelnes Eingabefeld mit Button:\n      <br />\n      <div class=\"form-inline\">\n        <div class=\"input-group\">\n          <input type=\"text\" class=\"form-control\" id=\"search\" placeholder=\"Fahrzeug suchen...\" />\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-light\" type=\"button\">\n              <span class=\"fas fa-search\"></span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</app-code-example>\n","<h1 class=\"mt-3 mb-4\">Select und Multiselect Dropdowns</h1>\n\n<p class=\"lead\">\n  Ein Select bzw. Multiselect Dropdown erlaubt die Auswahl von Elementen aus einer Liste von\n  Möglichkeiten innerhalb eines Formulars.\n</p>\n\n<h2 class=\"mt-5\">Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Wenn aus n Optionen nur eine ausgewählt werden kann, wird ein Select verwendet.</li>\n  <li>\n    Wenn aus n Optionen n Möglichkeiten ausgewählt werden können, wird ein Multiselect verwendet.\n  </li>\n  <li>Es wird keine Default Auswahl vorgegeben.</li>\n  <li>Wenn noch keine Auswahl getroffen wurde – «Bitte wählen» als Placeholder schreiben.</li>\n  <li>\n    Es ist darauf zu achten, dass das Feld nicht zu breit ist, damit die Elemente (Feldbeschriftung,\n    Auswahl und Pfeil) nicht zu weit voneinander entfernt sind.\n  </li>\n  <li>\n    Wurde eine oder mehrere Optionen gewählt, sind diese im geschlossenen Zustand aufzuführen.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>\n    Wenn es darum geht, aus einem Drop-Down eine Aktion auszulösen, benutzen wir ein\n    <a class=\"highlight\" routerLink=\"/styleguide/ui-elements/dropdown-menu\">Drop-Down Menu</a>\n    .\n  </li>\n  <li>\n    Select: Wenn es weniger als 3-5 Auswahlmöglichkeiten gibt. Dann ist eine Liste mit Radiobuttons\n    oft hilfreicher, da der Nutzer ohne Klick alle Möglichkeiten direkt sieht.\n  </li>\n  <li>\n    Multiselect: Wenn es weniger als 10 Auswahlmöglichkeiten gibt. Dann ist eine Liste mit\n    Checkboxen besser geeignet, da der Nutzer ohne Klick alle Möglichkeiten direkt sieht.\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/dropdown-menu\">Drop-Down Menu</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms/autocompletion\">Autocompletion</a>\n  </li>\n  <li>\n    <span></span>\n    Radiobuttons\n  </li>\n  <li>\n    <span></span>\n    Checkboxes\n  </li>\n</ul>\n\n<div class=\"card mt-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    <p>\n      Für die Umsetzung des Select bzw. Multiselect verwenden wir\n      <a class=\"external\" href=\"https://ng-select.github.io/ng-select\" target=\"_blank\">ng-select</a>\n      .\n      <br />\n      Abgesehen von der Möglichkeit, das Element als Multiselect zu verwenden, bietet es gegenüber\n      dem normalen\n      <code>&lt;select></code>\n      auch bessere Möglichkeiten zur Suche von Elementen.\n      <br />\n      Es gibt verschiedene Arten ein\n      <code>&lt;ng-select></code>\n      mit Daten zu befüllen und viele verschiedene Gestaltungsmöglichkeiten.\n      <br />\n      Details dazu befinden sich in der\n      <a href=\"https://ng-select.github.io/ng-select\" class=\"external\" target=\"_blank\">\n        Dokumentation zu ng-select\n      </a>\n    </p>\n  </div>\n</div>\n\n<h2 class=\"mt-5\">Einfaches Select</h2>\n<app-code-example\n  basePath=\"ui-elements/forms/select-dropdowns\"\n  src=\"select-dropdowns.component.html#single,select-dropdowns.component.ts\">\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-4\">\n      <label for=\"single0\">Einfaches Select mit Suche</label>\n      <ng-select\n        id=\"single0\"\n        [items]=\"countries\"\n        [(ngModel)]=\"countrySelection\"\n        placeholder=\"Bitte Land auswählen\"></ng-select>\n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-4\">\n      <label for=\"single1\">Einfaches Select ohne Suche</label>\n      <ng-select\n        id=\"single1\"\n        [items]=\"paymentOptions\"\n        [(ngModel)]=\"paymentOptionsSelection\"\n        [searchable]=\"false\"\n        placeholder=\"Bitte Zahlungsart auswählen\"></ng-select>\n    </div>\n  </div>\n</app-code-example>\n\n<h2 class=\"mt-5\">Multi-Select</h2>\n<p>\n  Vorsicht beim Gestalten von Formularen mit Multi-Select: das Feld wird standardmässig höher,\n  sobald die Elemente nicht mehr Platz haben - dies ist beim Layouten des Formulars zu beachten.\n</p>\n<app-code-example src=\"ui-elements/forms/select-dropdowns/select-dropdowns.component.html#multi\">\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"multi0\">Multi-Select ohne Checkboxen</label>\n      <ng-select\n        id=\"multi0\"\n        [items]=\"locationTypes\"\n        [multiple]=\"true\"\n        [(ngModel)]=\"locationTypeSelection\"\n        placeholder=\"Kein Filter ausgewählt\"></ng-select>\n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-8\">\n      <label for=\"multi1\">Multi-Select mit Checkboxen</label>\n      <ng-select\n        id=\"multi1\"\n        [items]=\"countries\"\n        [multiple]=\"true\"\n        [(ngModel)]=\"countryMultiSelection\"\n        [selectableGroup]=\"true\"\n        [closeOnSelect]=\"false\"\n        placeholder=\"Bitte Länder auswählen\">\n        <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n          <input id=\"item-{{ index }}\" type=\"checkbox\" [ngModel]=\"item$.selected\" />\n          {{ item }}\n        </ng-template>\n      </ng-select>\n    </div>\n  </div>\n</app-code-example>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-select-dropdowns',\n  templateUrl: './select-dropdowns.component.html',\n})\nexport class SelectDropdownsComponent {\n  countries = [\n    'Albanien',\n    'Andorra',\n    'Belgien',\n    'Bosnien und Herzegowina',\n    'Bulgarien',\n    'Dänemark',\n    'Deutschland',\n    'Estland',\n    'Finnland',\n    'Frankreich',\n    'Griechenland',\n    'Irland',\n    'Island',\n    'Italien',\n    'Kasachstan',\n    'Kosovo',\n    'Kroatien',\n    'Lettland',\n    'Liechtenstein',\n    'Litauen',\n    'Luxemburg',\n    'Malta',\n    'Republik Moldau',\n    'Monaco',\n    'Montenegro',\n    'Niederlande',\n    'Nordmazedonien',\n    'Norwegen',\n    'Österreich',\n    'Polen',\n    'Portugal',\n    'Rumänien',\n    'Russland',\n    'San Marino',\n    'Schweden',\n    'Schweiz',\n    'Serbien',\n    'Slowakei',\n    'Slowenien',\n    'Spanien',\n    'Tschechien',\n    'Türkei',\n    'Ukraine',\n    'Ungarn',\n    'Vatikanstadt',\n    'Vereinigtes Königreich',\n    'Weißrussland',\n  ];\n\n  locationTypes = ['Länder', 'Kantone', 'Bezirke', 'Gemeinden', 'Ortschaften'];\n\n  paymentOptions = ['Kreditkarte', 'Rechnung', 'Vorauszahlung'];\n\n  countrySelection: string | null = null;\n  paymentOptionsSelection: string | null = null;\n\n  locationTypeSelection: string | null = null;\n  countryMultiSelection: Array<string> = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown-menu',\n  templateUrl: './dropdown-menu.component.html',\n})\nexport class DropdownMenuComponent {}\n","<h1 class=\"mt-3 mb-4\">Drop-Down Menu</h1>\n\n<p class=\"lead\">\n  Das Drop-Down Menu fasst eine Gruppe von Buttons zusammen, um Platz zu sparen oder um bessere\n  Übersicht zu schaffen.\n</p>\n\n<h2>Wann und wie wird das Element eingesetzt?</h2>\n<ul>\n  <li>Wenn es zu wenig Platz hat für Buttons, z.B. in Tabellen</li>\n  <li>Wenn es eine Gruppe von Aktionen gibt, die zusammengehören.</li>\n</ul>\n\n<h2 class=\"mt-5\">Wann soll das Element nicht verwendet werden?</h2>\n<ul>\n  <li>Wenn Aktionen sehr häufig verwendet werden, sollten sie möglichst direkt anklickbar sein.</li>\n  <li>\n    Aktionen, die thematisch nicht zusammen passen, sollen möglichst nicht im gleichen Drop-Down\n    Menu sein. Ausnahme: das\n    <a routerLink=\"/styleguide/ui-elements/overflow-menu\" class=\"highlight\">Overflow Menu</a>\n    .\n  </li>\n</ul>\n\n<h2 class=\"mt-5\">Verwandte Elemente</h2>\n<ul class=\"related-elements\">\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/forms/select-dropdowns\" class=\"highlight\">\n      Select und Multiselect Dropdowns\n    </a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/overflow-menu\" class=\"highlight\">Overflow Menu</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/ui-elements/buttons\" class=\"highlight\">Buttons</a>\n  </li>\n  <li>\n    <a routerLink=\"/styleguide/layout/functionbar\" class=\"highlight\">Function Bar</a>\n  </li>\n</ul>\n\n<div class=\"card my-5\">\n  <h2 class=\"card-header\">\n    <em class=\"fas fa-wrench mr-3\"></em>\n    Implementierung\n  </h2>\n  <div class=\"card-body\">\n    Für Drop-down Menus verwenden wir das\n    <a\n      class=\"external\"\n      href=\"https://ng-bootstrap.github.io/#/components/dropdown/examples\"\n      target=\"_blank\">\n      Bootstrap-Element Dropdown\n    </a>\n  </div>\n</div>\n\n<app-code-example src=\"ui-elements/dropdown-menu/dropdown-menu.component.html#dropdown-menu\">\n  <div ngbDropdown>\n    <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Export</button>\n    <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n      <button ngbDropdownItem>Als CSV-Datei</button>\n      <button ngbDropdownItem>Als Statistiklieferung (eCH-0099)</button>\n      <button ngbDropdownItem>Als Gesamtdatenbestand (eCH-0020)</button>\n    </div>\n  </div>\n</app-code-example>\n","import { Injectable } from '@angular/core';\nimport { SourceCodeService } from './source-code.service';\n\nconst context = require.context('!!raw-loader!../', true, /.(component|data).(html|ts)$/);\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WebpackSourceCodeService implements SourceCodeService {\n  sourceCode(filename: string): string {\n    const key = `./styleguide/${filename}`.replace('styleguide/../', '');\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n    return context(key).default;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SourceCodeService } from './source-code.service';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { TypographyComponent } from './basics/typography/typography.component';\nimport { IconsComponent } from './basics/icons/icons.component';\nimport { ColorsComponent } from './basics/colors/colors.component';\nimport { LogoComponent } from './basics/logo/logo.component';\nimport { LinksComponent } from './ui-elements/links/links.component';\nimport { TooltipsComponent } from './ui-elements/tooltips/tooltips.component';\nimport { ButtonsComponent } from './ui-elements/buttons/buttons.component';\nimport { AlertsComponent } from './ui-elements/alerts/alerts.component';\nimport { ModalDialogComponent } from './ui-elements/modal-dialog/modal-dialog.component';\nimport { AlertButtonsComponent } from './ui-elements/alerts/alert-buttons.component';\nimport { DatepickerDemoComponent } from './ui-elements/forms/datepicker/datepicker-demo.component';\nimport { FunctionbarDemoComponent } from './layout/functionbar/functionbar-demo.component';\nimport { GridComponent } from './layout/grid/grid.component';\nimport { ActionbarDemoComponent } from './layout/actionbar/actionbar-demo.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HeaderDemoComponent } from './layout/header/header-demo.component';\nimport { NavigationDemoComponent } from './layout/navigation/navigation-demo.component';\nimport { BreadcrumbsComponent } from './layout/breadcrumbs/breadcrumbs.component';\nimport { AutocompletionDemoComponent } from './ui-elements/forms/autocompletion/autocompletion-demo.component';\nimport { TabsComponent } from './ui-elements/tabs/tabs.component';\nimport { DatatablesComponent } from './ui-elements/datatables/datatables.component';\nimport { BadgesComponent } from './ui-elements/badges/badges.component';\nimport { DividersComponent } from './ui-elements/dividers/dividers.component';\nimport { ProgressIndicatorsComponent } from './ui-elements/progress-indicators/progress-indicators.component';\nimport { DemoStatusDirective } from './demo-utils/status/demo-status.directive';\nimport { CodeExampleComponent } from './demo-utils/code-example/code-example.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BedagComponentsModule } from '../bedag-components/bedag-components.module';\nimport { SmallFormExampleComponent } from './ui-elements/forms/small-form-example/small-form-example.component';\nimport { LargeFormExampleComponent } from './ui-elements/forms/large-form-example/large-form-example.component';\nimport { MauswegeComponent } from './usability/mauswege/mauswege.component';\nimport { TastaturbedienbarkeitComponent } from './usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component';\nimport { DatenstrukturComponent } from './usability/datenstruktur/datenstruktur.component';\nimport { MentaleModelleComponent } from './usability/mentale-modelle/mentale-modelle.component';\nimport { KeyboardShortcutsModule } from 'ng-keyboard-shortcuts';\nimport { OverflowMenuComponent } from './ui-elements/overflow-menu/overflow-menu.component';\nimport { FormsComponent } from './ui-elements/forms/forms.component';\nimport { SelectDropdownsComponent } from './ui-elements/forms/select-dropdowns/select-dropdowns.component';\nimport { DropdownMenuComponent } from './ui-elements/dropdown-menu/dropdown-menu.component';\nimport { WebpackSourceCodeService } from './webpack-source-code.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'welcome',\n    pathMatch: 'full',\n    data: { title: 'Welcome' },\n  },\n  { path: 'welcome', component: WelcomeComponent, data: { title: 'Welcome' } },\n\n  { path: 'layout', component: LayoutComponent, data: { title: 'Layout' } },\n  {\n    path: 'layout/actionbar',\n    component: ActionbarDemoComponent,\n    data: { title: 'Actionbar' },\n  },\n  {\n    path: 'layout/functionbar',\n    component: FunctionbarDemoComponent,\n    data: { title: 'Functionbar' },\n  },\n  {\n    path: 'layout/breadcrumbs',\n    component: BreadcrumbsComponent,\n    data: { title: 'Breadcrumbs' },\n  },\n  {\n    path: 'layout/navigation',\n    component: NavigationDemoComponent,\n    data: { title: 'Navigation' },\n  },\n  {\n    path: 'layout/header',\n    component: HeaderDemoComponent,\n    data: { title: 'Header' },\n  },\n  { path: 'layout/grid', component: GridComponent, data: { title: 'Grid' } },\n\n  {\n    path: 'basics/typography',\n    component: TypographyComponent,\n    data: { title: 'Typography' },\n  },\n  { path: 'basics/icons', component: IconsComponent, data: { title: 'Icons' } },\n  {\n    path: 'basics/colors',\n    component: ColorsComponent,\n    data: { title: 'Colors' },\n  },\n  { path: 'basics/logo', component: LogoComponent, data: { title: 'Logo' } },\n\n  {\n    path: 'ui-elements/forms',\n    component: FormsComponent,\n    data: { title: 'Forms' },\n  },\n  {\n    path: 'ui-elements/forms/small-form-example',\n    component: SmallFormExampleComponent,\n    data: { title: 'Small Form Example' },\n  },\n  {\n    path: 'ui-elements/links',\n    component: LinksComponent,\n    data: { title: 'Links' },\n  },\n  {\n    path: 'ui-elements/dividers',\n    component: DividersComponent,\n    data: { title: 'Dividers' },\n  },\n  {\n    path: 'ui-elements/forms/large-form-example',\n    component: LargeFormExampleComponent,\n    data: { title: 'Large Form Example' },\n  },\n  {\n    path: 'ui-elements/forms/datepicker',\n    component: DatepickerDemoComponent,\n    data: { title: 'Datepicker' },\n  },\n  {\n    path: 'ui-elements/forms/autocompletion',\n    component: AutocompletionDemoComponent,\n    data: { title: 'Autocompletion' },\n  },\n  {\n    path: 'ui-elements/forms/select-dropdowns',\n    component: SelectDropdownsComponent,\n    data: { title: 'Select Dropdows' },\n  },\n  {\n    path: 'ui-elements/alerts',\n    component: AlertsComponent,\n    data: { title: 'Alerts' },\n  },\n  {\n    path: 'ui-elements/datatables',\n    component: DatatablesComponent,\n    data: { title: 'Data Tables' },\n  },\n  {\n    path: 'ui-elements/buttons',\n    component: ButtonsComponent,\n    data: { title: 'Buttons' },\n  },\n  {\n    path: 'ui-elements/modal-dialog',\n    component: ModalDialogComponent,\n    data: { title: 'Modal Dialog' },\n  },\n  {\n    path: 'ui-elements/overflow-menu',\n    component: OverflowMenuComponent,\n    data: { title: 'Overflow Menu' },\n  },\n  {\n    path: 'ui-elements/tooltips',\n    component: TooltipsComponent,\n    data: { title: 'Tooltips' },\n  },\n  {\n    path: 'ui-elements/progress-indicators',\n    component: ProgressIndicatorsComponent,\n    data: { title: 'Progress Indicators' },\n  },\n  {\n    path: 'ui-elements/tabs',\n    component: TabsComponent,\n    data: { title: 'Tabs' },\n  },\n  {\n    path: 'ui-elements/badges',\n    component: BadgesComponent,\n    data: { title: 'Badges' },\n  },\n  {\n    path: 'ui-elements/dropdown-menu',\n    component: DropdownMenuComponent,\n    data: { title: 'Drop-Down Menu' },\n  },\n\n  {\n    path: 'usability/mauswege',\n    component: MauswegeComponent,\n    data: { title: 'Mauswege' },\n  },\n  {\n    path: 'usability/tastaturbedienbarkeit',\n    component: TastaturbedienbarkeitComponent,\n    data: { title: 'Tastaturbedienbarkeit' },\n  },\n  {\n    path: 'usability/mentale-modelle',\n    component: MentaleModelleComponent,\n    data: { title: 'Mentale Modelle' },\n  },\n  {\n    path: 'usability/datenstruktur',\n    component: DatenstrukturComponent,\n    data: { title: 'Datenstruktur' },\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    BedagComponentsModule,\n    KeyboardShortcutsModule,\n  ],\n  declarations: [\n    WelcomeComponent,\n    TypographyComponent,\n    ActionbarDemoComponent,\n    AlertButtonsComponent,\n    DatepickerDemoComponent,\n    FunctionbarDemoComponent,\n    HeaderDemoComponent,\n    TooltipsComponent,\n    BreadcrumbsComponent,\n    TabsComponent,\n    DatatablesComponent,\n    BadgesComponent,\n    ButtonsComponent,\n    LinksComponent,\n    AlertsComponent,\n    ModalDialogComponent,\n    ColorsComponent,\n    LogoComponent,\n    DividersComponent,\n    ProgressIndicatorsComponent,\n    IconsComponent,\n    LayoutComponent,\n    GridComponent,\n    NavigationDemoComponent,\n    CodeExampleComponent,\n    AutocompletionDemoComponent,\n    FormsComponent,\n    SmallFormExampleComponent,\n    LargeFormExampleComponent,\n    MauswegeComponent,\n    TastaturbedienbarkeitComponent,\n    DatenstrukturComponent,\n    MentaleModelleComponent,\n    OverflowMenuComponent,\n    SelectDropdownsComponent,\n    DropdownMenuComponent,\n    // Directives\n    DemoStatusDirective,\n  ],\n  providers: [{ provide: SourceCodeService, useClass: WebpackSourceCodeService }],\n})\nexport class StyleguideModule {}\n","export default \"<!-- [showIcons] replace toggler.showIcons with static values \\\"true\\\" or \\\"false\\\" -->\\n<app-nav-menu [showIcons]=\\\"toggler.showIcons\\\">\\n  <app-nav-item\\n    icon=\\\"fas fa-home\\\"\\n    label=\\\"Styleguide\\\"\\n    url=\\\"styleguide/welcome\\\"\\n    [startExpanded]=\\\"true\\\"></app-nav-item>\\n  <app-nav-item label=\\\"Basics\\\" icon=\\\"fas fa-layer-group\\\">\\n    <app-nav-item label=\\\"Colors\\\" url=\\\"styleguide/basics/colors\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Icons\\\" url=\\\"styleguide/basics/icons\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Logo\\\" url=\\\"styleguide/basics/logo\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Typographie\\\" url=\\\"styleguide/basics/typography\\\"></app-nav-item>\\n  </app-nav-item>\\n  <app-nav-item label=\\\"Layout\\\" url=\\\"styleguide/layout\\\" icon=\\\"far fa-window-maximize\\\">\\n    <app-nav-item label=\\\"Grid\\\" url=\\\"styleguide/layout/grid\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Header\\\" url=\\\"styleguide/layout/header\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Navigation\\\" url=\\\"styleguide/layout/navigation\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Function Bar\\\" url=\\\"styleguide/layout/functionbar\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Breadcrumbs\\\" url=\\\"styleguide/layout/breadcrumbs\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Action Bar\\\" url=\\\"styleguide/layout/actionbar\\\"></app-nav-item>\\n  </app-nav-item>\\n  <app-nav-item label=\\\"UI Elements\\\" icon=\\\"fas fa-cubes\\\">\\n    <app-nav-item label=\\\"Forms\\\" url=\\\"styleguide/ui-elements/forms\\\">\\n      <app-nav-item\\n        label=\\\"Small Form Example\\\"\\n        url=\\\"styleguide/ui-elements/forms/small-form-example\\\"></app-nav-item>\\n      <app-nav-item\\n        label=\\\"Large Form Example\\\"\\n        url=\\\"styleguide/ui-elements/forms/large-form-example\\\"></app-nav-item>\\n      <app-nav-item\\n        label=\\\"Select Dropdowns\\\"\\n        url=\\\"styleguide/ui-elements/forms/select-dropdowns\\\"></app-nav-item>\\n      <app-nav-item\\n        label=\\\"Autocompletion\\\"\\n        url=\\\"styleguide/ui-elements/forms/autocompletion\\\"></app-nav-item>\\n      <app-nav-item label=\\\"Datepicker\\\" url=\\\"styleguide/ui-elements/forms/datepicker\\\"></app-nav-item>\\n    </app-nav-item>\\n    <app-nav-item label=\\\"Alerts\\\" url=\\\"styleguide/ui-elements/alerts\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Badges\\\" url=\\\"styleguide/ui-elements/badges\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Buttons\\\" url=\\\"styleguide/ui-elements/buttons\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Data Tables\\\" url=\\\"styleguide/ui-elements/datatables\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Dividers\\\" url=\\\"styleguide/ui-elements/dividers\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Drop-Down Menu\\\" url=\\\"styleguide/ui-elements/dropdown-menu\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Links\\\" url=\\\"styleguide/ui-elements/links\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Modal Dialog\\\" url=\\\"styleguide/ui-elements/modal-dialog\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Overflow Menu\\\" url=\\\"styleguide/ui-elements/overflow-menu\\\"></app-nav-item>\\n    <app-nav-item\\n      label=\\\"Progress Indicators\\\"\\n      url=\\\"styleguide/ui-elements/progress-indicators\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Tabs\\\" url=\\\"styleguide/ui-elements/tabs\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Tooltips\\\" url=\\\"styleguide/ui-elements/tooltips\\\"></app-nav-item>\\n  </app-nav-item>\\n  <app-nav-item label=\\\"Usability\\\" icon=\\\"fas fa-hand-sparkles\\\">\\n    <app-nav-item label=\\\"Mauswege\\\" url=\\\"styleguide/usability/mauswege\\\"></app-nav-item>\\n    <app-nav-item\\n      label=\\\"Tastaturbedienbarkeit\\\"\\n      url=\\\"styleguide/usability/tastaturbedienbarkeit\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Datenstruktur\\\" url=\\\"styleguide/usability/datenstruktur\\\"></app-nav-item>\\n    <app-nav-item label=\\\"Mentale Modelle\\\" url=\\\"styleguide/usability/mentale-modelle\\\"></app-nav-item>\\n  </app-nav-item>\\n</app-nav-menu>\\n\";","export default \"import { Component } from '@angular/core';\\nimport { IconToggleService } from './icon-toggle.service';\\n\\n@Component({\\n  selector: 'app-nav',\\n  templateUrl: './app-nav.component.html',\\n})\\nexport class AppNavComponent {\\n  constructor(public toggler: IconToggleService) {}\\n}\\n\";","export default \"<nav\\n  id=\\\"header\\\"\\n  class=\\\"navbar navbar-expand navbar-dark bg-dark p-0 fixed-top\\\"\\n  style=\\\"background-color: #e3f2fd\\\"\\n  [attr.aria-label]=\\\"'Header'\\\">\\n  <button\\n    class=\\\"btn btn-dark menu-toggler-btn mr-2\\\"\\n    (click)=\\\"navigationService.toggleNavigation()\\\"\\n    [attr.aria-label]=\\\"navigationService.navigationToggleText\\\">\\n    <span class=\\\"fas fa-bars fa-fw fa-lg\\\"></span>\\n  </button>\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/styleguide/welcome\\\">\\n    <img src=\\\"assets/logo.png\\\" class=\\\"applogo ml-1 mr-2\\\" alt=\\\"\\\" />\\n    Bedag Angular Styleguide\\n  </a>\\n</nav>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <nav id=\\\"navigation\\\" [attr.aria-label]=\\\"'Navigation'\\\">\\n    <app-nav></app-nav>\\n  </nav>\\n\\n  <main id=\\\"content\\\" role=\\\"main\\\">\\n    <app-alert-list id=\\\"alert-wrapper\\\"></app-alert-list>\\n\\n    <div [style.max-width]=\\\"maxContentWidth\\\">\\n      <router-outlet (activate)=\\\"onRouterOutletActivate($event)\\\"></router-outlet>\\n    </div>\\n  </main>\\n</div>\\n\";","export default \"import { Component } from '@angular/core';\\nimport { isCustomMaxWidthComponent } from './bedag-components/layout/custom-max-width-component';\\nimport { TitleTagService } from './styleguide/demo-utils/routing/title-tag.service';\\nimport { LanguageService } from './bedag-components/i18n/language.service';\\nimport { NavigationService } from './bedag-components/navigation/navigation.service';\\n\\n@Component({\\n  selector: 'app-root',\\n  templateUrl: './app.component.html',\\n})\\nexport class AppComponent {\\n  maxContentWidth = '70em';\\n\\n  constructor(\\n    private readonly titleTagService: TitleTagService,\\n    private readonly languageService: LanguageService,\\n    public readonly navigationService: NavigationService\\n  ) {\\n    this.titleTagService.init('Bedag Angular Styleguide');\\n    this.languageService.currentLanguage = 'de';\\n  }\\n\\n  /**\\n   * Configure Standard width of the content area. It can be overwritten in individual components.\\n   */\\n  onRouterOutletActivate(component: unknown): void {\\n    if (isCustomMaxWidthComponent(component)) {\\n      this.maxContentWidth = component.maxWidth;\\n    } else {\\n      this.maxContentWidth = '70em';\\n    }\\n  }\\n}\\n\";","export default \"import { Component } from '@angular/core';\\nimport { AlertHolderDirective } from './alert-holder.directive';\\n\\n/**\\n * Displays the alerts of the enclosing AlertHolder.\\n */\\n@Component({\\n  selector: 'app-alert-list',\\n  template: `\\n    <app-alert\\n      *ngFor=\\\"let alert of alertHolder.alerts\\\"\\n      [type]=\\\"alert.type\\\"\\n      (dismiss)=\\\"alertHolder.dismiss(alert)\\\">\\n      {{ alert.message }}\\n    </app-alert>\\n  `,\\n})\\nexport class AlertListComponent {\\n  constructor(public alertHolder: AlertHolderDirective) {}\\n}\\n\";","export default \"import { Component, EventEmitter, Input, Output } from '@angular/core';\\nimport { LanguageService } from '../i18n/language.service';\\n\\n@Component({\\n  selector: 'app-alert',\\n  template: `\\n    <div\\n      class=\\\"alert fade alert-{{ type }} clearfix\\\"\\n      [class.alert-dismissible]=\\\"dismissible\\\"\\n      [class.show]=\\\"!fading\\\"\\n      role=\\\"alert\\\">\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"close\\\"\\n        [attr.aria-label]=\\\"closeButtonLabels[this.languageService.currentLanguage]\\\"\\n        (click)=\\\"fading = true; dismiss.emit()\\\"\\n        *ngIf=\\\"dismissible\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n      <span class=\\\"fas {{ icons[type] }} mr-2\\\"></span>\\n      <ng-content></ng-content>\\n    </div>\\n  `,\\n})\\nexport class AlertComponent {\\n  @Input()\\n  type!: string;\\n\\n  @Output()\\n  dismiss = new EventEmitter<void>();\\n\\n  constructor(readonly languageService: LanguageService) {}\\n\\n  get dismissible(): boolean {\\n    return this.dismiss.observed;\\n  }\\n\\n  fading = false;\\n\\n  icons: { [index: string]: string } = {\\n    danger: 'fa-exclamation-circle',\\n    warning: 'fa-exclamation-triangle',\\n    success: 'fa-check-circle',\\n    info: 'fa-info-circle',\\n  };\\n\\n  closeButtonLabels: { [index: string]: string } = {\\n    en: 'Close',\\n    de: 'Schliessen',\\n    fr: 'Fermer',\\n    it: 'Chiudere',\\n  };\\n}\\n\";","export default \"<div class=\\\"input-group\\\">\\n  <input\\n    [id]=\\\"id\\\"\\n    class=\\\"form-control\\\"\\n    placeholder=\\\"TT.MM.JJJJ\\\"\\n    [(ngModel)]=\\\"value\\\"\\n    (ngModelChange)=\\\"onChange(value)\\\"\\n    [footerTemplate]=\\\"footerTemplate\\\"\\n    ngbDatepicker\\n    #d=\\\"ngbDatepicker\\\"\\n    [positionTarget]=\\\"dateButton\\\" />\\n  <div class=\\\"input-group-append\\\">\\n    <button #dateButton class=\\\"btn btn-light calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n      <span class=\\\"far fa-calendar-alt\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n<ng-template #footerTemplate>\\n  <hr class=\\\"my-0\\\" />\\n  <button class=\\\"btn btn-primary btn-sm m-2 float-left\\\" (click)=\\\"selectToday()\\\">Heute</button>\\n  <button class=\\\"btn btn-outline-primary btn-sm m-2 float-right\\\" (click)=\\\"d.close()\\\">\\n    Schliessen\\n  </button>\\n</ng-template>\\n\";","export default \"import { Component, forwardRef, HostBinding, Input, ViewChild } from '@angular/core';\\nimport {\\n  NgbCalendar,\\n  NgbDateAdapter,\\n  NgbDateParserFormatter,\\n  NgbDatepickerI18n,\\n  NgbInputDatepicker,\\n} from '@ng-bootstrap/ng-bootstrap';\\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\\nimport { DatepickerI18n } from './datepicker.i18n';\\nimport { SwissDateParserFormatter } from './swiss-date-parser-formatter';\\nimport { IsoDateAdapter } from './iso-date-adapter';\\n\\n/**\\n * @typeParam T - defines the type used by the backend. As long as you use the IsoDateAdapter, this will be <string>.\\n */\\n@Component({\\n  selector: 'app-datepicker',\\n  templateUrl: './datepicker.component.html',\\n  providers: [\\n    {\\n      provide: NG_VALUE_ACCESSOR,\\n      useExisting: forwardRef(() => DatepickerComponent),\\n      multi: true,\\n    },\\n    {\\n      provide: NgbDateAdapter,\\n      useClass: IsoDateAdapter,\\n    },\\n    {\\n      provide: NgbDateParserFormatter,\\n      useClass: SwissDateParserFormatter,\\n    },\\n    {\\n      provide: NgbDatepickerI18n,\\n      useClass: DatepickerI18n,\\n    },\\n  ],\\n})\\nexport class DatepickerComponent<T> implements ControlValueAccessor {\\n  @HostBinding('attr.id')\\n  externalId: string | null = '';\\n\\n  @ViewChild(NgbInputDatepicker, { static: true })\\n  datepicker!: NgbInputDatepicker;\\n\\n  @ViewChild('dateButton')\\n  button!: HTMLButtonElement;\\n\\n  private _value!: T | null;\\n\\n  public get value(): T | null {\\n    return this._value;\\n  }\\n\\n  public set value(v: T | null) {\\n    this._value = v;\\n    this.onChange(this._value);\\n    this.onTouched();\\n  }\\n\\n  private _id = '';\\n\\n  @Input()\\n  set id(value: string) {\\n    this._id = value;\\n    this.externalId = null;\\n  }\\n\\n  get id(): string {\\n    return this._id;\\n  }\\n\\n  constructor(\\n    private readonly calendar: NgbCalendar,\\n    private readonly adapter: NgbDateAdapter<T>\\n  ) {}\\n\\n  selectToday(): void {\\n    const today = this.calendar.getToday();\\n    this.value = this.adapter.toModel(today);\\n    this.datepicker.navigateTo(today);\\n  }\\n\\n  /**\\n   * Empty listener, to be overwritten by 'registerOnChange'\\n   */\\n  onChange: (date: T | null) => void = () => undefined;\\n  /**\\n   * Empty listener, to be overwritten by 'registerOnTouched'\\n   */\\n  onTouched: () => void = () => undefined;\\n\\n  registerOnChange(fn: (date: T | null) => void): void {\\n    this.onChange = fn;\\n  }\\n\\n  registerOnTouched(fn: () => void): void {\\n    this.onTouched = fn;\\n  }\\n\\n  setDisabledState(isDisabled: boolean): void {\\n    this.datepicker.disabled = isDisabled;\\n    this.button.disabled = isDisabled;\\n  }\\n\\n  writeValue(obj: T): void {\\n    this.value = obj;\\n    this.onChange(this.value);\\n  }\\n}\\n\";","export default \"import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\\nimport { Router } from '@angular/router';\\n\\n@Component({\\n  selector: 'app-functionbar-item',\\n  template: `\\n    <li class=\\\"nav-item\\\">\\n      <div ngbTooltip=\\\"{{ tooltip }}\\\" placement=\\\"bottom\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-light btn-functionbar btn-lg nav-item\\\"\\n          [attr.aria-label]=\\\"label ? null : tooltip\\\"\\n          [disabled]=\\\"disabled\\\"\\n          (click)=\\\"onclick($event)\\\">\\n          <span *ngIf=\\\"icon\\\" class=\\\"{{ icon }} fa-fw\\\" aria-hidden=\\\"true\\\"></span>\\n          <small *ngIf=\\\"label\\\">{{ label }}</small>\\n        </button>\\n      </div>\\n    </li>\\n  `,\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class FunctionbarItemComponent {\\n  @Input() routerLink!: string;\\n  @Input() icon!: string;\\n  @Input() tooltip!: string;\\n  @Input() label!: string;\\n\\n  @Input() disabled = false;\\n\\n  @Output() itemClicked = new EventEmitter<void>();\\n\\n  constructor(private readonly router: Router) {}\\n\\n  onclick(event: MouseEvent): void {\\n    this.itemClicked.emit();\\n    if (this.routerLink) {\\n      void this.router.navigate([this.routerLink]);\\n    }\\n    event.stopPropagation();\\n    // the (click) subscribers have also subscribed to the DOM event, and we don't want them to be invoked twice ...\\n  }\\n}\\n\";","export default \"<div id=\\\"functionbarcontainer\\\">\\n  <div id=\\\"functionbar\\\" class=\\\"navbar navbar-expand navbar-light bg-light p-0\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-functionbar',\\n  templateUrl: './functionbar.component.html',\\n  styleUrls: ['./functionbar.component.scss'],\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class FunctionbarComponent {}\\n\";","export default \"export interface CustomMaxWidthComponent {\\n  maxWidth: string;\\n}\\n\\nexport function isCustomMaxWidthComponent(\\n  component: unknown\\n): component is CustomMaxWidthComponent {\\n  return component != null && component instanceof Object && 'maxWidth' in component;\\n}\\n\";","export default \"<!--\\n Sorry for the duplicated code, but I didn't find a better way:\\n * angular does not support conditional use of directives, and if the routerLink is present it overwrites\\n   the href even if the link is undefined, \\\"\\\" or []\\n * routerLink must be applied directly on an <a> tag to render a href, so we can't externalize the visual\\n   part into a separate component\\n-->\\n<a\\n  *ngIf=\\\"href\\\"\\n  [href]=\\\"href\\\"\\n  [attr.target]=\\\"target\\\"\\n  [ngClass]=\\\"classes\\\"\\n  (click)=\\\"click()\\\"\\n  class=\\\"vertical-menu-item\\\"\\n  [class.main]=\\\"!parent\\\"\\n  [class.heading]=\\\"children\\\">\\n  <span class=\\\"{{ icon }} fa-fw nav-item-icon\\\" aria-hidden=\\\"true\\\"></span>\\n  <span class=\\\"text-truncate mr-auto icon-margin\\\">{{ label }}</span>\\n  <span *ngIf=\\\"children\\\" class=\\\"nav-item-icon-container\\\" (click)=\\\"toggleExpanded($event)\\\">\\n    <span class=\\\"fas fa-chevron-right fa-fw nav-item-toggle-icon\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</a>\\n\\n<a\\n  *ngIf=\\\"url\\\"\\n  routerLink=\\\"{{ url }}\\\"\\n  [target]=\\\"target\\\"\\n  [ngClass]=\\\"classes\\\"\\n  (click)=\\\"click()\\\"\\n  class=\\\"vertical-menu-item\\\"\\n  [class.main]=\\\"!parent\\\"\\n  [class.heading]=\\\"children\\\">\\n  <span class=\\\"{{ icon }} fa-fw nav-item-icon\\\" aria-hidden=\\\"true\\\"></span>\\n  <span class=\\\"text-truncate mr-auto icon-margin\\\">{{ label }}</span>\\n  <span *ngIf=\\\"children\\\" class=\\\"nav-item-icon-container\\\" (click)=\\\"toggleExpanded($event)\\\">\\n    <span class=\\\"fas fa-chevron-right fa-fw nav-item-toggle-icon\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</a>\\n\\n<a\\n  *ngIf=\\\"!url && !href\\\"\\n  [ngClass]=\\\"classes\\\"\\n  href=\\\"#\\\"\\n  (click)=\\\"click()\\\"\\n  class=\\\"vertical-menu-item\\\"\\n  [class.main]=\\\"!parent\\\"\\n  [class.heading]=\\\"children\\\">\\n  <span class=\\\"{{ icon }} fa-fw nav-item-icon\\\" aria-hidden=\\\"true\\\"></span>\\n  <span class=\\\"text-truncate mr-auto icon-margin\\\">{{ label }}</span>\\n  <span *ngIf=\\\"children\\\" class=\\\"nav-item-icon-container\\\" (click)=\\\"toggleExpanded($event)\\\">\\n    <span class=\\\"fas fa-chevron-right fa-fw nav-item-toggle-icon\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</a>\\n\\n<div class=\\\"heading-children\\\" [ngClass]=\\\"classes\\\" *ngIf=\\\"children\\\">\\n  <ng-content></ng-content>\\n</div>\\n\";","export default \"import { filter, startWith, takeUntil } from 'rxjs/operators';\\nimport {\\n  AfterContentInit,\\n  Component,\\n  ContentChildren,\\n  HostBinding,\\n  Input,\\n  Optional,\\n  QueryList,\\n  SkipSelf,\\n} from '@angular/core';\\n\\nimport { NavigationEnd, Router } from '@angular/router';\\nimport { RxjsSubscriber } from '../utils/rxjs-subscriber';\\nimport { NavMenuComponent } from './nav-menu.component';\\nimport { NavigationService } from './navigation.service';\\n\\n@Component({\\n  selector: 'app-nav-item',\\n  templateUrl: 'nav-item.component.html',\\n})\\nexport class NavItemComponent extends RxjsSubscriber implements AfterContentInit {\\n  @HostBinding('class') class = 'nav-item';\\n\\n  @Input() target!: string; // specifies the window or tab the link should open in. defaults to the current window/tab.\\n  @Input() href!: string; // external links (to other websites)\\n  @Input() url!: string; // internal links (within this app)\\n\\n  @Input() label!: string;\\n  @Input() icon!: string;\\n  @Input() startExpanded = false;\\n\\n  @ContentChildren(NavItemComponent, { descendants: false })\\n  childNodes!: QueryList<NavItemComponent>;\\n\\n  children = false;\\n\\n  level: number;\\n\\n  isExpanded = false;\\n  isSelected = false;\\n  classes!: { [index: string]: boolean };\\n\\n  constructor(\\n    private readonly navigation: NavMenuComponent,\\n    private readonly router: Router,\\n    @Optional() @SkipSelf() public readonly parent: NavItemComponent,\\n    private readonly navigationService: NavigationService\\n  ) {\\n    super();\\n    this.level = (parent ? parent.level : 0) + 1;\\n  }\\n\\n  ngAfterContentInit(): void {\\n    this.childNodes.changes.pipe(startWith('')).subscribe(() => {\\n      this.children = this.childNodes.some((x) => x !== this); // the content query also matches `this` ...\\n    });\\n\\n    this.router.events\\n      .pipe(\\n        filter((e) => e instanceof NavigationEnd),\\n        startWith(null as unknown),\\n        takeUntil(this.destroyed)\\n      )\\n      .subscribe(() => {\\n        this.isSelected =\\n          !!this.url &&\\n          this.router.isActive(this.url, {\\n            paths: 'exact',\\n            queryParams: 'exact',\\n            fragment: 'ignored',\\n            matrixParams: 'ignored',\\n          });\\n        this.isExpanded =\\n          this.startExpanded ||\\n          this.isExpanded ||\\n          (!!this.url &&\\n            this.router.isActive(this.url, {\\n              paths: 'subset',\\n              queryParams: 'subset',\\n              fragment: 'ignored',\\n              matrixParams: 'ignored',\\n            })) ||\\n          this.hasSelectedChild();\\n        this.updateClasses();\\n      });\\n  }\\n\\n  toggleExpanded(event: Event | null): boolean {\\n    this.isExpanded = !this.isExpanded;\\n    this.startExpanded = false;\\n    this.updateClasses();\\n    if (event != null) {\\n      event.stopPropagation();\\n    }\\n    return false;\\n  }\\n\\n  click(): boolean {\\n    if (this.children) {\\n      this.toggleExpanded(null);\\n      if (\\n        this.navigationService.isMobile() &&\\n        this.url &&\\n        !this.router.isActive(this.url, {\\n          paths: 'subset',\\n          queryParams: 'subset',\\n          fragment: 'ignored',\\n          matrixParams: 'ignored',\\n        })\\n      ) {\\n        this.navigationService.toggleNavigation();\\n        return true;\\n      } else {\\n        return false;\\n      }\\n    } else {\\n      if (this.navigationService.isMobile()) {\\n        this.navigationService.toggleNavigation();\\n      }\\n      return true;\\n    }\\n  }\\n\\n  updateClasses(): void {\\n    this.classes = {\\n      [`level-${this.level}`]: true,\\n      collapsed: !this.isExpanded,\\n      expanded: this.isExpanded,\\n      selected: this.isSelected,\\n    };\\n  }\\n\\n  hasSelectedChild(): boolean {\\n    return (\\n      !!this.childNodes &&\\n      (this.childNodes.some((c) => c.isSelected) ||\\n        this.childNodes.some((c) => c !== this && c.hasSelectedChild()))\\n    );\\n  }\\n}\\n\";","export default \"import { Component, HostBinding, Input } from '@angular/core';\\n\\n/**\\n * Wraps app-nav-items and applies the appropriate styling.\\n */\\n@Component({\\n  selector: 'app-nav-menu',\\n  template: '<ng-content></ng-content>',\\n})\\nexport class NavMenuComponent {\\n  @Input()\\n  showIcons = true;\\n\\n  @HostBinding('id') id = 'navmenu';\\n\\n  @HostBinding('class') get class(): string {\\n    return this.showIcons ? 'flex-column w-100' : 'flex-column w-100 no-icons';\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Colors</h1>\\n\\n<p class=\\\"lead\\\">\\n  Farben haben zwei Aufgaben: die Kommunikation der Marke und das Auge visuell auf dem Bildschirm zu\\n  führen. Mit Signalfarben kann man Akzente setzen oder etwas in den Hintergrund rücken. Die Marke\\n  Bedag kann kommuniziert werden, indem ein Farbschema in den Bedag-CI Farbtönen eingesetzt wird.\\n</p>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Wir nutzen die\\n      <a class=\\\"external\\\" href=\\\"http://getbootstrap.com/docs/4.5/utilities/colors/\\\" target=\\\"_blank\\\">\\n        semantischen CSS-Klassen von Bootstrap\\n      </a>\\n      , um mit Signalfarben Botschaften visuell zu unterstützen. Beim Bedag Custom CI-Farbschema\\n      sind diese entsprechend angepasst.\\n    </p>\\n    <p>\\n      Farbschemas können durch den einfachen Austausch eines CSS-Imports im\\n      <code>_bedag-variables.scss</code>\\n      ausgewechselt werden. Auf einen Runtime-Theme-Selector wurde verzichtet, um die\\n      Code-Komplexität zu minimieren.\\n    </p>\\n  </div>\\n</div>\\n<h2 class=\\\"mt-5\\\">Signalfarben</h2>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row mb-1\\\">\\n    <div class=\\\"col-md-6 p-3 mb-2 bg-info text-white\\\">Info Badge / .bg-info</div>\\n    <div class=\\\"col-md-6 p-3 mb-2 alert-info\\\">Info alert</div>\\n  </div>\\n  <div class=\\\"row mb-1\\\">\\n    <div class=\\\"col-md-6 p-3 mb-2 bg-success text-white\\\">Success Badge / .bg-success</div>\\n    <div class=\\\"col-md-6 p-3 mb-2 alert-success\\\">Success Alert</div>\\n  </div>\\n  <div class=\\\"row mb-1\\\">\\n    <div class=\\\"col-md-6 p-3 mb-2 bg-warning text-dark\\\">Warning Badge / .bg-warning</div>\\n    <div class=\\\"col-md-6 p-3 mb-2 alert-warning\\\">Warning Alert</div>\\n  </div>\\n  <div class=\\\"row mb-1\\\">\\n    <div class=\\\"col-md-6 p-3 mb-2 bg-danger text-white\\\">Danger Badge / .bg-danger</div>\\n    <div class=\\\"col-md-6 p-3 mb-2 alert-danger\\\">Danger Alert</div>\\n  </div>\\n</div>\\n\\n<p class=\\\"mt-4\\\">\\n  Die Signalfarben\\n  <code>.bg-xxx</code>\\n  sind Basisfarben, die von Bootstrap z.B. für die Alerts modifiziert werden. Beispiele für die\\n  Verwendung der Signalfarben:\\n  <a routerLink=\\\"/styleguide/ui-elements/alerts\\\" class=\\\"highlight\\\">Alerts</a>\\n  und\\n  <a routerLink=\\\"/styleguide/ui-elements/badges\\\" class=\\\"highlight\\\">Badges.</a>\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Farbpalette</h2>\\n<p>\\n  Um die visuelle Konsistenz der Applikation zu gewährleisten, dürfen nicht zu viele\\n  unterschiedliche Farben eingesetzt werden. Wenn immer möglich soll die Farbpalette des aktiven\\n  Color Themes verwendet werden.\\n  <br />\\n  Eigene Elemente sollen immer mit Bootstrap-Klassen und Sass-Variablen eingefärbt werden und nicht\\n  Hex- oder RGB-Farbcodes.\\n  <br />\\n  Damit die Sass-Variablen in lokalen Angular Component Styles aufgelöst werden können, muss das\\n  <code>_bedag-variables.scss</code>\\n  Sass-Partial importiert werden (Siehe Code-Beispiel unten).\\n</p>\\n<div class=\\\"row mb-4\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"p-3 mb-2 bg-dark text-white h-100\\\">\\n      <div>CSS class:</div>\\n      <div><strong>.bg-dark</strong></div>\\n      <div>Sass Variable:</div>\\n      <div><strong>$dark</strong></div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"p-3 mb-2 bg-primary text-white h-100\\\">\\n      <div>CSS class:</div>\\n      <div><strong>.bg-primary</strong></div>\\n      <div>Sass Variable:</div>\\n      <div><strong>$primary</strong></div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"p-3 mb-2 bg-light h-100\\\">\\n      <div>CSS class:</div>\\n      <div><strong>.bg-light</strong></div>\\n      <div>Sass Variable:</div>\\n      <div><strong>$light</strong></div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"p-3 mb-2 text-primary h-100\\\">\\n      <div>CSS class:</div>\\n      <div><strong>.text-primary</strong></div>\\n      <div>Sass Variable:</div>\\n      <div><strong>$primary</strong></div>\\n    </div>\\n  </div>\\n</div>\\n<p>\\n  Die Sass-Variablen können modifiziert werden um hellere oder dunklere Varianten der Farben zu\\n  erzeugen. Die nachfolgenden Beispiele sind Varianten der Primärfarbe (\\n  <code>$primary</code>\\n  ) mit unterschiedlicher Opacity, die von den Elementen dieses Styleguides verwendet werden:\\n  <br />\\n  Auch hier ist es wichtig, sich auf einige wenige Varianten zu beschränken und diese mit eigenen\\n  CSS-Klassen applikationsweit durchgehend einzusetzen.\\n</p>\\n<div class=\\\"row mb-2\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"p-3 mb-2 bg-hover-light h-100\\\">\\n      <div>\\n        <strong>Opacity 5%</strong>\\n        <br />\\n        CSS code:\\n      </div>\\n      <code>background-color: rgba($primary, .05);</code>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"p-3 mb-2 bg-hover-dark h-100\\\">\\n      <div>\\n        <strong>Opacity 10%</strong>\\n        <br />\\n        CSS code:\\n      </div>\\n      <code>background-color: rgba($primary, .1);</code>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"p-3 mb-2 bg-selected h-100\\\">\\n      <div>\\n        <strong>Opacity 15%</strong>\\n        <br />\\n        CSS code:\\n      </div>\\n      <code>background-color: rgba($primary, .15);</code>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Beispiel component.scss\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <pre class=\\\"language-scss\\\">\\n      <code [innerHTML]='highlighted_scss()'>\\n      </code>\\n    </pre>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\" id=\\\"color_themes\\\">Color Themes</h2>\\n<p>\\n  Mit Themes kann das Branding der Bedag oder des Kunden in der Fachapplikation kommuniziert werden.\\n  Dazu stehen im Styleguide zwei unterschiedliche Color Themes zur Verfügung. Eigene Schemas können\\n  implementiert werden, indem das CSS im Theme Ordner customized wird.\\n  <br />\\n  Es ist wichtig, sich zu Beginn für ein Farbschema zu entscheiden und dieses dann durchgehend zu\\n  verwenden.\\n</p>\\n\\n<h3 class=\\\"mt-5\\\">Classic Theme</h3>\\n<img\\n  src=\\\"assets/bedag-classic-colortheme-screenshot.png\\\"\\n  alt=\\\"Bedag Classic Theme\\\"\\n  class=\\\"img-fluid\\\" />\\n<p>\\n  Das Classic Theme ist ein neutrales, farbarmes Schema. Es ist der Default, wenn kein anderes\\n  Schema importiert wird. Im\\n  <a class=\\\"external\\\" href=\\\"https://bedag-starter.cloud.se.bedag.ch/\\\" target=\\\"_blank\\\">\\n    Bedag Starter Anwendungsbeispiel\\n  </a>\\n  ist standardmässig das Classic Theme konfiguriert.\\n  <br />\\n  Wir verwenden dieses Theme für Kunden-Fachapplikationen, wenn keine spezifischen Anforderungen zu\\n  den Farben vorliegen.\\n</p>\\n\\n<h3 class=\\\"mt-5\\\">Bedag Theme - Violett</h3>\\n<img\\n  src=\\\"assets/bedag-ci-colortheme-screenshot.png\\\"\\n  alt=\\\"Bedag Color Theme - Violett\\\"\\n  class=\\\"img-fluid\\\" />\\n<p>\\n  Farbschema in den violetten Farbtönen der Bedag CI Farben. Wir verwenden dieses Theme für interne\\n  Bedag Applikationen.\\n</p>\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark my-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Bei Verwendung eines Bedag-CI oder eigenen Farbschemas sollte man sich bewusst sein, dass\\n    sämtliche künftig eingesetzten Angular-Drittkomponenten manuell an das Schema angepasst werden\\n    müssen.\\n    <br />\\n    Wer diesen Zusatzaufwand nicht auf sich nehmen möchte, ist mit dem Classic-Schema in den\\n    Standard Bootstrap Farben besser bedient.\\n  </div>\\n</div>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\nimport * as Prism from 'prismjs';\\nimport 'prismjs/components/prism-scss';\\n\\n@Component({\\n  selector: 'app-colors',\\n  templateUrl: './colors.component.html',\\n  styleUrls: ['./colors.component.scss'],\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class ColorsComponent {\\n  highlighted_scss(): string {\\n    return Prism.highlight(\\n      `\\n@import \\\"src/app/bedag-styles/bedag-variables\\\";\\n\\n.bg-hover-light {\\n  background-color: rgba($primary, .05);\\n}\\n\\n.bg-hover-dark {\\n  background-color: rgba($primary, .1);\\n}\\n\\n.bg-selected {\\n  background-color: rgba($primary, .15);\\n}\\n   `,\\n      Prism.languages['scss'],\\n      'scss'\\n    );\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Icons</h1>\\n\\n<p class=\\\"lead\\\">\\n  Icons sind kleine Bilder oder Piktogramme, die für Aktionen oder Themen stehen. Icons sollen\\n  möglichst einfach gestaltet und selbsterklärend sein.\\n  <br />\\n  Bereits bei der Lupe wird klar, wie wichtig auch der Kontext ist. Lupe unter Bild = Vergrösserung,\\n  Lupe in Eingabefeld = Suche.\\n  <br />\\n  Icons helfen die Inhalte schneller zu verstehen und erhöhen dadurch die Bedienbarkeit.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Bei gelernten und selbsterklärenden Elementen, um Platz zu sparen, z.B. Icon für Drucker, Brief,\\n    Teilen\\n  </li>\\n  <li>\\n    Bei komplexeren Themen, empfehlen wir die Kombination mit Text. Die Icons helfen dem Auge, sich\\n    schneller zu orientieren, der Text liefert die zusätzliche Sicherheit.\\n  </li>\\n  <li>\\n    In allen unseren Applikationen soll dasselbe Icon für dieselbe Funktionalität verwendet werden.\\n    Siehe dazu das Bedag Standard Icon Set unten auf dieser Seite.\\n  </li>\\n  <li>\\n    Icons ohne Text müssen mit einem\\n    <a routerLink=\\\"/styleguide/ui-elements/tooltips\\\" class=\\\"highlight\\\">Tooltip</a>\\n    deren Funktionalität erklären:\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-outline-primary btn-sm\\\"\\n      placement=\\\"top\\\"\\n      ngbTooltip=\\\"Synchronisieren\\\">\\n      <span class=\\\"fas fa-sync-alt fa-fw\\\"></span>\\n    </button>\\n  </li>\\n  <li>\\n    Je mehr unbekannte Icons eingesetzt werden, desto mehr Schulung und Erlernen der Applikation ist\\n    erforderlich. Applikationen mit vielen Icons sind für Poweruser und Experten konzipiert.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Komplexe Icons oder Icons, die nicht selbsterklärend sind, nur in Kombination mit Text oder für\\n    Fachapplikationen verwenden.\\n  </li>\\n  <li>\\n    Animierte Icons sind äusserst sparsam einzusetzen. Ein sinnvoller Anwendungsfall sind\\n    <a routerLink=\\\"/styleguide/ui-elements/progress-indicators\\\" class=\\\"highlight\\\">\\n      Progress Indicators\\n    </a>\\n    .\\n  </li>\\n</ul>\\n\\n<h3 class=\\\"mt-5\\\">Verwandte Elemente</h3>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/ui-elements/buttons\\\">Button mit Icon</a></li>\\n  <li><a routerLink=\\\"/styleguide/basics/logo\\\">Logo (Favicon)</a></li>\\n</ul>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Wir verwenden\\n      <a class=\\\"external\\\" href=\\\"https://fontawesome.com/icons?d=gallery&m=free\\\" target=\\\"_blank\\\">\\n        Font Awesome\\n      </a>\\n      , welches eine sehr grosse Auswahl an Icons bereitstellt und nahtlos in Bootstrap integriert\\n      werden kann. Font Awesome ist eine Sammlung von sogenannten Icon-Fonts (Icons als Schrift).\\n      FA-Icons können ganz simpel mit wenig CSS-Code angezeigt werden und wie \\\"normaler\\\" Text\\n      eingefärbt und skaliert werden.\\n    </p>\\n    <p>\\n      Auf der\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://fontawesome.com/how-to-use/on-the-web/referencing-icons/basic-use\\\"\\n        target=\\\"_blank\\\">\\n        Beispiel Seite von Font Awesome\\n      </a>\\n      findet ihr etliche Code- und Verwendungsbeispiele, von der einfachen Einbettung bis zum\\n      Positionieren, Skalieren oder Rotieren von Icons.\\n    </p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Bedag Standard Icon Set</h2>\\n<p>\\n  Damit in allen unseren Applikationen die gleichen Icons für die gleiche Funktionalität stehen,\\n  sollen wenn immer möglich die Icons aus dem Bedag Standard Icon Set verwendet werden. Die Icons\\n  aus diesem Set sollen ausschliesslich für die nachfolgend beschriebenen Funktionen verwendet\\n  werden, damit bei den Benutzern von mehreren Bedag-Applikationen keine Irritationen durch\\n  Mehrdeutigkeit entstehen.\\n</p>\\n\\n<h3 class=\\\"mt-5\\\">Informationen</h3>\\n<app-code-example src=\\\"basics/icons/icons.component.html#information\\\">\\n  <div>\\n    <span class=\\\"fas fa-check-circle text-success mr-2\\\"></span>\\n    Erfolg\\n  </div>\\n  <div>\\n    <span class=\\\"fas fa-info-circle text-info mr-2\\\"></span>\\n    Info\\n  </div>\\n  <div>\\n    <span class=\\\"fas fa-exclamation-triangle text-warning mr-2\\\"></span>\\n    Warnung\\n  </div>\\n  <div>\\n    <span class=\\\"fas fa-exclamation-circle text-danger mr-2\\\"></span>\\n    Gefahr\\n  </div>\\n  <div>\\n    <span class=\\\"fas fas fa-circle-notch fa-spin mr-2\\\"></span>\\n    Bitte warten, Verarbeitung läuft (Durch User ausgelöste Aktion) - Siehe auch\\n    <a routerLink=\\\"/styleguide/ui-elements/progress-indicators\\\" class=\\\"highlight\\\">\\n      Progress Indicators\\n    </a>\\n  </div>\\n  <div>\\n    <span class=\\\"fas fa-spinner fa-pulse mr-2\\\"></span>\\n    Bitte warten, Applikation lädt (z.B. auf Splashscreen)\\n  </div>\\n</app-code-example>\\n\\n<h3 class=\\\"mt-5\\\">Aktionen</h3>\\n<app-code-example src=\\\"basics/icons/icons.component.html#actions\\\">\\n  <div class=\\\"d-flex flex-column\\\">\\n    <div>\\n      <span class=\\\"fas fa-search mr-2\\\"></span>\\n      Suche\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-plus mr-2\\\"></span>\\n      Neues Element hinzufügen\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-pen mr-2\\\"></span>\\n      Element bearbeiten\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-trash-alt mr-2\\\"></span>\\n      Element löschen / Papierkorb anzeigen\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-undo-alt mr-2\\\"></span>\\n      Rückgängig machen / Zurücksetzen\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-cog mr-2\\\"></span>\\n      Einstellungen\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-filter mr-2\\\"></span>\\n      Filtern (Tabelle, Suchresultate, etc.)\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-lock mr-2\\\"></span>\\n      Gesperrt / Sperren\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-lock-open mr-2\\\"></span>\\n      Entsperrt / Entsperren\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-sync-alt mr-2\\\"></span>\\n      Daten synchronisieren\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-print mr-2\\\"></span>\\n      Drucken\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-download mr-2\\\"></span>\\n      Downloaden\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-question-circle mr-2\\\"></span>\\n      Hilfe - Siehe auch\\n      <a routerLink=\\\"/styleguide/layout/header\\\" class=\\\"highlight\\\">Header</a>\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-ellipsis-v fa-fw mr-1\\\"></span>\\n      Overflow-Menu anzeigen\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-eye mr-2\\\"></span>\\n      Versteckte Informationen (z.B. Passwort) anzeigen\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-eye-slash mr-2\\\"></span>\\n      Informationen verstecken\\n    </div>\\n    <div>\\n      <span class=\\\"far fa-comment mr-2\\\"></span>\\n      Kommentar hinterlegen (noch keine Kommentare vorhanden)\\n    </div>\\n    <div>\\n      <span class=\\\"far fa-star mr-2\\\"></span>\\n      Zu Favoriten hinzufügen\\n    </div>\\n    <div>\\n      <span class=\\\"fas fa-star mr-2 text-warning\\\"></span>\\n      Aus Favoriten entfernen\\n    </div>\\n  </div>\\n</app-code-example>\\n\\n<h3 class=\\\"mt-5\\\">Benutzer</h3>\\n<app-code-example src=\\\"basics/icons/icons.component.html#user\\\">\\n  <div>\\n    <span class=\\\"fas fa-user-circle mr-2\\\"></span>\\n    Benutzermenu (eingeloggter User) - Siehe\\n    <a routerLink=\\\"/styleguide/layout/header\\\" class=\\\"highlight\\\">Header</a>\\n  </div>\\n  <div>\\n    <span class=\\\"fas fa-user mr-2\\\"></span>\\n    Benutzer (anderer User)\\n  </div>\\n  <div>\\n    <span class=\\\"fas fa-user-lock mr-2\\\"></span>\\n    Benutzer gesperrt\\n  </div>\\n  <div>\\n    <span class=\\\"fas fa-user-edit mr-2\\\"></span>\\n    Benutzer bearbeiten\\n  </div>\\n  <div>\\n    <span class=\\\"fas fa-user-cog mr-2\\\"></span>\\n    Benutzereinstellungen\\n  </div>\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-loader',\\n  templateUrl: './icons.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class IconsComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Logo</h1>\\n\\n<p class=\\\"lead\\\">\\n  Das Logo ermöglicht dem Benutzer eine schnelle Orientierung, in welcher Applikation er sich\\n  befindet.\\n  <br />\\n  Das Favicon, welches im Browser-Tab angezeigt wird, ermöglicht das schnelle Auffinden der\\n  Applikation bei vielen offenen Tabs.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Das Logo wird immer oben links im Header platziert.</li>\\n  <li>Das Logo ist mit der Startseite der Applikation verlinkt.</li>\\n  <li>Das Favicon ist in der Regel mit dem Logo identisch.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/layout/header\\\">Header</a></li>\\n  <li><a routerLink=\\\"/styleguide/basics/icons\\\">Icons</a></li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Logo</h2>\\n<p>\\n  Für das Design eines Applikationslogos kann\\n  <a href=\\\"mailto:communications@bedag.ch\\\">communications@bedag.ch</a>\\n  angefragt werden.\\n</p>\\n<p>\\n  Es ist wichtig, dass Benutzer auf einen Blick erkennen, in welcher Applikation sie sich befinden.\\n  Damit der Wiedererkennungseffekt am grössten ist, sollte das Logo folgende Eigenschaften\\n  aufweisen:\\n</p>\\n<ul>\\n  <li>\\n    Es soll extra für diesen Zweck angefertigt werden (kein Stock-Logo oder Fontawesome-Icon).\\n  </li>\\n  <li>Es soll schlicht sein, sowohl in Form wie auch in Farbe.</li>\\n  <li>\\n    Bei mehreren zusammengehörigen Applikationen einer Suite ist es sinnvoll mit einem gemeinsames\\n    Basiselement im Logo die Zusammengehörigkeit kennzeichnen. Das kann z.B. ein gemeinsames\\n    grafisches Element sein, oder auch ein gemeinsamer Farbton oder Grafikstil.\\n  </li>\\n  <li>Das Bedag Logo ist nur als Logo für Bedag-interne Applikationen geeignet.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Favicon</h2>\\n<p>\\n  Auch mit dem Favicon sollen die Benutzer auf einen Blick erkennen, um welche Applikation es sich\\n  handelt und bei vielen geöffneten Browser-Tabs die Applikation rasch finden können.\\n  <br />\\n  Das Bedag-Logo allein ist als Favicon nicht geeignet, weder für externe noch für interne\\n  Applikationen. Sobald das Bedag-Logo in mehr als einer Applikation als Favicon eingesetzt wird,\\n  ist ein rasches Auffinden der gesuchten Applikation nicht mehr möglich.\\n</p>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-colors',\\n  templateUrl: './logo.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class LogoComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Typographie</h1>\\n\\n<p class=\\\"lead\\\">\\n  Schrift ist ein zentrales Designelement. Sie unterstützt die visuelle Führung des Nutzers. Durch\\n  unterschiedliche Grösse und Auszeichnung der Schrift, kann der Text und Inhalt einer Seite\\n  hierarchisch gegliedert werden.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    <strong>&lt;h1&gt;</strong>\\n    - Kommt auf jeder Seite nur 1x mal vor. Es ist der Haupttitel. Er fasst den Inhalt kurz und\\n    prägnant zusammen.\\n  </li>\\n  <li>\\n    <strong>Lead Text</strong>\\n    - Falls Lead Text zum Einsatz kommt wird dieser immer direkt unterhalb des h1 platziert. Fasst\\n    den Inhalt der gesamten Seite in wenigen Sätzen zusammen.\\n  </li>\\n  <li>\\n    <strong>&lt;h2&gt;</strong>\\n    - Für Zwischenüberschriften. Sie fassen mentale Einheiten zusammen. Wie beispielsweise\\n    Lieferadresse und Rechnungsadresse.\\n  </li>\\n  <li>\\n    <strong>&lt;h3&gt;</strong>\\n    - Wenn im Paragraph h2 weitere Unterthemen gegliedert werden sollen.\\n  </li>\\n  <li>\\n    <strong>Fliesstext / Content</strong>\\n    - Text im Inhaltsbereich. Er kann Links enthalten.\\n    <a routerLink=\\\"/styleguide/ui-elements/links\\\" class=\\\"highlight\\\">Links</a>\\n  </li>\\n  <li>\\n    <strong>Auflistungen</strong>\\n    - Können im Fliesstext vorkommen. Oft hilft es, keine vollständigen Sätze zu formulieren,\\n    sondern im Aufzählungsstil zu formulieren. Als Standard kommen Bullet Point Lists zum Einsatz.\\n    Die nummerierten Listen sind nur zu verwenden, wenn es einen klaren Bezug zu den Zahlen gibt.\\n    z.B. Wichtigkeit, Schritte im Prozess, Häufigkeit, etc. oder wenn die Aufzählungspunkte\\n    referenzierbar sein müssen.\\n  </li>\\n</ul>\\n\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Für die Gewährleistung der Barrierefreiheit muss auf jeder Seite ein\\n    <strong>&lt;h1&gt;</strong>\\n    vorhanden sein und die Hierarchie der Überschriften muss zwingend eingehalten werden.\\n    <br />\\n    Direkt unter einem\\n    <strong>&lt;h1&gt;</strong>\\n    Element dürfen also nur\\n    <strong>&lt;h2&gt;</strong>\\n    Titel eingesetzt werden.\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Titel sollen nicht zusätzlich formatiert werden (keine andere Farbe, nicht zusätzlich fett oder\\n    kursiv)\\n  </li>\\n  <li>Titel enthalten nie einen Link</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/ui-elements/links\\\">Links</a></li>\\n  <li><a routerLink=\\\"/styleguide/ui-elements/dividers\\\">Dividers</a></li>\\n  <li><a routerLink=\\\"/styleguide/ui-elements/buttons\\\">Buttons</a></li>\\n</ul>\\n\\n<div class=\\\"card my-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    Es wird immer die im CSS vorgegebene Schriftart eingesetzt. Die vorgegebenen Typographie-Stile\\n    sind nicht anzupassen!\\n  </div>\\n</div>\\n\\n<app-code-example src=\\\"basics/typography/typography.component.html#typography\\\">\\n  <h1>Überschrift h1</h1>\\n  <p class=\\\"lead\\\">Lead Text</p>\\n  <h2>Überschrift h2</h2>\\n  <h3>Überschrift h3</h3>\\n  <h4>Überschrift h4</h4>\\n  <p>Fliesstext / Content</p>\\n  <ul>\\n    <li>Bananen</li>\\n    <li>Orangen</li>\\n    <li>Äpfel</li>\\n  </ul>\\n  <ol>\\n    <li>Wichtigster Punkt</li>\\n    <li>Zweitwichtigster Punkt</li>\\n    <li>Drittwichtigster Punkt</li>\\n  </ol>\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './typography.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class TypographyComponent {\\n  showAlert = true;\\n}\\n\";","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header d-flex align-items-center\\\">\\n    <h3 class=\\\"mb-0 mr-auto\\\">Beispiel</h3>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  <div class=\\\"card-footer d-flex align-items-center justify-content-between\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\" (click)=\\\"showOrHide()\\\">\\n      <span class=\\\"fas fa-code\\\" aria-hidden=\\\"true\\\"></span>\\n      Code anzeigen\\n    </button>\\n    <a class=\\\"external\\\" [href]=\\\"getStashUrl()\\\" target=\\\"_blank\\\">In Bitbucket anzeigen</a>\\n  </div>\\n  <div class=\\\"code-content px-3 pb-3\\\" *ngIf=\\\"showCode\\\">\\n    <div class=\\\"mt-2\\\" *ngIf=\\\"files.length > 1; else singleFile\\\">\\n      <nav ngbNav #nav=\\\"ngbNav\\\" class=\\\"nav-tabs mb-3\\\">\\n        <ng-container *ngFor=\\\"let file of files\\\" ngbNavItem>\\n          <a ngbNavLink>{{ file.prettyName }}</a>\\n          <ng-template ngbNavContent>\\n            <pre\\n              class=\\\"language-{{\\n                file.language\\n              }} m-0\\\"><code [innerHtml]=\\\"file.highlightedCode\\\"></code></pre>\\n          </ng-template>\\n        </ng-container>\\n      </nav>\\n      <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n    </div>\\n    <ng-template #singleFile>\\n      <pre\\n        class=\\\"language-{{\\n          files[0].language\\n        }} m-0\\\"><code [innerHtml]=\\\"files[0].highlightedCode\\\"></code></pre>\\n    </ng-template>\\n  </div>\\n</div>\\n<div>\\n  <ng-content select=\\\"app-functionbar\\\"></ng-content>\\n  <ng-content select=\\\"app-actionbar\\\"></ng-content>\\n</div>\\n\";","export default \"import { Component, Input, OnInit } from '@angular/core';\\nimport { SourceCodeService } from '../../source-code.service';\\n\\nimport * as Prism from 'prismjs';\\nimport 'prismjs/components/prism-typescript';\\n\\n@Component({\\n  selector: 'app-code-example',\\n  templateUrl: 'code-example.component.html',\\n})\\nexport class CodeExampleComponent implements OnInit {\\n  static STASH_URL =\\n    'https://stash.se.bedag.ch/projects/ENG-LIBS/repos/bedag-angular-styleguide/browse/frontend/src/app/styleguide';\\n\\n  /**\\n   * Base path for the src file names, relative to src/app/styleguide.\\n   */\\n  @Input()\\n  basePath!: string;\\n  /**\\n   * A comma separated list of source file names to display.\\n   * html file names may contain an anchor, to only display the content of the code-example with that anchor (rather than the entire file)\\n   */\\n  @Input()\\n  src!: string;\\n\\n  showCode = false;\\n  files!: {\\n    prettyName: string;\\n    path: string;\\n    language: string;\\n    code: string;\\n    highlightedCode?: string;\\n  }[];\\n\\n  constructor(private readonly sourceCodeService: SourceCodeService) {}\\n\\n  ngOnInit(): void {\\n    this.files = this.src.split(',').map((s) => {\\n      const [name, anchor] = s.split('#');\\n      const language = name.substring(name.lastIndexOf('.') + 1);\\n      const prettyName = name.substring(name.lastIndexOf('/') + 1);\\n      const path = this.basePath ? this.basePath.concat('/', name) : name;\\n      let code = this.sourceCodeService.sourceCode(path);\\n\\n      if (anchor) {\\n        let i = code.indexOf(s);\\n        if (i === -1) {\\n          throw new Error(`The source file ${name} does not contain the marker ${s}`);\\n        } else if (code.indexOf(s, i + 1) !== -1) {\\n          throw new Error(\\n            `The source file ${name} contains the marker ${s} more than once. Please specify a unique marker`\\n          );\\n        }\\n        i = code.indexOf('\\\\n', i) + 3;\\n\\n        const a = code.indexOf('</app-code-example>', i);\\n        code = code.substring(i, a);\\n        code = code.split('\\\\n  ').join('\\\\n');\\n      }\\n      return { prettyName, path, language, code };\\n    });\\n  }\\n\\n  showOrHide(): void {\\n    this.showCode = !this.showCode;\\n    if (this.showCode) {\\n      for (const file of this.files) {\\n        file.highlightedCode =\\n          file.highlightedCode ||\\n          Prism.highlight(file.code, Prism.languages[file.language], file.language);\\n      }\\n    }\\n  }\\n\\n  getStashUrl(): string {\\n    if (this.basePath) {\\n      return CodeExampleComponent.STASH_URL.concat('/', this.basePath);\\n    } else {\\n      const firstFile = this.files[0];\\n      if (this.files.length === 1) {\\n        return CodeExampleComponent.STASH_URL.concat('/', this.files[0].path);\\n      }\\n      const dir = firstFile.path.substring(0, firstFile.path.lastIndexOf('/') + 1);\\n      return CodeExampleComponent.STASH_URL.concat('/', dir);\\n    }\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Action Bar</h1>\\n\\n<p class=\\\"lead\\\">\\n  Die Action Bar enthält die Buttons für die Funktionen, welche der Benutzer erst nach Verwendung\\n  der Ansicht auslösen will, wie \\\"Löschen\\\" oder \\\"Speichern\\\", und die sich auf den gesamten\\n  Contentbereich beziehen.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Die Action Bar befindet sich immer am unteren Seitenrand.</li>\\n  <li>\\n    Sie bietet nur Aktionen, welche\\n    <em>nach</em>\\n    Verwendung der Ansicht gebraucht werden.\\n  </li>\\n  <li>\\n    Es darf nur ein Primary Button verwendet werden und dieser ist rechts zu platzieren (siehe\\n    <a routerLink=\\\"/styleguide/ui-elements/buttons\\\" class=\\\"highlight\\\">Buttons</a>\\n    ).\\n  </li>\\n  <li>\\n    Sie wird verwendet, wenn der Inhalt auf dem zu erwartendem Eingabegerät mindestens knapp die\\n    ganze Seite einnimmt.\\n    <br />\\n    Sofern nicht explizit anders definiert, gehen wir davon aus, dass Fachapplikationenen auf einem\\n    24\\\"-Bildschirm benutzt werden.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul class=\\\"mb-5\\\">\\n  <li>\\n    Die Action Bar soll nicht verwendet werden, wenn dadurch die\\n    <a routerLink=\\\"/styleguide/usability/mauswege\\\" class=\\\"highlight\\\">Mauswege</a>\\n    zu gross werden.\\n  </li>\\n  <li>\\n    Wenn der Inhalt der Maske im Normalfall nicht den ganzen Bildschirm einnimmt, werden die\\n    Aktionen direkt unterhalb des Inhalts dargestellt.\\n    <br />\\n    Insbesondere bei der Suche soll der Suchen-Button direkt unter dem Formular und oberhalb des\\n    Resultatebereichs angezeigt werden.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements mb-5\\\">\\n  <li><a routerLink=\\\"/styleguide/layout\\\">Layout</a></li>\\n  <li><a routerLink=\\\"/styleguide/ui-elements/buttons\\\">Buttons</a></li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/large-form-example\\\" class=\\\"highlight\\\">\\n      Large Form Example\\n    </a>\\n  </li>\\n  <li><a routerLink=\\\"/styleguide/usability/mauswege\\\">Mauswege</a></li>\\n  <li><a routerLink=\\\"/styleguide/layout/functionbar\\\">Function Bar</a></li>\\n</ul>\\n\\n<app-code-example src=\\\"layout/actionbar/actionbar-demo.component.html#basic\\\">\\n  Siehe unten ...\\n  <div id=\\\"actionbar\\\">\\n    <button class=\\\"btn btn-outline-primary mr-2\\\">Abbrechen</button>\\n    <button class=\\\"btn btn-primary\\\">Speichern</button>\\n  </div>\\n</app-code-example>\\n\\n<p class=\\\"mt-5\\\">\\n  Abstände zwischen den Buttons können mit den\\n  <a href=\\\"https://getbootstrap.com/docs/4.5/utilities/spacing/\\\">margin-utilities von Bootstrap</a>\\n  kontrolliert werden.\\n</p>\\n\";","export default \"import { Component } from '@angular/core';\\n\\n@Component({\\n  templateUrl: 'actionbar-demo.component.html',\\n})\\nexport class ActionbarDemoComponent {}\\n\";","export default \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb mt-2\\\">\\n    <li class=\\\"breadcrumb-item\\\">\\n      <a routerLink=\\\"/styleguide/welcome\\\">Styleguide</a>\\n    </li>\\n    <li class=\\\"breadcrumb-item\\\">\\n      <a routerLink=\\\"/styleguide/layout\\\">Layout</a>\\n    </li>\\n    <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Breadcrumbs</li>\\n  </ol>\\n</nav>\\n\\n<h1 class=\\\"mt-3 mb-4\\\">Breadcrumbs</h1>\\n\\n<p class=\\\"lead\\\">\\n  Ein Breadcrumb (auch Pfadnavigation) zeigt dem Nutzer zusätzlich zur Hauptnavigation, wo er sich\\n  innerhalb der Navigationshierarchie befindet.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Wenn es mehr als zwei Hierarchieebenen gibt und die Übersicht verloren gehen könnte.</li>\\n  <li>\\n    Wenn nicht direkt mittels Navigation auf die Seite navigiert werden kann. (z.B. Detailansichten)\\n  </li>\\n  <li>\\n    Die Breadcrumb-Navigation wird unterhalb der Function Bar im Inhaltsbereich platziert\\n    <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout\\\">Layout</a>\\n  </li>\\n  <li>Die aktuelle Seite ist immer fett ausgezeichnet.</li>\\n  <li>Die übergeordneten Einträge sind mit der entsprechenden Seite verlinkt.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Bei einer oder zwei Hierarchieebenen (Navigationsebenen) ist die Hauptnavigation ausreichend für\\n    die Orientierung des Nutzers.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/layout\\\">Layout</a></li>\\n  <li><a routerLink=\\\"/styleguide/layout/navigation\\\">Navigation</a></li>\\n  <li><a routerLink=\\\"/styleguide/layout/functionbar\\\">Function Bar</a></li>\\n</ul>\\n\\n<div class=\\\"card my-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Wir realisieren Breadcrumbs mit Hilfe der Bootstrap-Klassen\\n      <code>breadcrumb</code>\\n      und\\n      <code>breadcrumb-item</code>\\n      .\\n    </p>\\n  </div>\\n</div>\\n\\n<app-code-example src=\\\"layout/breadcrumbs/breadcrumbs.component.html#crumbs\\\">\\n  <nav aria-label=\\\"breadcrumb\\\">\\n    <ol class=\\\"breadcrumb mt-2\\\">\\n      <li class=\\\"breadcrumb-item\\\">\\n        <a routerLink=\\\"/styleguide\\\">Styleguide</a>\\n      </li>\\n      <li class=\\\"breadcrumb-item\\\">\\n        <a routerLink=\\\"/styleguide/ui-elements\\\">UI Elements</a>\\n      </li>\\n      <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Breadcrumbs</li>\\n    </ol>\\n  </nav>\\n\\n  <p>Für ein korrekt platziertes Beispiel siehe oben auf dieser Seite.</p>\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-breadcrumbs',\\n  templateUrl: './breadcrumbs.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class BreadcrumbsComponent {}\\n\";","export default \"<!-- Platzhalter -->\\n\\n<app-functionbar>\\n  <app-functionbar-list>\\n    <app-functionbar-item icon=\\\"fas fa-pen\\\" tooltip=\\\"Editieren\\\"></app-functionbar-item>\\n    <app-functionbar-item\\n      icon=\\\"fas fa-print\\\"\\n      tooltip=\\\"Drucken\\\"\\n      (itemClicked)=\\\"print()\\\"></app-functionbar-item>\\n    <app-functionbar-item icon=\\\"fas fa-download\\\" tooltip=\\\"PDF Herunterladen\\\"></app-functionbar-item>\\n    <app-functionbar-item\\n      icon=\\\"fas fa-sync-alt\\\"\\n      tooltip=\\\"Daten synchronisieren (inaktiv)\\\"\\n      [disabled]=\\\"true\\\"\\n      (itemClicked)=\\\"reload()\\\"></app-functionbar-item>\\n    <app-functionbar-item label=\\\"Gültigkeit prüfen\\\"></app-functionbar-item>\\n    <li class=\\\"nav-item dropdown\\\" ngbDropdown>\\n      <a\\n        id=\\\"selectMenu\\\"\\n        class=\\\"btn btn-light btn-functionbar btn-lg nav-item\\\"\\n        tabindex=\\\"0\\\"\\n        ngbDropdownToggle\\n        role=\\\"button\\\">\\n        <small>Dossier</small>\\n      </a>\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"selectMenu\\\" ngbDropdownMenu>\\n        <button ngbDropdownItem (click)=\\\"noop()\\\">Umbenennen</button>\\n        <button ngbDropdownItem (click)=\\\"noop()\\\">Kopie erstellen</button>\\n        <button ngbDropdownItem (click)=\\\"noop()\\\">Archivieren</button>\\n        <button ngbDropdownItem (click)=\\\"noop()\\\">Löschen</button>\\n        <button ngbDropdownItem (click)=\\\"reload()\\\">Neu laden</button>\\n      </div>\\n    </li>\\n  </app-functionbar-list>\\n\\n  <app-functionbar-list align=\\\"right\\\">\\n    <li class=\\\"nav-item\\\">\\n      <div class=\\\"input-group p-1\\\">\\n        <input\\n          id=\\\"search-country\\\"\\n          placeholder=\\\"Dossier durchsuchen\\\"\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\" />\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-light\\\">\\n            <span class=\\\"fas fa-search\\\" aria-hidden=\\\"true\\\"></span>\\n          </button>\\n        </div>\\n      </div>\\n    </li>\\n    <app-functionbar-item\\n      icon=\\\"fas fa-comment mr-2\\\"\\n      label=\\\"Kommentar erfassen\\\"></app-functionbar-item>\\n    <li class=\\\"nav-item dropdown overflow-menu\\\" ngbDropdown placement=\\\"bottom-right\\\">\\n      <button\\n        id=\\\"overflowMenu\\\"\\n        class=\\\"btn btn-light btn-functionbar btn-lg nav-item\\\"\\n        role=\\\"button\\\"\\n        ngbDropdownToggle>\\n        <span class=\\\"fas fa-ellipsis-v fa-fw\\\" aria-hidden=\\\"true\\\"></span>\\n      </button>\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"overflowMenu\\\" ngbDropdownMenu>\\n        <button ngbDropdownItem (click)=\\\"noop()\\\">Function Bar konfigurieren</button>\\n        <button ngbDropdownItem (click)=\\\"noop()\\\">Verwandte Elemente hinzufügen</button>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <button ngbDropdownItem (click)=\\\"noop()\\\">Code anzeigen</button>\\n      </div>\\n    </li>\\n  </app-functionbar-list>\\n</app-functionbar>\\n\\n<h1 class=\\\"mt-3 mb-4\\\">Function Bar</h1>\\n\\n<p class=\\\"lead\\\">\\n  Die Funktionsleiste enthält Aktionen für die aktive Ansicht, die der Benutzer typischerweise\\n  während dem Verwenden der aktuellen Ansicht auslösen will.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Für alle Bearbeitungselemente und Aktionen, die den aktuellen Contentbereich betreffen.</li>\\n  <li>\\n    Die Funktionsleiste kann sich entweder auf eine einzelne Ansicht (z.B. das gerade geöffnete\\n    Dossier) beziehen oder Funktionen für einen ganzen Menu-Unterbereich anbieten.\\n  </li>\\n  <li>\\n    Wenn viele Optionen vorhanden sind, sollten die am wenigsten verwendeten in Drop-Down Menus\\n    gruppiert werden.\\n    <br />\\n    Wenn wenig Platz vorhanden ist, können die Optionen auch in einem Overflow-Menu (\\n    <span class=\\\"fas fa-ellipsis-v fa-fw\\\" aria-hidden=\\\"true\\\"></span>\\n    ) gruppiert werden. Wenn genügend Platz vorhanden ist, sollte das Overflow-Menu hingegen nicht\\n    verwendet werden.\\n  </li>\\n</ul>\\n\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Die Richtlinien für\\n    <a routerLink=\\\"/styleguide/basics/icons\\\" class=\\\"highlight\\\">Icons</a>\\n    und\\n    <a routerLink=\\\"/styleguide/ui-elements/buttons\\\" fragment=\\\"icon-buttons\\\" class=\\\"highlight\\\">\\n      Icon Buttons\\n    </a>\\n    sollen auch in der Function Bar berücksichtigt werden.\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Die Function Bar sollte keine applikationsweit verfügbaren Funktionen enthalten. Diese gehören\\n    eher in den\\n    <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout/header\\\">Header</a>\\n    .\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements mb-5\\\">\\n  <li><a routerLink=\\\"/styleguide/layout\\\">Layout</a></li>\\n  <li><a routerLink=\\\"/styleguide/layout/actionbar\\\">Action Bar</a></li>\\n  <li><a routerLink=\\\"/styleguide/ui-elements/buttons\\\">Buttons</a></li>\\n  <li><a routerLink=\\\"/styleguide/basics/icons\\\">Icons</a></li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/overflow-menu\\\">Overflow Menu</a>\\n  </li>\\n  <li><a routerLink=\\\"/styleguide/layout/breadcrumbs\\\">Breadcrumbs</a></li>\\n</ul>\\n\\n<app-code-example src=\\\"layout/functionbar/functionbar-demo.component.html#basic\\\">\\n  <!-- Zuoberst im View-Template, damit der Titel runterrutscht -->\\n  <app-functionbar class=\\\"d-none\\\">\\n    <app-functionbar-list>\\n      <app-functionbar-item icon=\\\"fas fa-pen\\\" tooltip=\\\"Editieren\\\"></app-functionbar-item>\\n      <app-functionbar-item\\n        icon=\\\"fas fa-print\\\"\\n        tooltip=\\\"Drucken\\\"\\n        (itemClicked)=\\\"print()\\\"></app-functionbar-item>\\n      <app-functionbar-item\\n        icon=\\\"fas fa-download\\\"\\n        tooltip=\\\"PDF Herunterladen\\\"></app-functionbar-item>\\n      <app-functionbar-item\\n        icon=\\\"fas fa-sync-alt\\\"\\n        tooltip=\\\"Daten synchronisieren (inaktiv)\\\"\\n        [disabled]=\\\"true\\\"\\n        (itemClicked)=\\\"reload()\\\"></app-functionbar-item>\\n      <app-functionbar-item label=\\\"Gültigkeit prüfen\\\"></app-functionbar-item>\\n      <li class=\\\"nav-item dropdown\\\" ngbDropdown>\\n        <a\\n          id=\\\"selectMenu\\\"\\n          class=\\\"btn btn-light btn-functionbar btn-lg nav-item\\\"\\n          tabindex=\\\"0\\\"\\n          ngbDropdownToggle\\n          role=\\\"button\\\">\\n          <small>Dossier</small>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"selectMenu\\\" ngbDropdownMenu>\\n          <button ngbDropdownItem (click)=\\\"noop()\\\">Umbenennen</button>\\n          <button ngbDropdownItem (click)=\\\"noop()\\\">Kopie erstellen</button>\\n          <button ngbDropdownItem (click)=\\\"noop()\\\">Archivieren</button>\\n          <button ngbDropdownItem (click)=\\\"noop()\\\">Löschen</button>\\n          <button ngbDropdownItem (click)=\\\"reload()\\\">Neu laden</button>\\n        </div>\\n      </li>\\n    </app-functionbar-list>\\n\\n    <app-functionbar-list align=\\\"right\\\">\\n      <li class=\\\"nav-item\\\">\\n        <div class=\\\"input-group p-1\\\">\\n          <input\\n            id=\\\"search-country\\\"\\n            placeholder=\\\"Dossier durchsuchen\\\"\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\" />\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-light\\\">\\n              <span class=\\\"fas fa-search\\\" aria-hidden=\\\"true\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n      </li>\\n      <app-functionbar-item\\n        icon=\\\"fas fa-comment mr-2\\\"\\n        label=\\\"Kommentar erfassen\\\"></app-functionbar-item>\\n      <li class=\\\"nav-item dropdown overflow-menu\\\" ngbDropdown placement=\\\"bottom-right\\\">\\n        <button\\n          id=\\\"overflowMenu\\\"\\n          class=\\\"btn btn-light btn-functionbar btn-lg nav-item\\\"\\n          role=\\\"button\\\"\\n          ngbDropdownToggle>\\n          <span class=\\\"fas fa-ellipsis-v fa-fw\\\" aria-hidden=\\\"true\\\"></span>\\n        </button>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"overflowMenu\\\" ngbDropdownMenu>\\n          <button ngbDropdownItem (click)=\\\"noop()\\\">Function Bar konfigurieren</button>\\n          <button ngbDropdownItem (click)=\\\"noop()\\\">Verwandte Elemente hinzufügen</button>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <button ngbDropdownItem (click)=\\\"noop()\\\">Code anzeigen</button>\\n        </div>\\n      </li>\\n    </app-functionbar-list>\\n  </app-functionbar>\\n\\n  (siehe oben)\\n</app-code-example>\\n\";","export default \"import { Component } from '@angular/core';\\n\\n@Component({\\n  templateUrl: 'functionbar-demo.component.html',\\n})\\nexport class FunctionbarDemoComponent {\\n  print(): boolean {\\n    window.print();\\n    return false;\\n  }\\n\\n  reload(): boolean {\\n    window.location.reload();\\n    return false;\\n  }\\n\\n  noop(): boolean {\\n    // We shouldn't have menu entries that do nothing, this is just to keep the demo simple.\\n    // It's important to return `false` in these methods so the application will not follow\\n    // the link and reload the page.\\n    return false;\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Grid</h1>\\n\\n<p class=\\\"lead\\\">\\n  Unser Layout basiert auf dem Bootstrap Grid System. Wie der Name bereits vermuten lässt, wird dazu\\n  ein Raster angelegt, in dem sich Kind-Elemente positionieren lassen. Diese Elemente müssen nicht\\n  mit festen Grössenangaben versehen werden, sondern lassen sich flexibel arrangieren. Dies\\n  ermöglicht es, ein Layout zu erstellen, welches sich automatisch den verschiedenen\\n  Bildschirmgrössen anpasst. Somit können wir sicherstellen, dass Applikationen sowohl auf allen\\n  Geräten (vom PC bis zum Smartphone), nicht nur gut aussehen, sondern sich auch einwandfrei\\n  bedienen lassen.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Immer. Alle Webapplikationen basieren auf einem 12-spaltigem Grid.</li>\\n  <li>\\n    Das Grid unterstützt dabei, Inhalte wie Text, Tabellen, Bilder oder Formularfelder strukturiert\\n    anzuordnen.\\n  </li>\\n  <li>\\n    Es ist insbesondere darauf zu achten, dass z.B.\\n    <a routerLink=\\\"/styleguide/ui-elements/forms\\\" class=\\\"highlight\\\">Formulareingabefelder</a>\\n    sich nicht über zu viele Spalten erstrecken, sondern nur so breit sind, dass sie gut bedienbar\\n    sind.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/layout\\\" class=\\\"highlight\\\">Layout</a></li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms\\\" class=\\\"highlight\\\">Forms</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"card my-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Wir verwenden das\\n      <a target=\\\"_blank\\\" class=\\\"external\\\" href=\\\"http://getbootstrap.com/docs/4.5/layout/grid/\\\">\\n        Bootstrap Grid System\\n      </a>\\n    </p>\\n  </div>\\n</div>\\n\\n<app-code-example src=\\\"layout/grid/grid.component.html#grid\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row mb-4\\\">\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n      <div class=\\\"col-md-1\\\">.col-md-1</div>\\n    </div>\\n    <div class=\\\"row mb-4\\\">\\n      <div class=\\\"col-md-8\\\">.col-md-8</div>\\n      <div class=\\\"col-md-4\\\">.col-md-4</div>\\n    </div>\\n    <div class=\\\"row mb-4\\\">\\n      <div class=\\\"col-md-4\\\">.col-md-4</div>\\n      <div class=\\\"col-md-4\\\">.col-md-4</div>\\n      <div class=\\\"col-md-4\\\">.col-md-4</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">.col-md-6</div>\\n      <div class=\\\"col-md-6\\\">.col-md-6</div>\\n    </div>\\n  </div>\\n</app-code-example>\\n\";","export default \"import { Component } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './grid.component.html',\\n  styleUrls: ['./grid.component.scss'],\\n})\\nexport class GridComponent {\\n  showAlert = true;\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Header</h1>\\n\\n<p class=\\\"lead\\\">\\n  Der Header zeigt dem Benutzer auf einen Blick an, in welcher Applikation er sich befindet und\\n  enthält übergeordnete Funktionalitäten, die von allen Seiten aus zugänglich sein müssen. Der\\n  Header enthält auf jeder Seite einer Applikation die gleichen Elemente.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Der Header kommt in allen Webapplikationen vor.</li>\\n  <li>\\n    Der Header enthält links immer ein Toggle mit Hamburger-Icon, mit dem die Navigation auf- und\\n    zugeklappt werden kann.\\n  </li>\\n  <li>\\n    Rechts vom Navigations-Toggle enthält der Header ein identifizierendes Element: Ein\\n    <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/basics/logo\\\">Logo</a>\\n    mit Titel, nur ein Logo oder nur einen Titel.\\n    <br />\\n    Logo und Titel sind mit der Einstiegsseite der Applikation zu verlinken.\\n  </li>\\n  <li>\\n    Auf der rechten Seite kann der Header je nach Applikation die folgenden Elemente enthalten. Alle\\n    Elemente sind optional, die Reihenfolge (v.l.n.r) soll aber eingehalten werden.\\n    <ol>\\n      <li>Ein Suchfeld für eine applikationsweite (Volltext-) Suche</li>\\n      <li>\\n        Ein Hilfe-Menu, über welches der Benutzer Zugriff zu unterstützenden Informationen wie\\n        Bedienungsanleitung, Keyboard-Shortcuts, stufenabhängige Informationen oder Versionsangaben\\n        erhält.\\n      </li>\\n      <li>\\n        Ein Benutzermenu, über welches der Benutzer sich An- und Abmelden kann und Zugriff auf\\n        applikationsweit gültige benutzerspezifische Einstellungen wie z.B. die Sprache hat.\\n      </li>\\n    </ol>\\n  </li>\\n  <li>Wenn kein Benutzer eingeloggt ist, sollte nur der Login-Button angezeigt werden.</li>\\n  <li>\\n    Der Header funktioniert auf Desktops und Tablets gut, bei kleineren Mobiltelefonen müssen u.U.\\n    einzelne Elemente ausgeblendet werden, damit wichtigere Elemente sichtbar bleiben.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/layout\\\">Layout</a></li>\\n  <li><a routerLink=\\\"/styleguide/basics/logo\\\">Logo</a></li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/overflow-menu\\\" class=\\\"highlight\\\">Overflow Menu</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout/navigation\\\" class=\\\"highlight\\\">Navigation</a>\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Header</h2>\\n<app-code-example\\n  basePath=\\\"layout/header\\\"\\n  src=\\\"header-demo.component.html#header,header-demo.component.ts\\\">\\n  <!-- nur für Beispiel -->\\n  <p>Siehe Beispiel oben.</p>\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"toggleLogin()\\\">\\n    {{ loggedIn ? 'Zeige Header in ausgeloggtem Zustand' : 'Zeige Header in eingeloggtem Zustand' }}\\n  </button>\\n\\n  <!-- Header zum Kopieren und Einfügen -->\\n  <nav\\n    id=\\\"header\\\"\\n    class=\\\"navbar navbar-expand navbar-dark bg-dark p-0 fixed-top\\\"\\n    [attr.aria-label]=\\\"'Header'\\\">\\n    <button\\n      class=\\\"btn btn-dark menu-toggler-btn mr-2\\\"\\n      (click)=\\\"toggleNavigation()\\\"\\n      [attr.aria-label]=\\\"navigationToggleText\\\">\\n      <span class=\\\"fas fa-bars fa-fw fa-lg\\\"></span>\\n    </button>\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/styleguide/welcome\\\">\\n      <img src=\\\"assets/logo.png\\\" class=\\\"applogo ml-1 mr-2\\\" alt=\\\"\\\" />\\n      Bedag Angular Styleguide (Header Beispiel)\\n    </a>\\n    <div class=\\\"navbar-nav ml-auto mr-2 header-list\\\">\\n      <!-- Search Bar -->\\n      <div *ngIf=\\\"loggedIn\\\" class=\\\"form-inline mr-2\\\">\\n        <div class=\\\"input-group\\\">\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control form-control-sm\\\"\\n            id=\\\"search\\\"\\n            placeholder=\\\"Suchen\\\" />\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-light btn-sm\\\" type=\\\"button\\\">\\n              <span class=\\\"fas fa-search\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- Help Menu -->\\n      <div *ngIf=\\\"loggedIn\\\" ngbDropdown>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-dark btn-sm\\\"\\n          [attr.aria-label]=\\\"'Help'\\\"\\n          ngbDropdownToggle>\\n          <span class=\\\"far fa-question-circle fa-2x\\\" aria-hidden=\\\"true\\\"></span>\\n        </button>\\n        <div class=\\\"dropdown-menu dropdown-menu-right\\\" ngbDropdownMenu>\\n          <button ngbDropdownItem>Version: 1.0.0</button>\\n          <button ngbDropdownItem>\\n            Stufe:\\n            <span class=\\\"bagde badge-success p-1\\\">Entwicklung</span>\\n          </button>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <button ngbDropdownItem>Hilfe</button>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <button ngbDropdownItem>Keyboard Shortcuts</button>\\n        </div>\\n      </div>\\n      <!-- User Menu -->\\n      <div *ngIf=\\\"loggedIn; else loginButton\\\" ngbDropdown>\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm\\\" ngbDropdownToggle>\\n          <span class=\\\"user-menu mr-2\\\">Hans Muster</span>\\n          <span class=\\\"fas fa-2x fa-user-circle\\\" aria-hidden=\\\"true\\\"></span>\\n          <span class=\\\"sr-only\\\">User menu</span>\\n        </button>\\n        <div class=\\\"dropdown-menu dropdown-menu-right\\\" ngbDropdownMenu>\\n          <button ngbDropdownItem>Profil</button>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <button ngbDropdownItem>Einstellungen</button>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <button\\n            ngbDropdownItem\\n            *ngFor=\\\"let language of languages\\\"\\n            (click)=\\\"selectLanguage(language)\\\">\\n            {{ language }}\\n            <span\\n              [ngClass]=\\\"{\\n                'fas fa-fw fa-check ml-1': language === selectedLanguage\\n              }\\\"></span>\\n          </button>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <button (click)=\\\"toggleLogin()\\\" ngbDropdownItem>\\n            {{ loggedIn ? 'Logout' : 'Login' }}\\n          </button>\\n        </div>\\n      </div>\\n      <!-- Login Button -->\\n      <ng-template #loginButton>\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm\\\" (click)=\\\"toggleLogin()\\\">\\n          <span class=\\\"user-menu mr-2\\\">Anmelden</span>\\n          <span class=\\\"fas fa-2x fa-sign-in-alt\\\" aria-hidden=\\\"true\\\"></span>\\n        </button>\\n      </ng-template>\\n    </div>\\n  </nav>\\n</app-code-example>\\n\";","export default \"import { Component } from '@angular/core';\\n\\n@Component({\\n  templateUrl: './header-demo.component.html',\\n})\\nexport class HeaderDemoComponent {\\n  navigationToggleText = 'Close navigation';\\n  languages = ['Deutsch', 'Français', 'English'];\\n  selectedLanguage = 'Deutsch';\\n  loggedIn = true;\\n\\n  toggleNavigation(): void {\\n    const e = document.body;\\n    if (e && e.classList) {\\n      const closed = e.classList.toggle('close-navigation');\\n      this.navigationToggleText = closed ? 'Open navigation' : 'Close navigation';\\n    }\\n  }\\n\\n  selectLanguage(language: string): void {\\n    this.selectedLanguage = language;\\n  }\\n\\n  toggleLogin(): void {\\n    this.loggedIn = !this.loggedIn;\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Layout</h1>\\n\\n<p class=\\\"lead\\\">\\n  Ein standardisierter Grundaufbau unterstützt den Nutzer bei der schnellen Orientierung und erfolgt\\n  innerhalb eines festen Rasters\\n  <a routerLink=\\\"/styleguide/layout/grid\\\" class=\\\"highlight\\\">Grid</a>\\n  .\\n  <br />\\n</p>\\n\\n<div class=\\\"bl-example-container text-center\\\">\\n  <div class=\\\"bl-example-container-header text-center\\\">Header</div>\\n  <div class=\\\"bl-example-container-sidebar text-center\\\">Navigation</div>\\n  <div class=\\\"bl-example-container-body\\\">\\n    <div class=\\\"bl-functionbar text-center\\\">Function Bar</div>\\n    <div class=\\\"bl-breadcrumbs\\\">Breadcrumbs</div>\\n    Content\\n    <div class=\\\"bl-actionbar text-center\\\">Action Bar</div>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Header</h2>\\nDer\\n<a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout/header\\\">Header</a>\\nermöglicht das Branding der Anwendung (Logo und Name), und enthält applikationsweit wirksame\\nAktionen wie Suche, Benutzermenu, Sprachauswahl oder Abmelden.\\n\\n<h2 class=\\\"mt-5\\\">Navigation</h2>\\nDie\\n<a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout/navigation\\\">Navigation</a>\\nführt die Benutzer durch die verschiedenen Teile der Anwendung. Sie strukturiert die Inhalte bzw.\\nFunktionen der Anwendung für die Benutzer. Die Struktur ist hierarchisch auf bis zu 3 Ebenen.\\n\\n<h2 class=\\\"mt-5\\\">Function Bar</h2>\\nDie\\n<a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout/functionbar\\\">Function Bar</a>\\nenthält Aktionen für die aktive Ansicht, die der Benutzer typischerweise während der Verwendung der\\nAnsicht auslösen will, wie \\\"Drucken\\\", \\\"Aktualisieren\\\", oder \\\"Bearbeiten\\\".\\n\\n<h2 class=\\\"mt-5\\\">Breadcrumbs</h2>\\n<a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout/breadcrumbs\\\">Breadcrumbs</a>\\ndienen zur besseren Orientierung des Benutzers bei mehr als 2 Navigations-Hierarchiestufen.\\n\\n<h2 class=\\\"mt-5\\\">Content</h2>\\nDies ist der eigentliche Inhalts- und Arbeitsbereich.\\n\\n<h2 class=\\\"mt-5\\\">Action Bar</h2>\\nDie\\n<a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout/actionbar\\\">Action Bar</a>\\nenthält die Buttons für die Funktionen, die der Benutzer erst nach Verwendung der Ansicht auslösen\\nwill, wie \\\"Abbrechen\\\" oder \\\"Speichern\\\" (Für grosse Formulare) und weitere Aktionen, die sich auf den\\ngesamten Contentbereich beziehen.\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Layout nicht verwendet werden?</h2>\\n<p>\\n  Es gibt wenige Ausnahmen, bei denen man bewusst von diesem Seitenaufbau abweichen kann. Mögliche\\n  Beispiele sind: eine separate Startseite, Wizards oder öffentliche Dashboards. Das zugrunde\\n  liegende\\n  <a routerLink=\\\"/styleguide/layout/grid\\\" class=\\\"highlight\\\">Grid</a>\\n  gilt aber für alle Seiten.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/layout/grid\\\">Grid</a></li>\\n  <li><a routerLink=\\\"/styleguide/layout/header\\\">Header</a></li>\\n  <li><a routerLink=\\\"/styleguide/layout/navigation\\\">Navigation</a></li>\\n  <li><a routerLink=\\\"/styleguide/layout/functionbar\\\">Function Bar</a></li>\\n  <li><a routerLink=\\\"/styleguide/layout/actionbar\\\">Action Bar</a></li>\\n  <li><a routerLink=\\\"/styleguide/layout/breadcrumbs\\\">Breadcrumbs</a></li>\\n</ul>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './layout.component.html',\\n  styleUrls: ['./layout.component.scss'],\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class LayoutComponent {\\n  showAlert = true;\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Navigation</h1>\\n\\n<p class=\\\"lead\\\">\\n  Die Navigation enthält die zentralen Menupunkte der Applikation. Sie organisiert Inhalte und\\n  Funktionen der Anwendung auf bis zu 3 Hierarchiestufen.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Sie ist immer links angeordnet.</li>\\n  <li>Sie kann mit dem Hamburger-Icon im Header auf- und zugeklappt werden.</li>\\n  <li>\\n    Sind Unternavigationspunkte vorhanden, werden diese mit einem Pfeil nach rechts ausgezeichnet.\\n  </li>\\n  <li>Wenn keine sinnvollen Icons vorhanden sind, ist es besser auf Icons zu verzichten.</li>\\n  <li>\\n    Globale Systemeinstellungen für Administratoren sind an unterster Stelle zu platzieren, falls\\n    vorhanden.\\n    <br />\\n    Systemeinstellungen, die nur den eingeloggten Benutzer betreffen, sind im Benutzermenu im\\n    <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout/header\\\">Header</a>\\n    zu platzieren.\\n  </li>\\n  <li>\\n    Informationen (\\\"About\\\", \\\"Hilfe\\\" etc.) gehören nicht ins Navigationsmenu, sondern in das\\n    Hilfe-Menu im\\n    <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout/header\\\">Header</a>\\n    .\\n  </li>\\n  <li>\\n    Wenn viel Platz im Inhaltsbereich gebraucht wird, kann die Navigation im zugeklappten Zustand\\n    auf Icons reduziert werden.\\n  </li>\\n</ul>\\n\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Die URL-Struktur der Anwendung sollte mit der Hierarchie der Main Navigation immer\\n    übereinstimmen. Siehe URL dieser Seite als Beispiel:\\n    <code>...{{ this.router.url }}</code>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>Auf besonderen Seiten wie z.B. separate Einstiegsseiten oder öffentliche Dashboards.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout\\\">Layout</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/basics/icons\\\">Icons</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/links\\\">Links</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout/header\\\">Header</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout/breadcrumbs\\\">Breadcrumbs</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"card my-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Die\\n      <code>app-nav-menu</code>\\n      Komponente dient als Container für die Navigation und kümmert sich um allgemeine Funktionen\\n      wie das Ein- und Ausblenden. Mit dem Attribut\\n      <code>startExpanded</code>\\n      kann ein Untermenu bereits beim Laden der Seite aufgeklappt werden.\\n    </p>\\n\\n    <p>\\n      Die\\n      <code>app-nav-item</code>\\n      Komponente beschreibt einen einzelnen Eintrag in der Navigation, wobei die Hierarchie durch\\n      Verschachtelung beschrieben wird. Sie akzeptiert folgende Inputs:\\n    </p>\\n\\n    <dl class=\\\"row\\\">\\n      <dt class=\\\"col-sm-2\\\">icon</dt>\\n      <dd class=\\\"col-sm-10\\\">CSS-Klassenname des Fontawesome-Icons</dd>\\n      <dt class=\\\"col-sm-2\\\">label</dt>\\n      <dd class=\\\"col-sm-10\\\">Label-Text für das Navigationselement</dd>\\n      <dt class=\\\"col-sm-2\\\">url</dt>\\n      <dd class=\\\"col-sm-10\\\">Die interne URL, zu der navigiert werden soll</dd>\\n      <dt class=\\\"col-sm-2\\\">href</dt>\\n      <dd class=\\\"col-sm-10\\\">Die externe URL, zu der navigiert werden soll</dd>\\n      <dt class=\\\"col-sm-2\\\">target</dt>\\n      <dd class=\\\"col-sm-10\\\">\\n        Definiert in welchem Fenster bzw. Tab der Link geöffnet werden soll. Entspricht dem\\n        <a\\n          class=\\\"external\\\"\\n          href=\\\"https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-a-element\\\"\\n          target=\\\"_blank\\\">\\n          \\\"target\\\" Attribut in HTML\\n        </a>\\n        .\\n      </dd>\\n    </dl>\\n  </div>\\n</div>\\n\\n<app-code-example src=\\\"../app-nav.component.html\\\">\\n  <p>Navigationsmenu des Bedag Styleguides</p>\\n  <p>\\n    Hinweis: Der Toggler wurde zu Demonstrationszwecken implementiert - in einer normalen\\n    Applikation sollte man sich auf eine Variante festlegen.\\n  </p>\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-outline-primary\\\"\\n    (click)=\\\"toggler.showIcons = !toggler.showIcons\\\">\\n    {{ toggler.showIcons ? 'Zeige Navigation ohne Icons' : 'Zeige Navigation mit Icons' }}\\n  </button>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Navigation im zugeklappten Zustand auf Icons reduzieren</h2>\\n<p>\\n  Wenn die Navigation zugeklappt wird, verschwindet sie vollständig.\\n  <br />\\n  Für gewisse Applikationen, bei denen viel Raum im Inhaltsbereich gebraucht wird, kann es von\\n  Vorteil sein, wenn die Navigation stattdessen auf Icons reduziert wird. Sie nimmt dadurch weniger\\n  Platz in Anspruch, bleibt aber immer noch bedienbar. Für Mobile-Applikationen ist diese Variante\\n  eher nicht geeignet.\\n  <br />\\n  Im\\n  <a href=\\\"https://confluence.se.bedag.ch/x/IIFaBg\\\" class=\\\"external\\\" target=\\\"_blank\\\">Notariat+</a>\\n  wurde diese Variante der Styleguide-Navigation umgesetzt und kann als Beispiel verwendet werden.\\n  <a\\n    class=\\\"external\\\"\\n    target=\\\"_blank\\\"\\n    href=\\\"https://stash.se.bedag.ch/projects/RAUM-CAPI/repos/capitastra-parent/browse/capitastra-client/src/app/core/extension/navigation?at=refs%2Fheads%2Ffeature%2Fnotariat-plus-development\\\">\\n    Die Implementierung kann auf dem Bitbucket Server nachgeschlagen werden.\\n  </a>\\n  <br />\\n</p>\\n\";","export default \"import { Component } from '@angular/core';\\nimport { Router } from '@angular/router';\\nimport { IconToggleService } from '../../../icon-toggle.service';\\n\\n@Component({\\n  templateUrl: 'navigation-demo.component.html',\\n})\\nexport class NavigationDemoComponent {\\n  constructor(public router: Router, public toggler: IconToggleService) {}\\n}\\n\";","export default \"import { Component } from '@angular/core';\\nimport { AlertHolderDirective } from '../../../bedag-components/alert/alert-holder.directive';\\n\\n@Component({\\n  selector: 'app-alert-buttons',\\n  template: `\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-8 d-flex\\\">\\n        <button class=\\\"btn btn-outline-primary w-100 mr-2\\\" (click)=\\\"infoAlert()\\\">\\n          <span class=\\\"fas fa-info-circle text-info mr-2\\\"></span>\\n          Alert anzeigen\\n        </button>\\n        <button class=\\\"btn btn-outline-primary w-100 mr-2\\\" (click)=\\\"successAlert()\\\">\\n          <span class=\\\"fas fa-check-circle text-success mr-2\\\"></span>\\n          Alert anzeigen\\n        </button>\\n        <button class=\\\"btn btn-outline-primary w-100 mr-2\\\" (click)=\\\"warningAlert()\\\">\\n          <span class=\\\"fas fa-exclamation-triangle text-warning mr-2\\\"></span>\\n          Alert anzeigen\\n        </button>\\n        <button class=\\\"btn btn-outline-primary w-100\\\" (click)=\\\"dangerAlert()\\\">\\n          <span class=\\\"fas fa-exclamation-circle text-danger mr-2\\\"></span>\\n          Alert anzeigen\\n        </button>\\n      </div>\\n    </div>\\n  `,\\n  styleUrls: ['alert-buttons.component.scss'],\\n})\\nexport class AlertButtonsComponent {\\n  constructor(private readonly alerts: AlertHolderDirective) {}\\n\\n  infoAlert(): void {\\n    this.alerts.info(\\n      'Der Server steht wegen Wartungsarbeiten von 20.30 bis 24.00 Uhr nicht zur Verfügung.'\\n    );\\n  }\\n\\n  successAlert(): void {\\n    this.alerts.success('Das Ticket wurde erstellt.');\\n  }\\n\\n  dangerAlert(): void {\\n    this.alerts.danger('Das Ticket konnte nicht gespeichert werden.');\\n  }\\n\\n  warningAlert(): void {\\n    this.alerts.warning('Automatische Updates wurden deaktiviert.');\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Alerts</h1>\\n\\n<p class=\\\"lead\\\">\\n  Alerts geben dem Benutzer Feedback und unterbrechen seinen Arbeitsfluss. Sie kommunizieren\\n  wichtige Informationen oder Details.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    <strong>Info:</strong>\\n    Für Informationen, die zeitlich beschränkt angezeigt werden sollen.\\n  </li>\\n  <li>\\n    <strong>Success:</strong>\\n    Zur Bestätigung von erfolgreich durchgeführten Aktionen.\\n    <br />\\n  </li>\\n  <li>\\n    <strong>Warning:</strong>\\n    Als Warnhinweis, dass eine Aktion zwar ausgeführt werden könnte, aber besondere Aufmerksamkeit\\n    gefragt ist.\\n    <br />\\n  </li>\\n  <li>\\n    <strong>Danger:</strong>\\n    Als Fehlerhinweis, dass eine Aktion nicht ausgeführt werden konnte oder bei einem Fehlerfall in\\n    der Applikation.\\n    <br />\\n  </li>\\n  <li>\\n    Normalerweise werden Alerts oben im Content-Bereich oder oberhalb des Inhalts eines offenen\\n    Modal Dialogs angezeigt.\\n    <br />\\n    Ein Alert kann jedoch auch beispielsweise im offenen Tab oder nahe eines auszufüllenden\\n    Formulars angezeigt werden, wenn dies die Verständlichkeit erhöht.\\n  </li>\\n</ul>\\n\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Warning und Danger Alerts werden angezeigt, bis sie dismissed werden, während Info und Success\\n    Alerts nach kurzer Verzögerung automatisch ausgeblendet werden.\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Wenn vom Benutzer eine Aktion oder die volle Aufmerksamkeit gefordert wird, sollte kein Alert\\n    sondern ein Modal Dialog verwendet werden.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/ui-elements/modal-dialog\\\">Modal Dialog</a></li>\\n  <li><a routerLink=\\\"/styleguide/basics/colors\\\">Colors</a></li>\\n</ul>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Die Verwendung von Alerts ist in der\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"http://getbootstrap.com/docs/4.5/components/alerts/\\\"\\n        target=\\\"_blank\\\">\\n        Bootstrap-Dokumentation\\n      </a>\\n      beschrieben.\\n      <br />\\n      Im Gegensatz zu den Bootstrap Alerts verwenden wir immer Alerts mit Icons, damit auch\\n      Farbenblinde das Feedback sofort einordnen können.\\n    </p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Einfache Alerts</h2>\\n<app-code-example src=\\\"ui-elements/alerts/alerts.component.html#basic\\\">\\n  <p class=\\\"mb-1\\\">\\n    <strong>Info:</strong>\\n    Rein informativer Alert\\n  </p>\\n  <app-alert type=\\\"info\\\">\\n    Der Server steht wegen Wartungsarbeiten von 20.30 bis 24.00 Uhr nicht zur Verfügung.\\n  </app-alert>\\n\\n  <p class=\\\"mb-1\\\">\\n    <strong>Success:</strong>\\n    Die Aktion wurde erfolgreich ausgeführt\\n  </p>\\n  <app-alert type=\\\"success\\\">\\n    Das Ticket\\n    <a class=\\\"alert-link mx-1\\\">DA-42</a>\\n    wurde erstellt.\\n  </app-alert>\\n\\n  <p class=\\\"mb-1\\\">\\n    <strong>Warning:</strong>\\n    Wir möchten den Benutzer vor etwas warnen\\n  </p>\\n  <app-alert type=\\\"warning\\\">Automatische Updates wurden deaktiviert.</app-alert>\\n\\n  <p class=\\\"mb-1\\\">\\n    <strong>Danger:</strong>\\n    Die Aktion konnte nicht ausgeführt werden\\n  </p>\\n  <app-alert type=\\\"danger\\\">Das Ticket konnte nicht gespeichert werden.</app-alert>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Alerts mit Titel</h2>\\n<p>\\n  Bei mehrzeiligen Alerts ermöglicht eine Zusammenfassung im Titel dem Benutzer eine rasche\\n  Einordnung der Meldung.\\n</p>\\n<app-code-example src=\\\"ui-elements/alerts/alerts.component.html#titel\\\">\\n  <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n    <div class=\\\"d-flex flex-wrap\\\">\\n      <h4 class=\\\"alert-heading w-100\\\">\\n        <span class=\\\"fas fa-exclamation-triangle mr-2\\\"></span>\\n        Ankündigung Wartungsfenster\\n      </h4>\\n      <hr class=\\\"w-100 my-2\\\" />\\n      <p>\\n        Aufgrund von Wartungsarbeiten an den Servern stehen in den genannten Zeiträumen folgende\\n        Umgebungen nur eingeschränkt zur Verfügung:\\n      </p>\\n      <ul class=\\\"list-unstyled\\\">\\n        <li>\\n          <strong>Stufe Entwicklung:</strong>\\n          Montag 11:00 - 13:00\\n        </li>\\n        <li>\\n          <strong>Stufe Test:</strong>\\n          Mittwoch 11:00 - 13:00\\n        </li>\\n        <li>\\n          <strong>Stufe Produktion:</strong>\\n          Freitag 19:00 - 21:00\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Schliessbare Alerts</h2>\\n\\n<app-code-example\\n  src=\\\"ui-elements/alerts/alerts.component.html#dismissible,ui-elements/alerts/alerts.component.ts\\\">\\n  <app-alert type=\\\"success\\\" (dismiss)=\\\"showSuccessAlert = false\\\" *ngIf=\\\"showSuccessAlert\\\">\\n    Die Ehe wurde eingetragen.\\n  </app-alert>\\n\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-outline-primary\\\"\\n    (click)=\\\"showSuccessAlert = true\\\"\\n    *ngIf=\\\"showSuccessAlert === false\\\">\\n    Alert wieder anzeigen\\n  </button>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Alerts mit Aktion</h2>\\n<p>\\n  Alerts können mit einer Aktion versehen werden. Dabei sollte beachtet werden, dass der Button die\\n  passende Farbe zum Alert hat.\\n</p>\\n\\n<app-code-example\\n  src=\\\"ui-elements/alerts/alerts.component.html#action,ui-elements/alerts/alerts.component.ts\\\">\\n  <app-alert type=\\\"success\\\" *ngIf=\\\"noteIsDeleted\\\">\\n    Die Notiz wurde gelöscht.\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-success ml-auto\\\" (click)=\\\"noteIsDeleted = false\\\">\\n      Notiz wiederherstellen\\n    </button>\\n  </app-alert>\\n\\n  <app-alert type=\\\"success\\\" *ngIf=\\\"!noteIsDeleted\\\">Die Notiz wurde wiederhergestellt.</app-alert>\\n\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-outline-primary\\\"\\n    (click)=\\\"noteIsDeleted = true\\\"\\n    *ngIf=\\\"!noteIsDeleted\\\">\\n    Notiz löschen\\n  </button>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Globale Alerts aus Typescript</h2>\\n<p>\\n  Eine Komponente kann Alerts senden, indem sie den\\n  <code>AlertHolder</code>\\n  injected und ihm den darzustellenden Text übergibt. Dazu definieren wir einen globalen\\n  <code>AlertHolder</code>\\n  , dessen Alerts unter dem Header dargestellt werden. Dieser\\n  <code>AlertHolder</code>\\n  kann auch vom globalen Error-Handler für die Anzeige von Fehlern verwendet werden.\\n</p>\\n\\n<app-code-example\\n  src=\\\"ui-elements/alerts/alerts.component.html#global,ui-elements/alerts/alert-buttons.component.ts\\\">\\n  <app-alert-buttons></app-alert-buttons>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Lokale Alerts aus Typescript</h2>\\n<p>\\n  Wenn die Alerts an anderer Stelle angezeigt werden sollen, z.B. in einem Modal, können mit der\\n  <code>appAlertHolder</code>\\n  Direktive die Alerts untergeordneter Komponenten eingesammelt und mit der\\n  <code>alert-list</code>\\n  Komponente dargestellt werden:\\n</p>\\n\\n<app-code-example\\n  src=\\\"ui-elements/alerts/alerts.component.html#inline,ui-elements/alerts/alert-buttons.component.ts\\\">\\n  <ng-container appAlertHolder>\\n    <!-- creates new instance of appAlertHolder for injection in child elements -->\\n    <div>\\n      <p>\\n        Alert display:\\n        <br />\\n      </p>\\n      <app-alert-list></app-alert-list>\\n      <!-- uses local instance of appAlertHolder to display alerts -->\\n    </div>\\n    <div class=\\\"mt-4\\\">\\n      <p>Alert trigger:</p>\\n      <app-alert-buttons></app-alert-buttons>\\n      <!-- uses local instance of appAlertHolder to add alerts  -->\\n    </div>\\n  </ng-container>\\n</app-code-example>\\n\";","export default \"import { Component } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-alerts',\\n  templateUrl: './alerts.component.html',\\n})\\nexport class AlertsComponent {\\n  showSuccessAlert = true;\\n\\n  noteIsDeleted = true;\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Badges</h1>\\n\\n<p class=\\\"lead\\\">\\n  Mit Badges wird dem Nutzer vereinfacht angezeigt, was der aktuelle Status eines Elements ist.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Bei Elementen, bei denen eine Statusänderung erfolgen kann. Beispiel: Verena Muster\\n    <span class=\\\"badge badge-info\\\">Neu</span>\\n  </li>\\n  <li>\\n    Für das Anzeigen einer Anzahl von Elementen. Beispiel: Benachrichtigungen\\n    <span class=\\\"badge badge-info\\\">4 Ungelesen</span>\\n  </li>\\n  <li>\\n    Der Text in Badges sollte möglichst kurz und prägnant sein und wenn möglich nicht mehr als drei\\n    Wörter lang.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>Badges sind nicht für Hinweise einzusetzen, sondern nur für die Status-Anzeige.</li>\\n  <li>\\n    Badges sollten in Tabellen nur sehr gezielt eingesetzt werden, wenn die Aufmerksamkeit des\\n    Benutzers unbedingt auf ein Item gelenkt werden muss (z.B. bei Batch-Job Übersichten\\n    <span class=\\\"badge badge-danger mr-1\\\">Failed</span>\\n    ). Ansonsten sind\\n    <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/basics/colors\\\">Textfarbe</a>\\n    und\\n    <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/basics/icons\\\">Icons</a>\\n    besser geeignet, um die Tabelle optisch schlank zu halten.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/buttons\\\" class=\\\"highlight\\\">Buttons</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/alerts\\\" class=\\\"highlight\\\">Alerts</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/basics/colors\\\" class=\\\"highlight\\\">Colors</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    Weitere Informationen sowie Codebeispiele in der\\n    <a class=\\\"external\\\" href=\\\"http://getbootstrap.com/docs/4.5/components/badge/\\\" target=\\\"_blank\\\">\\n      Bootstrap-Dokumentation\\n    </a>\\n    .\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Badges</h2>\\n<app-code-example src=\\\"ui-elements/badges/badges.component.html#badge\\\">\\n  <span class=\\\"badge badge-info mr-2\\\">Info</span>\\n  <span class=\\\"badge badge-success mr-2\\\">Success</span>\\n  <span class=\\\"badge badge-danger mr-2\\\">Danger</span>\\n  <span class=\\\"badge badge-warning mr-2\\\">Warning</span>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Buttons mit Badge</h2>\\n<p>\\n  Buttons können mit der Klasse\\n  <code>btn-with-badge</code>\\n  mit einem Badge versehen werden. Das Code-Beispiel befindet sich bei den\\n  <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/ui-elements/buttons\\\">Buttons</a>\\n  .\\n</p>\\n\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-with-badge mr-4\\\">\\n  Download\\n  <span class=\\\"badge badge-pill badge-dark\\\">9</span>\\n  <span class=\\\"sr-only\\\">unread messages</span>\\n</button>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-badges',\\n  templateUrl: './badges.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class BadgesComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Buttons</h1>\\n\\n<p class=\\\"lead\\\">Beim Klick auf einen Button, wird eine Aktion ausgelöst.</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Immer, um eine Aktion auszulösen, zu wiederrufen oder abzubrechen.</li>\\n  <li>\\n    Schreibweise immer Grossbuchstabe und dann klein: \\\"Speichern\\\", \\\"Abbrechen\\\", \\\"Suchen\\\".\\n    <br />\\n    Nie: \\\"speichern\\\" oder \\\"SPEICHERN\\\".\\n  </li>\\n  <li>\\n    Es ist zu unterscheiden zwischen:\\n    <ol>\\n      <li>\\n        Primäre Aktion\\n        <br />\\n        Löst die Hauptaktion auf der Seite aus, wie \\\"Speichern\\\" oder \\\"Erstellen\\\".\\n      </li>\\n      <li>\\n        Sekundäre Aktion\\n        <br />\\n        Aktionen, auf denen nicht der Fokus des Anwenders liegen soll, wie beispielsweise Abbrechen.\\n      </li>\\n    </ol>\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Buttons sind keine Navigationselemente. Wenn nur auf einen anderen Inhalt verlinkt wird, ohne\\n    dass eine Aktion ausgelöst wird, kommen Links zur Anwendung.\\n  </li>\\n  <li>\\n    Button-Gruppen sollten grundsätzlich nicht im Contentbereich verwendet werden. Stattdessen soll\\n    die\\n    <a routerLink=\\\"/styleguide/layout/functionbar\\\" class=\\\"highlight\\\">Function Bar</a>\\n    verwendet werden. Ausnahme: Wenn die Button-Gruppe nur einen Teilkontext des Contentbereichs\\n    betrifft.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout/functionbar\\\" class=\\\"highlight\\\">Function Bar</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/links\\\" class=\\\"highlight\\\">Links</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/badges\\\" class=\\\"highlight\\\">Badges</a>\\n  </li>\\n  <li><a routerLink=\\\"/styleguide/basics/icons\\\" class=\\\"highlight\\\">Icons</a></li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/progress-indicators\\\" class=\\\"highlight\\\">\\n      Progress Indicators\\n    </a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/usability/tastaturbedienbarkeit\\\" class=\\\"highlight\\\">\\n      Tastaturbedienbarkeit\\n    </a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Buttons sind (mit Ausnahme der Badges) Default Bootstrap Komponenten und in der\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://getbootstrap.com/docs/4.5/components/buttons/\\\"\\n        target=\\\"_blank\\\">\\n        Bootstrap Dokumentation\\n      </a>\\n      ausführlich dokumentiert.\\n    </p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Button-Typen</h2>\\n<p>\\n  <strong>Primary Buttons</strong>\\n  (\\n  <code>btn-primary</code>\\n  ) beschreiben die Hauptaktion des jeweiligen Kontexts wie z.B. \\\"Speichern\\\" oder \\\"Suchen\\\" und\\n  werden mit\\n  <span class=\\\"keyboard-key\\\">Enter</span>\\n  ausgelöst. Bei mehreren möglichen Aktionen ist der Primary Button immer ganz rechts anzuordnen.\\n  <br />\\n  Es soll nie mehr als ein Primary Button pro Seite verwendet werden. Falls ausnahmsweise doch\\n  mehrere Primary Buttons auf einer Seite nötig sind, dürfen sie nicht nahe beieinander stehen und\\n  es muss dem Benutzer immer klar ersichtlich sein, welchen der Buttons er mit\\n  <span class=\\\"keyboard-key\\\">Enter</span>\\n  auslösen wird.\\n</p>\\n<p>\\n  Für alle anderen Aktionen werden\\n  <strong>Standard Buttons</strong>\\n  (\\n  <code>btn-outline-primary</code>\\n  ) verwendet. Um die Arbeit zu erleichtern und den Code lesbarer zu machen, werden Buttons mit der\\n  <code>btn</code>\\n  Klasse automatisch als\\n  <code>btn-outline-primary</code>\\n  gerendert.\\n</p>\\n\\n<app-code-example src=\\\"ui-elements/buttons/buttons.component.html#primary-secondary\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\">Abbrechen</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Speichern</button>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Button-Gruppen</h2>\\n<p>\\n  Button-Gruppen sind nützlich um Buttons zusammenzufassen, die eine Beziehung miteinander haben.\\n  Die Buttons sollen logisch nach Verwendungshäufigkeit und Wichtigkeit in Gruppen aufgeteilt\\n  werden.\\n  <br />\\n  Horizontale Button-Gruppen sollen nur unterhalb von Formularen verwendet werden und nicht mehr als\\n  ein mal pro Seite.\\n  <br />\\n\\n  Alle Buttons in einer Gruppe sollten in der Regel gleich breit sein, dies trifft auch auf\\n  horizontale Gruppen zu.\\n  <a routerLink=\\\"/styleguide/layout/grid\\\" class=\\\"highlight\\\">Grid</a>\\n</p>\\n<app-code-example src=\\\"ui-elements/buttons/buttons.component.html#button-group\\\">\\n  <p>Vertikale Button-Gruppe in einem Block</p>\\n  <div class=\\\"btn-group-vertical\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\">Auf Grundbuch anmelden</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\">Notiz erfassen</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\">Stornieren</button>\\n  </div>\\n\\n  <p class=\\\"mt-3\\\">Vertikale Button-Gruppe mit Grid</p>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary w-100 mb-2\\\">Bearbeiten</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary w-100 mb-2\\\">Löschen</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary w-100 mb-2\\\">Zurück zur Übersicht</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary w-100 mb-2\\\">Publizieren</button>\\n    </div>\\n  </div>\\n\\n  <p class=\\\"mt-3\\\">Horizontale Button-Gruppe mit Grid</p>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8 d-flex\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary w-100 mr-2\\\">Abbrechen</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary w-100 mr-2\\\">Vorlage speichern</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary w-100 mr-2\\\">Speichern</button>\\n    </div>\\n  </div>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">In Input-Groups</h2>\\n<p>\\n  Wenn wir mit\\n  <code>input-group</code>\\n  Buttons an ein\\n  <code>&lt;input></code>\\n  \\\"kleben\\\" verwenden wir weisse Buttons:\\n</p>\\n<app-code-example src=\\\"ui-elements/buttons/buttons.component.html#inputGroup\\\">\\n  <div class=\\\"form-inline\\\">\\n    <div class=\\\"input-group\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"search\\\" placeholder=\\\"Suchen\\\" />\\n      <div class=\\\"input-group-append\\\">\\n        <button class=\\\"btn btn-light\\\" type=\\\"button\\\">\\n          <span class=\\\"fas fa-search\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</app-code-example>\\n\\n<h2 id=\\\"icon-buttons\\\" class=\\\"mt-5\\\">Button mit Icon</h2>\\n<p>\\n  Das Textlabel ist das wichtigste Element auf einem Button, denn es kommuniziert die Aktion, die\\n  ausgeführt wird.\\n  <br />\\n  Wenn immer möglich sollen deshalb Buttons mit einem Textlabel verwendet werden.\\n  <br />\\n  Buttons mit Icons können ganz einfach mit Hilfe von Font Awesome erstellt werden.\\n  <a routerLink=\\\"/styleguide/basics/icons\\\" class=\\\"highlight\\\">Icons</a>\\n  <br />\\n  Dabei sollen die Icons aus dem Bedag Standard Icon Set bevorzugt verwendet werden, damit unsere\\n  Applikationen ein einheitliches Look & Feel aufweisen.\\n</p>\\n<h3>Icon Buttons mit Text</h3>\\n<p>\\n  Icon Buttons mit Text können hilfreich sein, um visuelles Interesse zu generieren. Icon Buttons\\n  lenken die Aufmerksamkeit des Benutzers verstärkt auf den Button und sollten deshalb nur verwendet\\n  werden, wenn dies erwünscht ist.\\n  <br />\\n  Das Icon soll immer links vom Text platziert werden, ausser bei Richtungsangaben oder\\n  weiterführenden Aktionen.\\n</p>\\n<h3>Icon Buttons ohne Text</h3>\\n<p>\\n  Icon Buttons ohne Text sollten nur spärlich verwendet werden. Sie sind sinnvoll, wenn die\\n  Bedeutung des Icons für die grosse Mehrheit der Anwender sonnenklar ist und zusätzlicher Text eher\\n  verwirren würde. Gute Beispiele sind: Hamburgermenu, Fett/Kursiv/Unterstrichen im Editor,\\n  Play/Pause für Batch-Jobs.\\n  <br />\\n  Bei Icon-Buttons ohne Text wird die Button-Breite mit \\\"fa-fw\\\" fixiert, sodass alle Buttons gleich\\n  breit sind. Zudem muss bei textlosen Buttons ein\\n  <a routerLink=\\\"/styleguide/ui-elements/tooltips\\\" class=\\\"highlight\\\">Tooltip</a>\\n  vorhanden sein.\\n  <br />\\n</p>\\n\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark my-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Für mobile Applikationen müssen Icon-Buttons eine Mindestgrösse haben, dies kann mit\\n    <code>btn-lg</code>\\n    für kleine Viewport-Sizes erreicht werden.\\n  </div>\\n</div>\\n\\n<app-code-example src=\\\"ui-elements/buttons/buttons.component.html#icons\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\" ngbTooltip=\\\"Löschen\\\">\\n    <span class=\\\"fas fa-trash-alt fa-fw\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\" ngbTooltip=\\\"Drucken\\\">\\n    <span class=\\\"fas fa-print fa-fw\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\" ngbTooltip=\\\"Batchjob anhalten\\\">\\n    <span class=\\\"fas fa-pause fa-fw\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\">\\n    <span class=\\\"fas fa-envelope mr-2\\\"></span>\\n    Newsletter abonnieren\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\">\\n    Weiter\\n    <span class=\\\"fas fa-arrow-right ml-2\\\"></span>\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n    <span class=\\\"fas fa-check mr-2\\\"></span>\\n    Freigeben\\n  </button>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Buttons mit Badge</h2>\\n<p>\\n  Buttons können mit der Klasse\\n  <code>btn-with-badge</code>\\n  mit einem\\n  <a routerLink=\\\"/styleguide/ui-elements/badges\\\" class=\\\"highlight\\\">Badge</a>\\n  versehen werden\\n</p>\\n\\n<app-code-example src=\\\"ui-elements/buttons/buttons.component.html#badge\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-with-badge mr-4\\\">\\n    Warnungen anzeigen\\n    <span class=\\\"badge badge-pill badge-dark\\\">15</span>\\n  </button>\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-buttons',\\n  templateUrl: './buttons.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class ButtonsComponent {}\\n\";","export default \"export interface AddressData extends IndexedByFieldname {\\n  _id: string;\\n  name: string;\\n  vorname: string;\\n  company: string;\\n  email: string;\\n  phone: string;\\n  address: string;\\n  plz: number;\\n  ort: string;\\n}\\n/**\\n * This type definition is only required for accessing the data by using the field name as index.\\n * If you replace the sortAddressData function with sortBy or orderBy from underscore or lodash,\\n * you most likely won't need it.\\n */\\ntype IndexedByFieldname = { [index: string]: string | number };\\n\\nexport const ADDRESS_DATA: Array<AddressData> = [\\n  {\\n    _id: '5a65b29933c88887f184ffd4',\\n    name: 'Salazar',\\n    vorname: 'Yang',\\n    company: 'Hometown',\\n    email: 'salazaryang@hometown.com',\\n    phone: '+1 (815) 411-2873',\\n    address: 'Nassau Street 818',\\n    plz: 1064,\\n    ort: 'Layhill',\\n  },\\n  {\\n    _id: '5a65b299038c6e1b52421d81',\\n    name: 'Whitehead',\\n    vorname: 'Wells',\\n    company: 'Corporana',\\n    email: 'whiteheadwells@corporana.com',\\n    phone: '+1 (810) 443-3512',\\n    address: 'Chestnut Street 847',\\n    plz: 1297,\\n    ort: 'Rivereno',\\n  },\\n  {\\n    _id: '5a65b2995bbff8dc9b6b8518',\\n    name: 'Ward',\\n    vorname: 'Collier',\\n    company: 'Zillanet',\\n    email: 'wardcollier@zillanet.com',\\n    phone: '+1 (977) 547-3822',\\n    address: 'Lewis Place 478',\\n    plz: 7149,\\n    ort: 'Chapin',\\n  },\\n  {\\n    _id: '5a65b29994f0794facee7662',\\n    name: 'Sanders',\\n    vorname: 'Fox',\\n    company: 'Enaut',\\n    email: 'sandersfox@enaut.com',\\n    phone: '+1 (843) 461-2166',\\n    address: 'Vanderbilt Street 246',\\n    plz: 8091,\\n    ort: 'Robinson',\\n  },\\n  {\\n    _id: '5a65b299eebef1e8039bad94',\\n    name: 'Wiggins',\\n    vorname: 'Nieves',\\n    company: 'Exostream',\\n    email: 'wigginsnieves@exostream.com',\\n    phone: '+1 (827) 451-3835',\\n    address: 'Jackson Street 308',\\n    plz: 8649,\\n    ort: 'Carrsville',\\n  },\\n  {\\n    _id: '5a65b299b1b40887ab016711',\\n    name: 'Ramirez',\\n    vorname: 'Hart',\\n    company: 'Geologix',\\n    email: 'ramirezhart@geologix.com',\\n    phone: '+1 (983) 446-3189',\\n    address: 'Bedford Place 676',\\n    plz: 7752,\\n    ort: 'Needmore',\\n  },\\n  {\\n    _id: '5a65b29910246272cee7354f',\\n    name: 'Bray',\\n    vorname: 'Sears',\\n    company: 'Zaggle',\\n    email: 'braysears@zaggle.com',\\n    phone: '+1 (887) 495-2590',\\n    address: 'Furman Avenue 398',\\n    plz: 5870,\\n    ort: 'Tilden',\\n  },\\n  {\\n    _id: '5a65b299cee18a7022736e2f',\\n    name: 'Carey',\\n    vorname: 'Mendez',\\n    company: 'Vitricomp',\\n    email: 'careymendez@vitricomp.com',\\n    phone: '+1 (831) 464-3757',\\n    address: 'Stone Avenue 454',\\n    plz: 2418,\\n    ort: 'Echo',\\n  },\\n  {\\n    _id: '5a65b299a754de365a97319f',\\n    name: 'Roach',\\n    vorname: 'Mayer',\\n    company: 'Mixers',\\n    email: 'roachmayer@mixers.com',\\n    phone: '+1 (915) 416-3059',\\n    address: 'Beaumont Street 580',\\n    plz: 3062,\\n    ort: 'Matheny',\\n  },\\n  {\\n    _id: '5a65b29953acecc2f6a9acd3',\\n    name: 'Dianne',\\n    vorname: 'Hicks',\\n    company: 'Acruex',\\n    email: 'diannehicks@acruex.com',\\n    phone: '+1 (939) 476-2331',\\n    address: 'Moore Place 443',\\n    plz: 1857,\\n    ort: 'Adamstown',\\n  },\\n  {\\n    _id: '5a65b299c8dcd413daeacf2a',\\n    name: 'Gayle',\\n    vorname: 'Cote',\\n    company: 'Gology',\\n    email: 'gaylecote@gology.com',\\n    phone: '+1 (970) 559-2432',\\n    address: 'Arkansas Drive 580',\\n    plz: 2373,\\n    ort: 'Warren',\\n  },\\n  {\\n    _id: '5a65b299c1170ec75bffd8d5',\\n    name: 'Maria',\\n    vorname: 'Moon',\\n    company: 'Assistix',\\n    email: 'mariamoon@assistix.com',\\n    phone: '+1 (881) 403-3592',\\n    address: 'Poplar Street 499',\\n    plz: 2640,\\n    ort: 'Hartsville/Hartley',\\n  },\\n  {\\n    _id: '5a65b299ff94dc62b76545d2',\\n    name: 'Foster',\\n    vorname: 'Goodwin',\\n    company: 'Ziggles',\\n    email: 'fostergoodwin@ziggles.com',\\n    phone: '+1 (955) 517-3966',\\n    address: 'Portal Street 336',\\n    plz: 6900,\\n    ort: 'Ebro',\\n  },\\n  {\\n    _id: '5a65b2997787b485e5a0bfca',\\n    name: 'Fran',\\n    vorname: 'Griffith',\\n    company: 'Printspan',\\n    email: 'frangriffith@printspan.com',\\n    phone: '+1 (881) 503-2969',\\n    address: 'Lewis Avenue 768',\\n    plz: 6972,\\n    ort: 'Brandermill',\\n  },\\n  {\\n    _id: '5a65b2996e10b209bd660435',\\n    name: 'Reeves',\\n    vorname: 'Kemp',\\n    company: 'Maxemia',\\n    email: 'reeveskemp@maxemia.com',\\n    phone: '+1 (856) 512-2669',\\n    address: 'Brooklyn Avenue 833',\\n    plz: 7743,\\n    ort: 'Biehle',\\n  },\\n  {\\n    _id: '5a65b299e3af09fb91dc2dc9',\\n    name: 'Riley',\\n    vorname: 'Francis',\\n    company: 'Aquazure',\\n    email: 'rileyfrancis@aquazure.com',\\n    phone: '+1 (967) 466-2551',\\n    address: 'Locust Street 553',\\n    plz: 2125,\\n    ort: 'Shasta',\\n  },\\n  {\\n    _id: '5a65b2994661ee67056651b7',\\n    name: 'Herrera',\\n    vorname: 'Wise',\\n    company: 'Sybixtex',\\n    email: 'herrerawise@sybixtex.com',\\n    phone: '+1 (881) 494-3527',\\n    address: 'Cornelia Street 856',\\n    plz: 1715,\\n    ort: 'Brookfield',\\n  },\\n  {\\n    _id: '5a65b299546f8843b817a0dd',\\n    name: 'Leigh',\\n    vorname: 'Campos',\\n    company: 'Zilla',\\n    email: 'leighcampos@zilla.com',\\n    phone: '+1 (977) 570-3702',\\n    address: 'Lincoln Terrace 606',\\n    plz: 8134,\\n    ort: 'Dorneyville',\\n  },\\n  {\\n    _id: '5a65b2992516de18b79852fe',\\n    name: 'Cristina',\\n    vorname: 'Gilmore',\\n    company: 'Applidec',\\n    email: 'cristinagilmore@applidec.com',\\n    phone: '+1 (808) 548-3042',\\n    address: 'Grove Place 201',\\n    plz: 7746,\\n    ort: 'Robbins',\\n  },\\n  {\\n    _id: '5a65b2993451b9f82f5fa4c1',\\n    name: 'Mcconnell',\\n    vorname: 'Guzman',\\n    company: 'Neptide',\\n    email: 'mcconnellguzman@neptide.com',\\n    phone: '+1 (841) 445-2693',\\n    address: 'Robert Street 359',\\n    plz: 6212,\\n    ort: 'Richville',\\n  },\\n  {\\n    _id: '5a65b29938d44d972427ac09',\\n    name: 'Hobbs',\\n    vorname: 'Travis',\\n    company: 'Collaire',\\n    email: 'hobbstravis@collaire.com',\\n    phone: '+1 (808) 442-2106',\\n    address: 'Just Court 693',\\n    plz: 7201,\\n    ort: 'Colton',\\n  },\\n  {\\n    _id: '5a65b2990853031786fd703b',\\n    name: 'Paul',\\n    vorname: 'Donaldson',\\n    company: 'Housedown',\\n    email: 'pauldonaldson@housedown.com',\\n    phone: '+1 (962) 423-3375',\\n    address: 'Bushwick Court 488',\\n    plz: 6388,\\n    ort: 'Catharine',\\n  },\\n  {\\n    _id: '5a65b299fc5e490680f4f46f',\\n    name: 'Taylor',\\n    vorname: 'Hammond',\\n    company: 'Beadzza',\\n    email: 'taylorhammond@beadzza.com',\\n    phone: '+1 (880) 580-2863',\\n    address: 'Gem Street 557',\\n    plz: 7476,\\n    ort: 'Bergoo',\\n  },\\n  {\\n    _id: '5a65b299bf76799f34754389',\\n    name: 'Elise',\\n    vorname: 'Mclean',\\n    company: 'Dreamia',\\n    email: 'elisemclean@dreamia.com',\\n    phone: '+1 (959) 452-3760',\\n    address: 'Throop Avenue 352',\\n    plz: 1294,\\n    ort: 'Saranap',\\n  },\\n  {\\n    _id: '5a65b299e90112fce1053da1',\\n    name: 'Raquel',\\n    vorname: 'Houston',\\n    company: 'Comvex',\\n    email: 'raquelhouston@comvex.com',\\n    phone: '+1 (914) 402-2626',\\n    address: 'Rock Street 420',\\n    plz: 3325,\\n    ort: 'Westphalia',\\n  },\\n  {\\n    _id: '5a65b299174006a150a8d741',\\n    name: 'Cross',\\n    vorname: 'Cooke',\\n    company: 'Satiance',\\n    email: 'crosscooke@satiance.com',\\n    phone: '+1 (914) 565-2836',\\n    address: 'Graham Avenue 614',\\n    plz: 9233,\\n    ort: 'Lisco',\\n  },\\n  {\\n    _id: '5a65b2999f5c217c694d9f32',\\n    name: 'Clemons',\\n    vorname: 'Joyner',\\n    company: 'Supportal',\\n    email: 'clemonsjoyner@supportal.com',\\n    phone: '+1 (840) 526-2549',\\n    address: 'Seaview Court 501',\\n    plz: 7840,\\n    ort: 'Balm',\\n  },\\n  {\\n    _id: '5a65b299934cf069386f6646',\\n    name: 'Valerie',\\n    vorname: 'Collins',\\n    company: 'Knowlysis',\\n    email: 'valeriecollins@knowlysis.com',\\n    phone: '+1 (963) 406-2683',\\n    address: 'Montieth Street 263',\\n    plz: 5095,\\n    ort: 'Tonopah',\\n  },\\n  {\\n    _id: '5a65b29906e9dc18d67d5927',\\n    name: 'Deann',\\n    vorname: 'Frederick',\\n    company: 'Apex',\\n    email: 'deannfrederick@apex.com',\\n    phone: '+1 (961) 510-2518',\\n    address: 'Diamond Street 747',\\n    plz: 8172,\\n    ort: 'Broadlands',\\n  },\\n  {\\n    _id: '5a65b299c2dc13dd103163cf',\\n    name: 'Natasha',\\n    vorname: 'Hickman',\\n    company: 'Prosure',\\n    email: 'natashahickman@prosure.com',\\n    phone: '+1 (959) 534-2101',\\n    address: 'Sedgwick Street 157',\\n    plz: 1655,\\n    ort: 'Gila',\\n  },\\n  {\\n    _id: '5a65b299774ded67980581c3',\\n    name: 'Lizzie',\\n    vorname: 'Long',\\n    company: 'Malathion',\\n    email: 'lizzielong@malathion.com',\\n    phone: '+1 (814) 493-2908',\\n    address: 'Kenilworth Place 569',\\n    plz: 7071,\\n    ort: 'Cornucopia',\\n  },\\n  {\\n    _id: '5a65b2997743e49335744ae7',\\n    name: 'Bowman',\\n    vorname: 'Roy',\\n    company: 'Syntac',\\n    email: 'bowmanroy@syntac.com',\\n    phone: '+1 (871) 483-3012',\\n    address: 'Noble Street 623',\\n    plz: 6686,\\n    ort: 'Driftwood',\\n  },\\n  {\\n    _id: '5a65b2993670308c0ac56456',\\n    name: 'Jodi',\\n    vorname: 'Montgomery',\\n    company: 'Kindaloo',\\n    email: 'jodimontgomery@kindaloo.com',\\n    phone: '+1 (849) 506-3467',\\n    address: 'Degraw Street 508',\\n    plz: 2153,\\n    ort: 'Moscow',\\n  },\\n  {\\n    _id: '5a65b299bee75a900b39ce18',\\n    name: 'Harris',\\n    vorname: 'Bryant',\\n    company: 'Poshome',\\n    email: 'harrisbryant@poshome.com',\\n    phone: '+1 (855) 554-3953',\\n    address: 'Irvington Place 297',\\n    plz: 6562,\\n    ort: 'Waterford',\\n  },\\n  {\\n    _id: '5a65b29958e652c28612081b',\\n    name: 'Brooks',\\n    vorname: 'Sweeney',\\n    company: 'Quantalia',\\n    email: 'brookssweeney@quantalia.com',\\n    phone: '+1 (928) 517-3577',\\n    address: 'Dunham Place 601',\\n    plz: 8547,\\n    ort: 'Germanton',\\n  },\\n  {\\n    _id: '5a65b299d8c13d7af989d23d',\\n    name: 'Rodriguez',\\n    vorname: 'Lloyd',\\n    company: 'Combot',\\n    email: 'rodriguezlloyd@combot.com',\\n    phone: '+1 (906) 572-2774',\\n    address: 'Main Street 959',\\n    plz: 3768,\\n    ort: 'Calverton',\\n  },\\n  {\\n    _id: '5a65b299a2cdf194d3382520',\\n    name: 'David',\\n    vorname: 'Jarvis',\\n    company: 'Anocha',\\n    email: 'davidjarvis@anocha.com',\\n    phone: '+1 (876) 415-2334',\\n    address: 'John Street 280',\\n    plz: 1840,\\n    ort: 'Salvo',\\n  },\\n  {\\n    _id: '5a65b2993f90bb41dd25af27',\\n    name: 'Roman',\\n    vorname: 'Donovan',\\n    company: 'Digitalus',\\n    email: 'romandonovan@digitalus.com',\\n    phone: '+1 (850) 479-2977',\\n    address: 'Arlington Avenue 762',\\n    plz: 6441,\\n    ort: 'Marion',\\n  },\\n  {\\n    _id: '5a65b299368b48472b3a98dc',\\n    name: 'Alma',\\n    vorname: 'Silva',\\n    company: 'Dogspa',\\n    email: 'almasilva@dogspa.com',\\n    phone: '+1 (807) 460-2715',\\n    address: 'Hausman Street 514',\\n    plz: 4384,\\n    ort: 'Sanborn',\\n  },\\n  {\\n    _id: '5a65b2991361aae0a995cfea',\\n    name: 'Ladonna',\\n    vorname: 'Reid',\\n    company: 'Comstar',\\n    email: 'ladonnareid@comstar.com',\\n    phone: '+1 (981) 533-2804',\\n    address: 'Havens Place 324',\\n    plz: 6409,\\n    ort: 'Downsville',\\n  },\\n  {\\n    _id: '5a65b299e8ae714a72e10133',\\n    name: 'Rasmussen',\\n    vorname: 'Hays',\\n    company: 'Makingway',\\n    email: 'rasmussenhays@makingway.com',\\n    phone: '+1 (980) 546-2825',\\n    address: 'Polhemus Place 936',\\n    plz: 9987,\\n    ort: 'Rossmore',\\n  },\\n  {\\n    _id: '5a65b2990ba4ac22150acb22',\\n    name: 'Lawson',\\n    vorname: 'Melton',\\n    company: 'Zaphire',\\n    email: 'lawsonmelton@zaphire.com',\\n    phone: '+1 (968) 578-2844',\\n    address: 'Gain Court 302',\\n    plz: 8306,\\n    ort: 'Alleghenyville',\\n  },\\n  {\\n    _id: '5a65b299f7f4d34f48a0588f',\\n    name: 'Pena',\\n    vorname: 'Hooper',\\n    company: 'Petigems',\\n    email: 'penahooper@petigems.com',\\n    phone: '+1 (853) 578-3494',\\n    address: 'Essex Street 599',\\n    plz: 8568,\\n    ort: 'Tyro',\\n  },\\n  {\\n    _id: '5a65b299b06cee9f6b925592',\\n    name: 'Maynard',\\n    vorname: 'Carroll',\\n    company: 'Matrixity',\\n    email: 'maynardcarroll@matrixity.com',\\n    phone: '+1 (866) 551-3103',\\n    address: 'Dahill Road 270',\\n    plz: 1851,\\n    ort: 'Ballico',\\n  },\\n  {\\n    _id: '5a65b299419417936ae4c0bc',\\n    name: 'Tanisha',\\n    vorname: 'Vaughan',\\n    company: 'Acium',\\n    email: 'tanishavaughan@acium.com',\\n    phone: '+1 (838) 558-3135',\\n    address: 'Hicks Street 384',\\n    plz: 6740,\\n    ort: 'Jacksonwald',\\n  },\\n  {\\n    _id: '5a65b2998c64a5ac05ff00ee',\\n    name: 'Merritt',\\n    vorname: 'Hernandez',\\n    company: 'Krog',\\n    email: 'merritthernandez@krog.com',\\n    phone: '+1 (998) 446-3790',\\n    address: 'Ashland Place 841',\\n    plz: 2467,\\n    ort: 'Stouchsburg',\\n  },\\n  {\\n    _id: '5a65b299411bf2d1c4bc3295',\\n    name: 'Floyd',\\n    vorname: 'Harding',\\n    company: 'Strozen',\\n    email: 'floydharding@strozen.com',\\n    phone: '+1 (871) 469-2431',\\n    address: 'Bennet Court 242',\\n    plz: 8613,\\n    ort: 'Lacomb',\\n  },\\n  {\\n    _id: '5a65b2990868b4e79e977012',\\n    name: 'Leola',\\n    vorname: 'Barron',\\n    company: 'Filodyne',\\n    email: 'leolabarron@filodyne.com',\\n    phone: '+1 (919) 533-3575',\\n    address: 'Butler Place 861',\\n    plz: 5252,\\n    ort: 'Monument',\\n  },\\n  {\\n    _id: '5a65b2992e2db72bb3593643',\\n    name: 'Mallory',\\n    vorname: 'Cooper',\\n    company: 'Enersol',\\n    email: 'mallorycooper@enersol.com',\\n    phone: '+1 (838) 501-2635',\\n    address: 'Pulaski Street 560',\\n    plz: 1642,\\n    ort: 'Coldiron',\\n  },\\n  {\\n    _id: '5a65b299013fb50d5c669c8c',\\n    name: 'Lynch',\\n    vorname: 'Dunn',\\n    company: 'Skyplex',\\n    email: 'lynchdunn@skyplex.com',\\n    phone: '+1 (826) 446-3381',\\n    address: 'National Drive 361',\\n    plz: 3782,\\n    ort: 'Mansfield',\\n  },\\n  {\\n    _id: '5a65b29984c42e8797a9b087',\\n    name: 'Cora',\\n    vorname: 'Ramsey',\\n    company: 'Verton',\\n    email: 'coraramsey@verton.com',\\n    phone: '+1 (884) 447-3102',\\n    address: 'Polar Street 897',\\n    plz: 6642,\\n    ort: 'Northridge',\\n  },\\n  {\\n    _id: '5a65b2990db9586ce5e9755d',\\n    name: 'Inez',\\n    vorname: 'Oliver',\\n    company: 'Zentry',\\n    email: 'inezoliver@zentry.com',\\n    phone: '+1 (843) 546-3053',\\n    address: 'Ide Court 810',\\n    plz: 8466,\\n    ort: 'Brutus',\\n  },\\n  {\\n    _id: '5a65b2997b5119570f732ca6',\\n    name: 'Colleen',\\n    vorname: 'Lee',\\n    company: 'Oatfarm',\\n    email: 'colleenlee@oatfarm.com',\\n    phone: '+1 (987) 580-3482',\\n    address: 'McClancy Place 596',\\n    plz: 5603,\\n    ort: 'Leeper',\\n  },\\n  {\\n    _id: '5a65b299c54c935ed0b490af',\\n    name: 'Corine',\\n    vorname: 'Dawson',\\n    company: 'Viocular',\\n    email: 'corinedawson@viocular.com',\\n    phone: '+1 (897) 426-2138',\\n    address: 'Conselyea Street 151',\\n    plz: 5393,\\n    ort: 'Trucksville',\\n  },\\n  {\\n    _id: '5a65b299d515e5caa351db88',\\n    name: 'Schwartz',\\n    vorname: 'Stout',\\n    company: 'Solaren',\\n    email: 'schwartzstout@solaren.com',\\n    phone: '+1 (986) 561-3610',\\n    address: 'Tompkins Place 314',\\n    plz: 1164,\\n    ort: 'Sardis',\\n  },\\n  {\\n    _id: '5a65b2992b4c3e6ca474b6e1',\\n    name: 'Casey',\\n    vorname: 'Potts',\\n    company: 'Delphide',\\n    email: 'caseypotts@delphide.com',\\n    phone: '+1 (828) 485-3022',\\n    address: 'Williamsburg Street 341',\\n    plz: 7540,\\n    ort: 'Deercroft',\\n  },\\n  {\\n    _id: '5a65b299c6c34ae92c970052',\\n    name: 'Brooke',\\n    vorname: 'Farmer',\\n    company: 'Parcoe',\\n    email: 'brookefarmer@parcoe.com',\\n    phone: '+1 (899) 406-2073',\\n    address: 'Lake Street 244',\\n    plz: 1077,\\n    ort: 'Martell',\\n  },\\n  {\\n    _id: '5a65b29911913c496414e072',\\n    name: 'Bette',\\n    vorname: 'Mcdowell',\\n    company: 'Roughies',\\n    email: 'bettemcdowell@roughies.com',\\n    phone: '+1 (927) 545-3547',\\n    address: 'Cozine Avenue 663',\\n    plz: 5724,\\n    ort: 'Savage',\\n  },\\n];\\n\";","export default \"<div style=\\\"max-width: 70em\\\">\\n  <h1 class=\\\"mt-3 mb-4\\\">Data Tables</h1>\\n\\n  <p class=\\\"lead\\\">Data Tables stellen Daten geordnet in Zeilen und Spalten dar.</p>\\n\\n  <h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n  <ul>\\n    <li>Zur strukturierten Darstellung von grossen Datenmengen.</li>\\n    <li>\\n      Jede Spalte hat eine aussagekräftige Titelzeile. Bei Spalten, die nur Aktionsbuttons\\n      enthalten, ist eine Titelzeile optional.\\n    </li>\\n    <li>\\n      Aktionsbuttons, deren Kontext der Datensatz einer einzelnen Tabellenzeile ist, werden immer am\\n      rechten Rand der Zeile positioniert. Bei mehr als 2-3 Aktionen ist es besser, diese in ein\\n      Overflow-Menu auszulagern anstatt dichtgedrängte Gruppen von Icon-Buttons einzusetzen.\\n    </li>\\n    <li>\\n      Damit die Tabellen auch auf mobilen Geräten bedienbar bleiben, sollten sie mit\\n      <code>table-responsive</code>\\n      horizontal scrollbar gemacht werden. Mehr zu Responsive Tables in der\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://getbootstrap.com/docs/4.1/content/tables/#responsive-tables\\\"\\n        target=\\\"_blank\\\">\\n        Bootstrap Dokumentation\\n      </a>\\n      .\\n    </li>\\n    <li>\\n      Die \\\"Zebra\\\"-Musterung (\\n      <code>table-striped</code>\\n      ) steigert insbesondere bei grösseren Tabellen die Lesbarkeit und erleichtert die Orientierung\\n      in der Tabelle. Sie sollte deshalb durchgehend eingesetzt werden.\\n    </li>\\n  </ul>\\n\\n  <h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n  <ul>\\n    <li>Wenn es nur eine Spalte gibt</li>\\n  </ul>\\n\\n  <h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n  <ul class=\\\"related-elements\\\">\\n    <li><a routerLink=\\\"/styleguide/ui-elements/buttons\\\">Buttons</a></li>\\n    <li>\\n      <a routerLink=\\\"/styleguide/ui-elements/overflow-menu\\\">Overflow Menu</a>\\n    </li>\\n  </ul>\\n\\n  <div class=\\\"card mt-5\\\">\\n    <h2 class=\\\"card-header\\\">\\n      <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n      Implementierung\\n    </h2>\\n    <div class=\\\"card-body\\\">\\n      <p>\\n        Wir realisieren Data Tables in einfachen Fällen direkt mit den Mitteln von Angular (und\\n        <a\\n          class=\\\"external\\\"\\n          href=\\\"https://ng-bootstrap.github.io/#/components/pagination/examples\\\"\\n          target=\\\"_blank\\\">\\n          ngb-pagination\\n        </a>\\n        ).\\n      </p>\\n      <p>\\n        Damit generische Funktionalität nicht für jede Tabelle in einer Applikation dupliziert\\n        werden muss und damit alle Data Tables einer Applikation einfacher konsistent gehalten\\n        werden können, empfehlen wir das Erstellen einer wiederverwendbaren Data Table Komponente.\\n      </p>\\n      <p>\\n        Auf eine allgemeine Implementierung für alle Bedag Angular Applikationen verzichten wir, da\\n        eine solche Komponente alle möglichen Anforderungen der Applikationen berücksichtigen müsste\\n        und dadurch unnötig komplex würde. Eine Implementierung pro Applikation oder Gruppe von\\n        Applikationen erachten wir als sinnvoller.\\n      </p>\\n    </div>\\n  </div>\\n  <h2 class=\\\"mt-5\\\">Angular Data Table</h2>\\n</div>\\n<app-code-example\\n  basePath=\\\"ui-elements/datatables\\\"\\n  src=\\\"datatables.component.html#t,datatables.component.ts,data.ts\\\">\\n  <h3 id=\\\"tablecaption\\\">Adressdaten</h3>\\n  <div class=\\\"table-header\\\">\\n    <div class=\\\"btn-group dropdown\\\" ngbDropdown container=\\\"body\\\">\\n      <button class=\\\"btn btn-outline-primary\\\" ngbDropdownToggle>Auswahl</button>\\n      <div class=\\\"dropdown-menu\\\" ngbDropdownMenu>\\n        <button ngbDropdownItem (click)=\\\"processSelected('Exportiere')\\\">Exportieren</button>\\n        <button ngbDropdownItem (click)=\\\"processSelected('Lösche')\\\">Löschen</button>\\n      </div>\\n    </div>\\n    <div class=\\\"position-relative\\\">\\n      <input\\n        class=\\\"form-control pl-5\\\"\\n        placeholder=\\\"Filter...\\\"\\n        [(ngModel)]=\\\"searchTerm\\\"\\n        (keyup)=\\\"search()\\\" />\\n      <span class=\\\"fas fa-filter input-icon left-icon\\\"></span>\\n    </div>\\n  </div>\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-striped table-hover\\\" aria-describedby=\\\"tablecaption\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"py-0\\\" scope=\\\"col\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n              <input\\n                id=\\\"selectAll_checkbox\\\"\\n                type=\\\"checkbox\\\"\\n                class=\\\"custom-control-input\\\"\\n                [checked]=\\\"selectAll\\\"\\n                (change)=\\\"toggleSelectAll()\\\" />\\n              <label class=\\\"custom-control-label\\\" for=\\\"selectAll_checkbox\\\">&nbsp;</label>\\n            </div>\\n          </th>\\n          <th scope=\\\"col\\\">\\n            <a href (click)=\\\"sortBy('name')\\\">\\n              Name\\n              <span [class]=\\\"getColumnClassNames('name')\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n          </th>\\n          <th scope=\\\"col\\\">\\n            <a href (click)=\\\"sortBy('vorname')\\\">\\n              Vorname\\n              <span [class]=\\\"getColumnClassNames('vorname')\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n          </th>\\n          <th scope=\\\"col\\\">\\n            <a href (click)=\\\"sortBy('company')\\\">\\n              Firma\\n              <span [class]=\\\"getColumnClassNames('company')\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n          </th>\\n          <th scope=\\\"col\\\">\\n            <a href (click)=\\\"sortBy('email')\\\">\\n              E-Mail\\n              <span [class]=\\\"getColumnClassNames('email')\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n          </th>\\n          <th scope=\\\"col\\\">\\n            <a href (click)=\\\"sortBy('phone')\\\">\\n              Telefon\\n              <span [class]=\\\"getColumnClassNames('phone')\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n          </th>\\n          <th scope=\\\"col\\\">\\n            <a href (click)=\\\"sortBy('address')\\\">\\n              Strasse\\n              <span [class]=\\\"getColumnClassNames('address')\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n          </th>\\n          <th scope=\\\"col\\\">\\n            <a href (click)=\\\"sortBy('plz')\\\">\\n              PLZ\\n              <span [class]=\\\"getColumnClassNames('plz')\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n          </th>\\n          <th scope=\\\"col\\\">\\n            <a href (click)=\\\"sortBy('ort')\\\">\\n              Ort\\n              <span [class]=\\\"getColumnClassNames('ort')\\\" aria-hidden=\\\"true\\\"></span>\\n            </a>\\n          </th>\\n          <th scope=\\\"col\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let a of pagedItems; let i = index\\\" (click)=\\\"showModal(userDetail, i)\\\">\\n          <td class=\\\"py-0\\\" (click)=\\\"$event.stopPropagation()\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n              <input\\n                id=\\\"checkbox_{{ i }}\\\"\\n                type=\\\"checkbox\\\"\\n                class=\\\"custom-control-input\\\"\\n                [checked]=\\\"isSelected(i)\\\"\\n                (change)=\\\"toggleSelection(i)\\\"\\n                (keydown)=\\\"focusNextCheckbox($event, i)\\\" />\\n              <label class=\\\"custom-control-label\\\" for=\\\"checkbox_{{ i }}\\\">&nbsp;</label>\\n            </div>\\n          </td>\\n          <td>{{ a.name }}</td>\\n          <td>{{ a.vorname }}</td>\\n          <td>{{ a.company }}</td>\\n          <td (click)=\\\"$event.stopPropagation()\\\">\\n            <a href=\\\"mailto:{{ a.email }}\\\">{{ a.email }}</a>\\n          </td>\\n          <td>{{ a.phone }}</td>\\n          <td>{{ a.address }}</td>\\n          <td>{{ a.plz }}</td>\\n          <td>{{ a.ort }}</td>\\n          <td class=\\\"text-right py-0\\\" (click)=\\\"$event.stopPropagation()\\\">\\n            <div\\n              class=\\\"dropdown overflow-menu\\\"\\n              ngbDropdown\\n              placement=\\\"bottom-right\\\"\\n              container=\\\"body\\\">\\n              <button class=\\\"btn btn-outline-primary btn-sm\\\" ngbDropdownToggle>\\n                <span class=\\\"fa-fw fas fa-ellipsis-v\\\"></span>\\n              </button>\\n              <div class=\\\"dropdown-menu\\\" ngbDropdownMenu>\\n                <button ngbDropdownItem (click)=\\\"showModal(userDetail, i)\\\">Details anzeigen</button>\\n                <button ngbDropdownItem (click)=\\\"showAlert(a, 'Nach aktuellster Adresse suchen')\\\">\\n                  Nach aktuellster Adresse suchen\\n                </button>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <button ngbDropdownItem (click)=\\\"showAlert(a, 'In neue Liste hinzufügen')\\\">\\n                  In neue Liste hinzufügen\\n                </button>\\n                <button ngbDropdownItem (click)=\\\"showAlert(a, 'Aus dieser Liste entfernen')\\\">\\n                  Aus dieser Liste entfernen\\n                </button>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <button ngbDropdownItem (click)=\\\"showAlert(a, 'Editieren')\\\">Editieren</button>\\n                <button ngbDropdownItem (click)=\\\"showAlert(a, 'Duplizieren')\\\">Duplizieren</button>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <button ngbDropdownItem (click)=\\\"showAlert(a, 'Löschen')\\\">Löschen</button>\\n              </div>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"table-footer\\\">\\n    <ngb-pagination\\n      aria-label=\\\"Default pagination\\\"\\n      [collectionSize]=\\\"addressData.length\\\"\\n      [page]=\\\"page\\\"\\n      [pageSize]=\\\"pageSize\\\"\\n      [maxSize]=\\\"7\\\"\\n      [boundaryLinks]=\\\"true\\\"\\n      (pageChange)=\\\"setPage($event)\\\"></ngb-pagination>\\n    <ng-select\\n      style=\\\"width: 70px\\\"\\n      class=\\\"ml-2\\\"\\n      [items]=\\\"pageSizes\\\"\\n      [(ngModel)]=\\\"pageSize\\\"\\n      (ngModelChange)=\\\"setPage(1)\\\"\\n      [searchable]=\\\"false\\\"\\n      [clearable]=\\\"false\\\"></ng-select>\\n  </div>\\n\\n  <ng-template #userDetail let-modal>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Personendetail</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('[x] click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <p>\\n        <strong>{{ selectedForDetail.vorname }} {{ selectedForDetail.name }}</strong>\\n        <br />\\n        {{ selectedForDetail.address }}\\n        <br />\\n        {{ selectedForDetail.plz }} {{ selectedForDetail.ort }}\\n      </p>\\n    </div>\\n  </ng-template>\\n</app-code-example>\\n<div style=\\\"max-width: 70em\\\">\\n  <div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark my-5\\\">\\n    <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n    <div>\\n      Vorsicht mit Row-Clicks, die Aktionen auslösen: Es muss gewährleistet werden, dass die mit dem\\n      Row-Click ausgelöste Funktion auch mit der Tastatur anwählbar ist. Dies kann mit einem Button,\\n      einem Eintrag im Overflow Menu oder einem Link ermöglicht werden.\\n    </div>\\n  </div>\\n\\n  <h2 class=\\\"mt-5\\\">Pagination</h2>\\n  <p>\\n    Die Advanced Pagination von ng-bootstrap kommt standardmässig bei allen Datatables zum Einsatz\\n    und ist immer unten links zu platzieren.\\n    <br />\\n    Nur wenn sicher ist, dass nie mehr als eine Seite angezeigt werden muss, kann auf die\\n    Paginierung verzichtet werden.\\n  </p>\\n  <ul>\\n    <li>\\n      Bei mehr als 7 Seiten soll eine Ellipse die überzähligen Seiten ausblenden. Dies wird mit dem\\n      Attribut\\n      <code>[maxSize]=\\\"7\\\"</code>\\n      gesetzt.\\n    </li>\\n    <li>\\n      Der Selektor für Anzahl Ergebnisse pro Seite ist optional und soll nur eingesetzt werden, wenn\\n      er dem Benutzer einen Mehrwert bietet.\\n    </li>\\n  </ul>\\n</div>\\n\";","export default \"import { Component, OnInit, ViewEncapsulation } from '@angular/core';\\nimport { ADDRESS_DATA, AddressData } from './data';\\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\\nimport { AlertHolderDirective } from '../../../bedag-components/alert/alert-holder.directive';\\nimport { CustomMaxWidthComponent } from '../../../bedag-components/layout/custom-max-width-component';\\n\\n@Component({\\n  selector: 'app-tables',\\n  templateUrl: './datatables.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class DatatablesComponent implements OnInit, CustomMaxWidthComponent {\\n  maxWidth = '100%';\\n\\n  addressData: Array<AddressData> = [];\\n  pagedItems: Array<AddressData> = [];\\n  selected: number[] = [];\\n  sortedBy!: string;\\n  sortedAscending!: boolean;\\n  searchTerm!: string;\\n  page = 1;\\n  pageSize = 5;\\n  pageSizes = [5, 10, 25, 100];\\n  modal!: NgbModalRef;\\n  selectAll = false;\\n  selectedForDetail!: AddressData;\\n\\n  constructor(\\n    private readonly modalService: NgbModal,\\n    private readonly alerts: AlertHolderDirective\\n  ) {}\\n\\n  ngOnInit(): void {\\n    this.addressData = ADDRESS_DATA;\\n    this.sortBy('name');\\n  }\\n\\n  getColumnClassNames(column: string): string {\\n    let classNames = 'fas fa-sort';\\n    if (this.sortedBy === column) {\\n      classNames += this.sortedAscending ? '-up' : '-down';\\n      classNames += ' text-primary';\\n    }\\n    return classNames;\\n  }\\n\\n  /**\\n   * This function could easily be replaced by the sortBy or orderBy functions from underscore or\\n   * lodash, but we don't want to force the dependency on the users.\\n   */\\n  private sortAddressData(): void {\\n    this.addressData.sort((a, b) =>\\n      a[this.sortedBy] < b[this.sortedBy] ? -1 : a[this.sortedBy] > b[this.sortedBy] ? 1 : 0\\n    );\\n  }\\n\\n  sortBy(field: string): boolean {\\n    if (this.sortedBy === field) {\\n      this.sortedAscending = !this.sortedAscending;\\n      this.addressData.reverse();\\n    } else {\\n      this.sortedBy = field;\\n      this.sortedAscending = true;\\n      this.sortAddressData();\\n    }\\n\\n    this.setPage(1);\\n    return false; // do not follow the href\\n  }\\n\\n  search(): void {\\n    this.addressData = ADDRESS_DATA.filter(\\n      (item) => JSON.stringify(item).toLowerCase().indexOf(this.searchTerm.toLowerCase()) !== -1\\n    );\\n\\n    if (this.sortedBy) {\\n      this.sortAddressData();\\n\\n      if (!this.sortedAscending) {\\n        this.addressData.reverse();\\n      }\\n    }\\n\\n    this.setPage(1);\\n  }\\n\\n  setPage(page: number): void {\\n    this.page = page;\\n    const startIndex = (this.page - 1) * this.pageSize;\\n    const endIndex = Math.min(startIndex + this.pageSize, this.addressData.length);\\n    this.pagedItems = this.addressData.slice(startIndex, endIndex);\\n    this.selected = [];\\n    this.selectAll = false;\\n  }\\n\\n  showModal(content: unknown, index: number): boolean {\\n    this.selectedForDetail = this.pagedItems[index];\\n    this.modal = this.modalService.open(content);\\n    return false;\\n  }\\n\\n  isSelected(i: number): boolean {\\n    return this.selectAll || this.selected.includes(i);\\n  }\\n\\n  toggleSelection(i: number): void {\\n    if (this.selected.includes(i)) {\\n      this.selected = this.selected.filter((n) => n !== i);\\n    } else {\\n      this.selected.push(i);\\n    }\\n  }\\n\\n  toggleSelectAll(): void {\\n    this.selectAll = !this.selectAll;\\n    if (!this.selectAll) {\\n      this.selected = [];\\n    }\\n  }\\n\\n  focusNextCheckbox(event: KeyboardEvent, i: number): void {\\n    switch (event.key) {\\n      case 'ArrowDown':\\n        document.getElementById(`checkbox_${i + 1}`)?.focus();\\n        break;\\n      case 'ArrowUp':\\n        document.getElementById(`checkbox_${i - 1}`)?.focus();\\n        break;\\n    }\\n  }\\n\\n  showAlert(address: AddressData, alertText: string): boolean {\\n    this.alerts.success(`${alertText} wurde ausgewählt für ${address.vorname} ${address.name}`);\\n    return false;\\n  }\\n\\n  processSelected(action: string): boolean {\\n    if (!this.selectAll && this.selected.length < 1) {\\n      this.alerts.success('Keine Einträge ausgewählt');\\n    } else {\\n      let text = `${action} `;\\n      if (this.selectAll) {\\n        text += this.pagedItems.map((a) => `${a.vorname} ${a.name}`).join(', ');\\n      } else {\\n        text += this.selected\\n          .map((i) => `${this.pagedItems[i].vorname} ${this.pagedItems[i].name}`)\\n          .join(', ');\\n      }\\n      this.alerts.success(text);\\n    }\\n    return false;\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Dividers</h1>\\n\\n<p class=\\\"lead\\\">Dividers gruppieren Inhalte</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Wenn Inhalte in mentale Einheiten gruppiert werden sollen, um dem Nutzer mehr Struktur und\\n    Orientierung zu bieten. Mentale Einheiten sind z.B. Lieferadresse, Rechnungsadresse,\\n    Zahlungsmodalitäten, etc.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul class=\\\"mb-5\\\">\\n  <li>Wenn nach Titeln eine Tabelle folgt.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements mb-5\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/basics/typography\\\" class=\\\"highlight\\\">Typographie</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms\\\" class=\\\"highlight\\\">Forms</a>\\n  </li>\\n</ul>\\n\\n<app-code-example src=\\\"ui-elements/dividers/dividers.component.html#de\\\">\\n  <h2 class=\\\"title-divider\\\">Title Divider</h2>\\n  <br />\\n  Standard HTML-Divider:\\n  <hr />\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-dividers',\\n  templateUrl: './dividers.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class DividersComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Drop-Down Menu</h1>\\n\\n<p class=\\\"lead\\\">\\n  Das Drop-Down Menu fasst eine Gruppe von Buttons zusammen, um Platz zu sparen oder um bessere\\n  Übersicht zu schaffen.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Wenn es zu wenig Platz hat für Buttons, z.B. in Tabellen</li>\\n  <li>Wenn es eine Gruppe von Aktionen gibt, die zusammengehören.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>Wenn Aktionen sehr häufig verwendet werden, sollten sie möglichst direkt anklickbar sein.</li>\\n  <li>\\n    Aktionen, die thematisch nicht zusammen passen, sollen möglichst nicht im gleichen Drop-Down\\n    Menu sein. Ausnahme: das\\n    <a routerLink=\\\"/styleguide/ui-elements/overflow-menu\\\" class=\\\"highlight\\\">Overflow Menu</a>\\n    .\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/select-dropdowns\\\" class=\\\"highlight\\\">\\n      Select und Multiselect Dropdowns\\n    </a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/overflow-menu\\\" class=\\\"highlight\\\">Overflow Menu</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/buttons\\\" class=\\\"highlight\\\">Buttons</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout/functionbar\\\" class=\\\"highlight\\\">Function Bar</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"card my-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    Für Drop-down Menus verwenden wir das\\n    <a\\n      class=\\\"external\\\"\\n      href=\\\"https://ng-bootstrap.github.io/#/components/dropdown/examples\\\"\\n      target=\\\"_blank\\\">\\n      Bootstrap-Element Dropdown\\n    </a>\\n  </div>\\n</div>\\n\\n<app-code-example src=\\\"ui-elements/dropdown-menu/dropdown-menu.component.html#dropdown-menu\\\">\\n  <div ngbDropdown>\\n    <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>Export</button>\\n    <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n      <button ngbDropdownItem>Als CSV-Datei</button>\\n      <button ngbDropdownItem>Als Statistiklieferung (eCH-0099)</button>\\n      <button ngbDropdownItem>Als Gesamtdatenbestand (eCH-0020)</button>\\n    </div>\\n  </div>\\n</app-code-example>\\n\";","export default \"import { Component } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-dropdown-menu',\\n  templateUrl: './dropdown-menu.component.html',\\n})\\nexport class DropdownMenuComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Autocompletion</h1>\\n\\n<p class=\\\"lead\\\">\\n  Unterstützt Benutzer bei der effizienten Suche nach Inhalten für Formulareingabefelder.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Wird in Suchfeldern eingesetzt, sobald der Nutzer mit Tippen beginnt.\\n    <br />\\n    Je nach Grösse des Datasets erst ab dem zweiten oder dritten Buchstaben anzeigen, um die\\n    Applikation nicht zu verlangsamen.\\n  </li>\\n  <li>\\n    Wenn unterschiedliche Kategorien von Daten in einem Autocomplete-Popup angezeigt werden, soll\\n    die Kategorie-Bezeichnung ebenfalls angezeigt werden. Dazu kann das Autocomplete-Popup\\n    individuell gestaltet werden (Siehe Beispiel mit Template).\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Wenn keine sinnvollen Vorschläge gemacht werden können oder diese nicht sinnvoll unterschieden\\n    werden können.\\n    <br />\\n    z.B. Eingabe: \\\"54\\\", wenn dies die Postleitzahl, die Hausnummer oder die Kundennummer sein kann.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/\\\" class=\\\"highlight\\\">Forms</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Für die Umsetzung des Autocomplete verwenden wir\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://ng-bootstrap.github.io/#/components/typeahead/api\\\"\\n        target=\\\"_blank\\\">\\n        ngbTypeahead\\n      </a>\\n      .\\n      <br />\\n      In den Typescript Files der Code-Beispiele befinden sich zwei verschiedene Suchalgorithmen,\\n      auf die man aufbauen kann.\\n    </p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Einfaches Autocomplete</h2>\\n<app-code-example\\n  basePath=\\\"ui-elements/forms/autocompletion\\\"\\n  src=\\\"autocompletion-demo.component.html#basic,autocompletion-demo.component.ts,data.ts\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-10 col-md-6 col-lg-4\\\">\\n      <label for=\\\"search-country\\\" class=\\\"sr-only\\\">Land suchen</label>\\n      <div class=\\\"input-group\\\">\\n        <input\\n          id=\\\"search-country\\\"\\n          placeholder=\\\"Land suchen\\\"\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"country\\\"\\n          [ngbTypeahead]=\\\"searchCountries\\\"\\n          [editable]=\\\"false\\\" />\\n        <div class=\\\"input-group-append\\\">\\n          <div class=\\\"input-group-text\\\">\\n            <span class=\\\"fas fa-search\\\"></span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Autocomplete mit Template</h2>\\n<app-code-example\\n  basePath=\\\"ui-elements/forms/autocompletion\\\"\\n  src=\\\"autocompletion-demo.component.html#complex,autocompletion-demo.component.ts,data.ts\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-10 col-md-6 col-lg-4\\\">\\n      <label for=\\\"search-item\\\" class=\\\"sr-only\\\">Land, Kanton, Ort, PLZ</label>\\n      <div class=\\\"input-group\\\">\\n        <input\\n          id=\\\"search-item\\\"\\n          placeholder=\\\"Land, Kanton, Ort, PLZ\\\"\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"item\\\"\\n          [ngbTypeahead]=\\\"searchLocation\\\"\\n          [resultTemplate]=\\\"itemTemplate\\\"\\n          [inputFormatter]=\\\"formatItem\\\"\\n          [editable]=\\\"false\\\" />\\n        <div class=\\\"input-group-append\\\">\\n          <div class=\\\"input-group-text\\\">\\n            <span class=\\\"fas fa-search\\\"></span>\\n          </div>\\n        </div>\\n      </div>\\n      <ng-template #itemTemplate let-r=\\\"result\\\" let-t=\\\"term\\\">\\n        <div class=\\\"autocomplete-result\\\">\\n          <ngb-highlight [result]=\\\"r.shortNameDe\\\" [term]=\\\"t\\\"></ngb-highlight>\\n          <ngb-highlight\\n            class=\\\"text-secondary float-right ml-4\\\"\\n            [result]=\\\"r.type\\\"\\n            [term]=\\\"t\\\"></ngb-highlight>\\n        </div>\\n      </ng-template>\\n    </div>\\n  </div>\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\nimport { Observable, OperatorFunction } from 'rxjs';\\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\\n\\nimport { DATA } from './data';\\n\\nconst MAX_SEARCH_RESULTS = 10;\\n\\n@Component({\\n  selector: 'app-buttons',\\n  templateUrl: './autocompletion-demo.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class AutocompletionDemoComponent {\\n  private readonly countries: string[] = DATA.filter((t) => t.type === 'Land').map(\\n    (t) => t.shortNameDe\\n  );\\n  private readonly data: Item[] = DATA.map((item) => new Item(item.type, item.shortNameDe));\\n  public country!: string;\\n\\n  public item!: Item;\\n\\n  /** EXAMPLE Simple search method\\n   * Results that start with the exact search term will be shown first.\\n   * This search algorithm is suited for data sets consisting of single words.\\n   * For a more complete algorithm see below.\\n   */\\n  searchCountries: OperatorFunction<string, readonly string[]> = (text$: Observable<string>) =>\\n    text$.pipe(\\n      debounceTime(200),\\n      distinctUntilChanged(),\\n      filter((term) => term.length > 0),\\n      map((term) => {\\n        const normalizedTerm = term.toLowerCase().trim();\\n        const startsWith = this.countries\\n          .filter((c) => c.toLowerCase().startsWith(normalizedTerm))\\n          .slice(0, MAX_SEARCH_RESULTS);\\n        const remaining = MAX_SEARCH_RESULTS - startsWith.length;\\n        if (remaining === 0) {\\n          return startsWith;\\n        }\\n        const contains = this.countries\\n          .filter((c) => c.toLowerCase().includes(normalizedTerm, 1))\\n          .slice(0, remaining);\\n        return startsWith.concat(contains);\\n      })\\n    );\\n\\n  /** EXAMPLE Complex search method\\n   * This search algorithm is suited for data sets consisting of multiple words.\\n   * 1st priority: Results that start with the exact search term.\\n   * 2nd priority: Results that contain a word, starting with the exact search term.\\n   * 3rd priority: Results containing the search term anywhere.\\n   */\\n  searchLocation: OperatorFunction<string, readonly Item[]> = (text$: Observable<string>) =>\\n    text$.pipe(\\n      debounceTime(200),\\n      distinctUntilChanged(),\\n      filter((term) => term.length > 0),\\n      map((term) => {\\n        const normalizedTerm = term.toLowerCase().trim();\\n        let result = this.data\\n          .filter((c) => c.startsWith(normalizedTerm))\\n          .slice(0, MAX_SEARCH_RESULTS);\\n        let remaining = MAX_SEARCH_RESULTS - result.length;\\n\\n        if (remaining > 0) {\\n          const tokenMatches = this.data\\n            .filter((c) => !result.includes(c))\\n            .filter((c) => c.tokenMatch(normalizedTerm))\\n            .slice(0, MAX_SEARCH_RESULTS);\\n          result = result.concat(tokenMatches);\\n          remaining = MAX_SEARCH_RESULTS - result.length;\\n        }\\n\\n        if (remaining > 0) {\\n          const contains = this.data\\n            .filter((c) => !result.includes(c))\\n            .filter((c) => c.matches(normalizedTerm))\\n            .slice(0, remaining);\\n          result = result.concat(contains);\\n        }\\n        return result;\\n      })\\n    );\\n\\n  formatItem(item: Item): string {\\n    return `${item.shortNameDe}`;\\n  }\\n}\\n\\nclass Item {\\n  constructor(public type: string, public shortNameDe: string) {}\\n\\n  public startsWith(term: string): boolean {\\n    return this.shortNameDe.toLowerCase().startsWith(term);\\n  }\\n\\n  public tokenMatch(term: string): boolean {\\n    const terms = term.split(/\\\\s+/);\\n    const tokens = this.shortNameDe.toLowerCase().split(/\\\\s+/);\\n    let tokenIndex = -1;\\n    for (const termToken of terms) {\\n      let found = false;\\n      for (let i = tokenIndex + 1; i < tokens.length; i++) {\\n        if (tokens[i].startsWith(termToken)) {\\n          tokenIndex = i;\\n          found = true;\\n          break;\\n        }\\n      }\\n      if (!found) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  }\\n\\n  public matches(term: string): boolean {\\n    return this.shortNameDe.toLowerCase().indexOf(term) >= 0;\\n  }\\n}\\n\";","export default \"export const DATA: Array<{ type: string; shortNameDe: string }> = [\\n  {\\n    type: 'Land',\\n    shortNameDe: 'Schweiz',\\n  },\\n  {\\n    type: 'Land',\\n    shortNameDe: 'Deutschland',\\n  },\\n  {\\n    type: 'Land',\\n    shortNameDe: 'Italien',\\n  },\\n  {\\n    type: 'Land',\\n    shortNameDe: 'Spanien',\\n  },\\n  {\\n    type: 'Land',\\n    shortNameDe: 'Frankreich',\\n  },\\n  {\\n    type: 'Land',\\n    shortNameDe: 'Belgien',\\n  },\\n  {\\n    type: 'Land',\\n    shortNameDe: 'Jordanien',\\n  },\\n  {\\n    type: 'Land',\\n    shortNameDe: 'Kolumbien',\\n  },\\n  {\\n    type: 'Land',\\n    shortNameDe: 'Venezuela',\\n  },\\n  {\\n    type: 'Ort',\\n    shortNameDe: 'Bern',\\n  },\\n  {\\n    type: 'Ort',\\n    shortNameDe: 'Zürich',\\n  },\\n  {\\n    type: 'Ort',\\n    shortNameDe: 'St. Gallen',\\n  },\\n  {\\n    type: 'Ort',\\n    shortNameDe: 'Fribourg',\\n  },\\n  {\\n    type: 'Ort',\\n    shortNameDe: 'Ostermundigen',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '3052 (Zollikofen)',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '3421 (Rüti b. Lyssach)',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '3421 (Lyssach)',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '6274 (Eschenbach LU)',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '6000 (Luzern)',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '3000 (Bern)',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '3011 (Bern)',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '3012 (Bern)',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '3013 (Bern)',\\n  },\\n  {\\n    type: 'PLZ',\\n    shortNameDe: '8000 (Zürich)',\\n  },\\n  {\\n    type: 'Kanton',\\n    shortNameDe: 'Bern',\\n  },\\n  {\\n    type: 'Kanton',\\n    shortNameDe: 'Freiburg',\\n  },\\n  {\\n    type: 'Kanton',\\n    shortNameDe: 'Wallis',\\n  },\\n  {\\n    type: 'Kanton',\\n    shortNameDe: 'Graubünden',\\n  },\\n  {\\n    type: 'Kanton',\\n    shortNameDe: 'Tessin',\\n  },\\n  {\\n    type: 'Kanton',\\n    shortNameDe: 'Zürich',\\n  },\\n  {\\n    type: 'Kanton',\\n    shortNameDe: 'Basel Stadt',\\n  },\\n];\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Datepicker</h1>\\n<p class=\\\"lead\\\">Ein Datepicker ermöglicht die Auswahl eines Kalenderdatums.</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Wenn in Formularen ein Datum auszuwählen ist.</li>\\n  <li>Klickt der Nutzer ins Feld, kann das Datum über die Tastatur eingegeben werden.</li>\\n  <li>Bei Aufruf, steht ein Beispiel im gewünschten Format ausgegraut im Feld. (12.04.1974)</li>\\n  <li>\\n    Bei der Auswahl von – bis Daten werden die beiden Datumsfelder idealerweise horizontal\\n    nebeneinander abgebildet.\\n  </li>\\n  <li>\\n    Das Eingabefeld sollte nicht viel grösser sein, als das Datum Raum beansprucht.\\n    <a routerLink=\\\"/styleguide/layout/grid\\\" class=\\\"highlight\\\">Grid</a>\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/ui-elements/forms/\\\">Forms</a></li>\\n</ul>\\n\\n<div class=\\\"card my-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Als Datepicker verwenden wir den\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://ng-bootstrap.github.io/#/components/datepicker/examples\\\"\\n        target=\\\"_blank\\\">\\n        Datepicker von ng-bootstrap\\n      </a>\\n      , wir zeigen aber entgegen dem Standardverhalten einen Footer an, der den Benutzer das\\n      aktuelle Datum wählen lässt.\\n    </p>\\n    <p>\\n      Da das Erstellen des Footers sehr mühsam ist, sobald mehr als ein Datepicker auf einer Maske\\n      ist, gibt es eine Komponente um dies zu kapseln. Diese kann sich dann auch um allfällige\\n      weiterführende Validierungen und um die Umwandlung ins fürs Backend gewünschte Datumsformat\\n      kümmern. Standardmässig ist ein Adapter für das ISO-Format gesetzt, so dass die Komponente\\n      sehr einfach den bisherigen\\n      <code>&lt;bsg-datepicker></code>\\n      ersetzen kann.\\n    </p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Datum in einem Formular</h2>\\n<p>\\n  Wird ein Datumsfeld in einem Formular verwendet, muss die Breite wie bei den anderen\\n  Formularfeldern mittels\\n  <a routerLink=\\\"/styleguide/layout/grid\\\" class=\\\"highlight\\\">Grid</a>\\n  definiert werden. Idealerweise ist es trotzdem nicht zu gross, aber in diesem Fall ist das\\n  Erscheinungsbild des Formulars höher zu gewichten.\\n</p>\\n<app-code-example\\n  src=\\\"ui-elements/forms/datepicker/datepicker-demo.component.html#form,ui-elements/forms/datepicker/datepicker-demo.component.ts\\\">\\n  <form>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"my-label\\\" for=\\\"birthdate\\\">Geburtsdatum</label>\\n        <app-datepicker id=\\\"birthdate\\\" name=\\\"birthdate\\\" [(ngModel)]=\\\"birthdate\\\"></app-datepicker>\\n      </div>\\n    </div>\\n  </form>\\n  {{ birthdate | json }}\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Alleinstehendes Datum</h2>\\n<p>\\n  Wird ein Datepicker alleine verwendet, kann die Klasse\\n  <code>single-datepicker</code>\\n  verwendet werden. Dies gibt dem Eingabefeld die optimale Breite. In einem Formular wird ein\\n  solches Datumsfeld jedoch aus der Reihe fallen und soll deshalb nicht verwendet werden.\\n</p>\\n<app-code-example\\n  src=\\\"ui-elements/forms/datepicker/datepicker-demo.component.html#single,ui-elements/forms/datepicker/datepicker-demo.component.ts\\\">\\n  <form>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group single-datepicker\\\">\\n        <label class=\\\"my-label\\\" for=\\\"targetDate\\\">Stichdatum</label>\\n        <app-datepicker id=\\\"targetDate\\\" name=\\\"targetDate\\\" [(ngModel)]=\\\"targetDate\\\"></app-datepicker>\\n      </div>\\n    </div>\\n  </form>\\n  {{ targetDate | json }}\\n</app-code-example>\\n\";","export default \"import { Component } from '@angular/core';\\n\\n@Component({\\n  templateUrl: './datepicker-demo.component.html',\\n})\\nexport class DatepickerDemoComponent {\\n  birthdate?: string;\\n\\n  targetDate = new Date().toISOString().substring(0, 10);\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Forms</h1>\\n\\n<p class=\\\"lead\\\">Formulare kommen zum Einsatz, wenn der Nutzer Daten eingeben muss.</p>\\n<p>\\n  Das Spektrum reicht dabei vom einzelnen Eingabefeld bis zum mehrspaltigen Layout mit mehreren\\n  Gruppen von Formularelementen, mit Labels, Hilfetexten und Validierungsmeldungen.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Es ist wichtig, dass Felder, die inhaltlich zusammengehören, visuell als ein Block abgebildet\\n    werden.\\n  </li>\\n  <li>Mehrere Inhaltsblöcke können durch Zwischenüberschriften abgegrenzt werden.</li>\\n  <li>Es sollte kein Flattersatz entstehen, da dieser für das Auge unruhig wirkt.</li>\\n  <li>Es ist darauf zu achten, dass einzelne Eingabefelder nicht zu breit ausfallen.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Wenn es sehr viele Eingaben gibt, die immer einer klaren Sequenz folgen, ist ein Wizard\\n    einzusetzen.\\n  </li>\\n  <li>\\n    Wenn der Nutzer Texte nur lesen, aber nicht bearbeiten kann (read-only), ist die Darstellung der\\n    Daten mit HTML Description Lists vorzuziehen.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Formularelemente und Beispiele</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/small-form-example\\\" class=\\\"highlight\\\">\\n      Small Form Example\\n    </a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/large-form-example\\\" class=\\\"highlight\\\">\\n      Large Form Example\\n    </a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/select-dropdowns\\\" class=\\\"highlight\\\">\\n      Select Dropdowns\\n    </a>\\n  </li>\\n\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/datepicker\\\" class=\\\"highlight\\\">Datepicker</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/autocompletion\\\" class=\\\"highlight\\\">\\n      Autocompletion\\n    </a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/buttons\\\" class=\\\"highlight\\\">Buttons</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Wir verwenden den\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://getbootstrap.com/docs/4.5/components/forms/\\\"\\n        target=\\\"_blank\\\">\\n        Bootstrap Form Style\\n      </a>\\n      zum Gestalten von Formularen.\\n      <br />\\n      Wir layouten Formulare mit dem\\n      <a routerLink=\\\"/styleguide/layout/grid\\\" class=\\\"highlight\\\">Grid-System</a>\\n      von Bootstrap als\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://getbootstrap.com/docs/4.5/components/forms/#horizontal-form\\\"\\n        target=\\\"_blank\\\">\\n        Horizontal Form\\n      </a>\\n      .\\n      <br />\\n    </p>\\n    <p>\\n      Damit werden\\n      <a routerLink=\\\"/styleguide/ui-elements/forms/large-form-example\\\" class=\\\"highlight\\\">\\n        grosse Formulare\\n      </a>\\n      mehrspaltig dargestellt, wenn viel horizontaler Platz zur Verfügung steht. Die untereinander\\n      aufgereihten Feldbeschriftungen vereinfachen das Scanning des Formulars, wodurch gesuchte\\n      Informationen rasch gefunden werden können. Steht horizontal wenig Platz zur Verfügung wird\\n      das Formular automatisch einspaltig, und die Feldbeschriftungen über den Eingabefeldern\\n      dargestellt.\\n    </p>\\n    <p>\\n      Der Styleguide zeigt auf, welche Klassen verwendet werden müssen, damit Fehler korrekt\\n      angezeigt werden. Für die Validierung nehmen wir\\n      <a href=\\\"https://angular.io/guide/form-validation\\\" class=\\\"external\\\" target=\\\"_blank\\\">\\n        Angular Form-Validierung\\n      </a>\\n      zu Hilfe.\\n    </p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Formulartypen</h2>\\n<p>\\n  Je nach Grösse der Formulare soll innerhalb einer Applikation nach Möglichkeit immer derselbe\\n  Formulartyp verwendet werden.\\n</p>\\n<h3 class=\\\"mt-5\\\">Label oberhalb</h3>\\n<p>\\n  Anwendungsbeispiel und Informationen siehe:\\n  <a routerLink=\\\"/styleguide/ui-elements/forms/small-form-example\\\" class=\\\"highlight\\\">\\n    Small Form Example\\n  </a>\\n</p>\\n<app-code-example src=\\\"ui-elements/forms/forms.component.html#form-type0\\\">\\n  <form class=\\\"is-invalid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"benutzername\\\">Benutzername</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"benutzername\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte einen Benutzernamen eingeben</div>\\n      </div>\\n    </div>\\n  </form>\\n</app-code-example>\\n\\n<h3 class=\\\"mt-5\\\">Label Links</h3>\\n<p>\\n  Anwendungsbeispiel und Informationen siehe:\\n  <a routerLink=\\\"/styleguide/ui-elements/forms/large-form-example\\\" class=\\\"highlight\\\">\\n    Large Form Example\\n  </a>\\n</p>\\n<app-code-example src=\\\"ui-elements/forms/forms.component.html#form-type1\\\">\\n  <form class=\\\"is-invalid\\\">\\n    <div class=\\\"row mb-3\\\">\\n      <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"name\\\">Name</label>\\n      <div class=\\\"col-md-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte einen Namen eingeben</div>\\n      </div>\\n      <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"vorname\\\">Vorname</label>\\n      <div class=\\\"col-md-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"vorname\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte einen Vornamen eingeben</div>\\n      </div>\\n    </div>\\n  </form>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Read-only</h2>\\n<p>\\n  Wenn der Haupt Use Case für eine Ansicht die Dateneingabe ist, dann können die Daten in einem\\n  direkt editierbaren Formular dargestellt werden.\\n  <br />\\n  Wenn der Use Case nur gelegentlich notwendige Änderungen vorsieht (z.B. die Adresse), dann kann es\\n  sinnvoll sein die Daten in einem Read-mode darzustellen und den Edit-mode durch eine\\n  Benutzeraktion zu aktivieren (\\n  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary\\\" ngbTooltip=\\\"Editieren\\\">\\n    <span class=\\\"fas fa-pen fa-fw\\\"></span>\\n  </button>\\n  ).\\n  <br />\\n  Grundsätzlich gilt: Bei wenigen Daten, Edit auf gleicher Seite, bei vielen Daten, Edit auf eigener\\n  Ansicht.\\n</p>\\n\\n<h3 class=\\\"mt-5\\\">Read-only Daten mit Definition List</h3>\\n<p>\\n  Wenn Daten Read-only dargestellt werden sollen, ist die beste Lösung meistens eine HTML Definition\\n  List. Der Code bleibt sehr übersichtlich und ist mit dem Grid-System leicht zu layouten.\\n</p>\\n\\n<app-code-example src=\\\"ui-elements/forms/forms.component.html#form-read-only0\\\">\\n  <dl class=\\\"row\\\">\\n    <dt class=\\\"col-sm-3\\\">Amtlicher Name</dt>\\n    <dd class=\\\"col-sm-9\\\">Muster</dd>\\n    <dt class=\\\"col-sm-3\\\">Vornamen</dt>\\n    <dd class=\\\"col-sm-9\\\">Hans Ferdinand</dd>\\n    <dt class=\\\"col-sm-3\\\">Geburtsdatum</dt>\\n    <dd class=\\\"col-sm-9\\\">06.11.1963</dd>\\n    <dt class=\\\"col-sm-3\\\">Geschlecht</dt>\\n    <dd class=\\\"col-sm-9\\\">männlich</dd>\\n  </dl>\\n</app-code-example>\\n\\n<h3 class=\\\"mt-5\\\">Read-only Daten mit Bootstrap Forms</h3>\\n<p>\\n  Die gleichen Daten mit Formular-Code darzustellen benötigt deutlich mehr Code, was mehr\\n  Zeitaufwand für das Layouting und die Wartung bedeutet. Deshalb sollten Formulare in der Regel nur\\n  für die Dateneingabe verwendet werden.\\n  <br />\\n  Formular-Code zur Darstellung von Read-only Daten kann in Ausnahmefällen sinnvoll sein:\\n</p>\\n<ul>\\n  <li>Wenn die dargestellten Daten inline editiert werden sollen.</li>\\n  <li>Wenn die Felder den Keyboard Focus erhalten können sollen.</li>\\n  <li>\\n    Wenn die Daten der Read-only Felder eines Formulars beim Senden mitgesendet werden sollen.\\n  </li>\\n</ul>\\n<p>\\n  Read-only Formulare werden mit der Klasse\\n  <code>form-control-plaintext</code>\\n  gerendert.\\n</p>\\n\\n<app-code-example src=\\\"ui-elements/forms/forms.component.html#form-read-only1\\\">\\n  <div class=\\\"row mb-3\\\">\\n    <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"name1\\\">Amtlicher Name</label>\\n    <div class=\\\"col-sm-3\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control-plaintext\\\" id=\\\"name1\\\" value=\\\"Muster\\\" readonly />\\n    </div>\\n    <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"vorname2\\\">Vornamen</label>\\n    <div class=\\\"col-sm-3\\\">\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control-plaintext\\\"\\n        id=\\\"vorname2\\\"\\n        value=\\\"Hans Ferdinand\\\"\\n        readonly />\\n    </div>\\n  </div>\\n  <div class=\\\"row mb-3\\\">\\n    <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"name1\\\">Geburtsdatum</label>\\n    <div class=\\\"col-sm-3\\\">\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control-plaintext\\\"\\n        id=\\\"birthdate\\\"\\n        value=\\\"06.11.1963\\\"\\n        readonly />\\n    </div>\\n    <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"vorname2\\\">Geschlecht</label>\\n    <div class=\\\"col-sm-3\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control-plaintext\\\" id=\\\"gender\\\" value=\\\"männlich\\\" readonly />\\n    </div>\\n  </div>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Eingabefeld ohne Label</h2>\\n<p>\\n  Ausnahmsweise können Eingabefelder für Formulare ohne ein Label verwendet werden, wenn nur ein\\n  einzelnes Formularfeld vorhanden ist. Der Placeholder-Text ist in diesen Fällen besonders wichtig.\\n  Zudem muss sichergestellt werden, dass der Zweck des Eingabefelds klar durch den Kontext definiert\\n  wird, z.B. mit einem Icon oder durch den Text, den das Feld umgibt.\\n</p>\\n<app-code-example src=\\\"ui-elements/forms/forms.component.html#form-single-input\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 mb-4\\\">\\n      Einzelnes Eingabefeld ohne Button:\\n      <br />\\n      <div class=\\\"form-inline\\\">\\n        <div class=\\\"input-group\\\">\\n          <input\\n            class=\\\"form-control pl-5\\\"\\n            placeholder=\\\"Benutzernamen filtern...\\\"\\n            (keyup)=\\\"search()\\\" />\\n          <span class=\\\"fas fa-filter input-icon left-icon\\\"></span>\\n        </div>\\n      </div>\\n      <br />\\n      <div class=\\\"form-inline\\\">\\n        <div class=\\\"input-group\\\">\\n          <input\\n            class=\\\"form-control pl-5\\\"\\n            placeholder=\\\"Resultate durchsuchen...\\\"\\n            (keyup)=\\\"search()\\\" />\\n          <span class=\\\"fas fa-search input-icon left-icon\\\"></span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      Einzelnes Eingabefeld mit Button:\\n      <br />\\n      <div class=\\\"form-inline\\\">\\n        <div class=\\\"input-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"search\\\" placeholder=\\\"Fahrzeug suchen...\\\" />\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-light\\\" type=\\\"button\\\">\\n              <span class=\\\"fas fa-search\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './forms.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class FormsComponent {\\n  search(): void {\\n    // here to be filter search function\\n  }\\n}\\n\";","export default \"<div style=\\\"max-width: 70em\\\">\\n  <h1 class=\\\"mt-3 mb-4\\\">Large Form Example</h1>\\n\\n  <p class=\\\"lead\\\">\\n    Wenn grosse Formulare in einer Applikation vorkommen, kann viel vertikaler Platz gespart werden,\\n    indem die Labels links der Felder platziert werden.\\n  </p>\\n\\n  <h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n  <ul>\\n    <li>\\n      Wenn grosse Formulare vorkommen und nicht genügend vertikaler Platz für die Labels und\\n      Fehlermeldungen vorhanden ist.\\n    </li>\\n    <li>Buttons (z.B. Abbrechen und Speichern) sind rechtsbündig unterhalb des Forms platziert.</li>\\n    <li>\\n      Zudem können die Buttons bei sehr grossen Formularen in der\\n      <a routerLink=\\\"/styleguide/layout/actionbar/\\\" class=\\\"highlight\\\">Action Bar</a>\\n      angezeigt werden, damit sie zu jedem Zeitpunkt ohne Scrollen für den Benutzer sichtbar sind.\\n    </li>\\n    <li>\\n      Es gelten auch die allgemeinen Form-Regeln:\\n      <a routerLink=\\\"/styleguide/ui-elements/forms/\\\" class=\\\"highlight\\\">Forms</a>\\n    </li>\\n  </ul>\\n\\n  <h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n  <ul>\\n    <li>\\n      Wenn nur kleine Formulare mit wenigen Eingabefeldern gebaut werden sollen. In diesem Fall ist\\n      das auf maximale Übersicht optimierte\\n      <a routerLink=\\\"/styleguide/ui-elements/forms/small-form-example\\\" class=\\\"highlight\\\">\\n        Small Form Example\\n      </a>\\n      besser geeignet.\\n    </li>\\n  </ul>\\n\\n  <div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\\\">\\n    <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n    <div>\\n      Aus Konsistenzgründen ist es wichtig, sich pro Applikation für eine der beiden Formulartypen\\n      zu entscheiden und alle Formulare in der Applikation gleich zu gestalten.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"btn-group mt-5 mb-4\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n    <button\\n      class=\\\"btn btn-primary\\\"\\n      (click)=\\\"switchStatus(demoStatus.ok)\\\"\\n      [ngClass]=\\\"{\\n        'btn-primary active': !invalid,\\n        'btn-outline-primary': invalid\\n      }\\\">\\n      Edit mode\\n    </button>\\n    <button\\n      class=\\\"btn btn-danger\\\"\\n      (click)=\\\"switchStatus(demoStatus.invalid)\\\"\\n      [ngClass]=\\\"{\\n        'btn-danger active': invalid,\\n        'btn-outline-primary': !invalid\\n      }\\\">\\n      Ungültig\\n    </button>\\n  </div>\\n</div>\\n<app-code-example\\n  src=\\\"ui-elements/forms/large-form-example/large-form-example.component.html#large-form\\\">\\n  <form class=\\\"needs-validation\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6 mb-4\\\">\\n        <p class=\\\"title-divider font-weight-bold\\\">Person</p>\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"name\\\">Nachname</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" appDemoStatus [status]=\\\"status\\\" />\\n            <div class=\\\"invalid-feedback\\\">Bitte einen Nachnamen eingeben</div>\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"vorname\\\">Vorname</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"vorname\\\" appDemoStatus [status]=\\\"status\\\" />\\n            <div class=\\\"invalid-feedback\\\">Bitte einen Vornamen eingeben</div>\\n          </div>\\n        </div>\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"adresse\\\">Adresse</label>\\n          <div class=\\\"col-md-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"adresse\\\" appDemoStatus [status]=\\\"status\\\" />\\n            <div class=\\\"invalid-feedback\\\">Bitte eine Adresse eingeben</div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"geburtsdatum\\\">Geburtsdatum</label>\\n          <div class=\\\"col-md-4\\\">\\n            <app-datepicker id=\\\"geburtsdatum\\\" appDemoStatus [status]=\\\"status\\\"></app-datepicker>\\n            <div class=\\\"invalid-feedback\\\">Bitte ein Geburtsdatum angeben</div>\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"heimatort\\\">Heimatort</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"heimatort\\\"\\n              appDemoStatus\\n              [status]=\\\"status\\\" />\\n            <div class=\\\"invalid-feedback\\\">Bitte Heimatort eingeben</div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"sprache\\\">Sprache</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"sprache\\\" appDemoStatus [status]=\\\"status\\\" />\\n            <div class=\\\"invalid-feedback\\\">Bitte eine Sprache eingeben</div>\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"geschlecht\\\">Geschlecht</label>\\n          <div class=\\\"col-md-4\\\">\\n            <ng-select\\n              id=\\\"geschlecht\\\"\\n              appDemoStatus\\n              [status]=\\\"status\\\"\\n              placeholder=\\\"Geschlecht wählen...\\\">\\n              <ng-option>Weiblich</ng-option>\\n              <ng-option>Männlich</ng-option>\\n              <ng-option>Andere</ng-option>\\n            </ng-select>\\n            <div class=\\\"invalid-feedback\\\">Bitte Geschlecht wählen</div>\\n          </div>\\n        </div>\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label required\\\" for=\\\"versicherung\\\">Versicherung</label>\\n          <div class=\\\"col-md-10\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"versicherung\\\"\\n              appDemoStatus\\n              [status]=\\\"status\\\" />\\n            <div class=\\\"invalid-feedback\\\">Bitte eine Versicherung eingeben</div>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"title-divider font-weight-bold mt-4\\\">Ausweis</p>\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n              <input class=\\\"custom-control-input\\\" type=\\\"checkbox\\\" id=\\\"kat-a\\\" value=\\\"option1\\\" />\\n              <label class=\\\"custom-control-label\\\" for=\\\"kat-a\\\">Kat. A</label>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n              <input class=\\\"custom-control-input\\\" type=\\\"checkbox\\\" id=\\\"kat-b\\\" value=\\\"option2\\\" />\\n              <label class=\\\"custom-control-label\\\" for=\\\"kat-b\\\">Kat. B</label>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n              <input class=\\\"custom-control-input\\\" type=\\\"checkbox\\\" id=\\\"kat-c\\\" value=\\\"option3\\\" />\\n              <label class=\\\"custom-control-label\\\" for=\\\"kat-c\\\">Kat. C</label>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"erstellt\\\">Erstellt</label>\\n          <div class=\\\"col-md-4\\\">\\n            <app-datepicker id=\\\"erstellt\\\"></app-datepicker>\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"gültigbis\\\">Gültig bis</label>\\n          <div class=\\\"col-md-4\\\">\\n            <app-datepicker id=\\\"gültigbis\\\"></app-datepicker>\\n          </div>\\n        </div>\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"zid-nummer\\\">SAP-ZID Nummer</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zid-nummer\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"tg-nummer\\\">Mil. TG-Nummer</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"tg-nummer\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"mb-3\\\">\\n          <label for=\\\"kommentar\\\">Kommentar</label>\\n          <textarea name=\\\"description4\\\" class=\\\"form-control\\\" id=\\\"kommentar\\\" rows=\\\"8\\\"></textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-6 mb-4\\\">\\n        <p class=\\\"title-divider font-weight-bold\\\">Fahrzeug</p>\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"schild\\\">Schild</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"schild\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"farbe\\\">Farbe</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"farbe\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"verwendung\\\">Bes. Verwendung</label>\\n          <div class=\\\"col-md-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"verwendung\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"fahrzeug-art\\\">Art des Fahrzeuges</label>\\n          <div class=\\\"col-md-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fahrzeug-art\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"code\\\">Code</label>\\n          <div class=\\\"col-md-2\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"code\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"marke-typ\\\">Marke und Typ</label>\\n          <div class=\\\"col-md-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"marke-typ\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"fahrgestell-nr\\\">Fahrgestell-Nr.</label>\\n          <div class=\\\"col-md-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fahrgestell-nr\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"plaetze-total\\\">Plätze Total</label>\\n          <div class=\\\"col-md-2\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"plaetze-total\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"plaetze-vorne\\\">Plätze Vorne</label>\\n          <div class=\\\"col-md-2\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"plaetze-vorne\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"leergewicht\\\">Leergewicht (kg)</label>\\n          <div class=\\\"col-md-2\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"leergewicht\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"stammnummer\\\">Stammnummer</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"stammnummer\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"nutz-last\\\">Nutz-/Sattellast (kg)</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nutz-last\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"typengenehminung\\\">Typengenehmigung</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"typengenehminung\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"gesamtgewicht\\\">Gesamtgewicht (kg)</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gesamtgewicht\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"hubraum\\\">Hubraum (cm3)</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hubraum\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"zulässiges-gewicht\\\">\\n            Maximalgewicht (kg)\\n          </label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zulässiges-gewicht\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"leistung\\\">Leistung (kW)</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"leistung\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"anhängelast\\\">Anhängelast (kg)</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"anhängelast\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"kw-leergewicht\\\">kW/kg Leergewicht</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kw-leergewicht\\\" />\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"dachlast\\\">Dachlast (kg)</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dachlast\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"erste-inverkehrsetzung\\\">\\n            1. Inverkehrsetzung\\n          </label>\\n          <div class=\\\"col-md-4\\\">\\n            <app-datepicker id=\\\"erste-inverkehrsetzung\\\"></app-datepicker>\\n          </div>\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"emissionscode\\\">Emissionscode</label>\\n          <div class=\\\"col-md-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emissionscode\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"ort-datum\\\">Ort, Datum</label>\\n          <div class=\\\"col-md-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ort-datum\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row mb-3\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\" for=\\\"prüfung\\\">Prüfung</label>\\n          <div class=\\\"col-md-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"prüfung\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <p class=\\\"mb-0 font-weight-600\\\">Weitere Dokumente</p>\\n    <div class=\\\"upload-content d-flex flex-column align-items-center justify-content-center\\\">\\n      <div class=\\\"d-flex align-items-center\\\">\\n        <span class=\\\"far fa-file-alt fa-3x text-secondary mr-2\\\"></span>\\n        <span class=\\\"fas fa-plus fa-lg text-secondary\\\"></span>\\n      </div>\\n      <div class=\\\"d-flex align-items-center\\\">\\n        <a href=\\\"javascript:void(0);\\\" class=\\\"font-weight-bold my-1 mr-1\\\">Dokumente hochladen</a>\\n        oder per Drag-and-drop reinziehen\\n      </div>\\n    </div>\\n  </form>\\n</app-code-example>\\n<div id=\\\"actionbar\\\">\\n  <button class=\\\"btn btn-outline-primary mr-2\\\">Abbrechen</button>\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"switchStatus(demoStatus.invalid)\\\">Speichern</button>\\n</div>\\n\";","export default \"import { Component, OnInit, ViewEncapsulation } from '@angular/core';\\nimport { DemoStatus } from '../../../demo-utils/status/demo-status.directive';\\nimport { CustomMaxWidthComponent } from '../../../../bedag-components/layout/custom-max-width-component';\\n\\n@Component({\\n  selector: 'app-form-examples',\\n  templateUrl: './large-form-example.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class LargeFormExampleComponent implements OnInit, CustomMaxWidthComponent {\\n  maxWidth = '100%';\\n\\n  issue = {\\n    subject: null,\\n  };\\n  demoStatus = DemoStatus;\\n  date?: '2004-06-02';\\n  status = this.demoStatus.ok;\\n  invalid = false;\\n\\n  ngOnInit(): void {\\n    this.switchStatus(this.demoStatus.ok);\\n  }\\n\\n  switchStatus(s: DemoStatus): void {\\n    this.status = s;\\n    this.invalid = this.status === DemoStatus.invalid;\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Select und Multiselect Dropdowns</h1>\\n\\n<p class=\\\"lead\\\">\\n  Ein Select bzw. Multiselect Dropdown erlaubt die Auswahl von Elementen aus einer Liste von\\n  Möglichkeiten innerhalb eines Formulars.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Wenn aus n Optionen nur eine ausgewählt werden kann, wird ein Select verwendet.</li>\\n  <li>\\n    Wenn aus n Optionen n Möglichkeiten ausgewählt werden können, wird ein Multiselect verwendet.\\n  </li>\\n  <li>Es wird keine Default Auswahl vorgegeben.</li>\\n  <li>Wenn noch keine Auswahl getroffen wurde – «Bitte wählen» als Placeholder schreiben.</li>\\n  <li>\\n    Es ist darauf zu achten, dass das Feld nicht zu breit ist, damit die Elemente (Feldbeschriftung,\\n    Auswahl und Pfeil) nicht zu weit voneinander entfernt sind.\\n  </li>\\n  <li>\\n    Wurde eine oder mehrere Optionen gewählt, sind diese im geschlossenen Zustand aufzuführen.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Wenn es darum geht, aus einem Drop-Down eine Aktion auszulösen, benutzen wir ein\\n    <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/ui-elements/dropdown-menu\\\">Drop-Down Menu</a>\\n    .\\n  </li>\\n  <li>\\n    Select: Wenn es weniger als 3-5 Auswahlmöglichkeiten gibt. Dann ist eine Liste mit Radiobuttons\\n    oft hilfreicher, da der Nutzer ohne Klick alle Möglichkeiten direkt sieht.\\n  </li>\\n  <li>\\n    Multiselect: Wenn es weniger als 10 Auswahlmöglichkeiten gibt. Dann ist eine Liste mit\\n    Checkboxen besser geeignet, da der Nutzer ohne Klick alle Möglichkeiten direkt sieht.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/dropdown-menu\\\">Drop-Down Menu</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/autocompletion\\\">Autocompletion</a>\\n  </li>\\n  <li>\\n    <span></span>\\n    Radiobuttons\\n  </li>\\n  <li>\\n    <span></span>\\n    Checkboxes\\n  </li>\\n</ul>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Für die Umsetzung des Select bzw. Multiselect verwenden wir\\n      <a class=\\\"external\\\" href=\\\"https://ng-select.github.io/ng-select\\\" target=\\\"_blank\\\">ng-select</a>\\n      .\\n      <br />\\n      Abgesehen von der Möglichkeit, das Element als Multiselect zu verwenden, bietet es gegenüber\\n      dem normalen\\n      <code>&lt;select></code>\\n      auch bessere Möglichkeiten zur Suche von Elementen.\\n      <br />\\n      Es gibt verschiedene Arten ein\\n      <code>&lt;ng-select></code>\\n      mit Daten zu befüllen und viele verschiedene Gestaltungsmöglichkeiten.\\n      <br />\\n      Details dazu befinden sich in der\\n      <a href=\\\"https://ng-select.github.io/ng-select\\\" class=\\\"external\\\" target=\\\"_blank\\\">\\n        Dokumentation zu ng-select\\n      </a>\\n    </p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Einfaches Select</h2>\\n<app-code-example\\n  basePath=\\\"ui-elements/forms/select-dropdowns\\\"\\n  src=\\\"select-dropdowns.component.html#single,select-dropdowns.component.ts\\\">\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-4\\\">\\n      <label for=\\\"single0\\\">Einfaches Select mit Suche</label>\\n      <ng-select\\n        id=\\\"single0\\\"\\n        [items]=\\\"countries\\\"\\n        [(ngModel)]=\\\"countrySelection\\\"\\n        placeholder=\\\"Bitte Land auswählen\\\"></ng-select>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-4\\\">\\n      <label for=\\\"single1\\\">Einfaches Select ohne Suche</label>\\n      <ng-select\\n        id=\\\"single1\\\"\\n        [items]=\\\"paymentOptions\\\"\\n        [(ngModel)]=\\\"paymentOptionsSelection\\\"\\n        [searchable]=\\\"false\\\"\\n        placeholder=\\\"Bitte Zahlungsart auswählen\\\"></ng-select>\\n    </div>\\n  </div>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Multi-Select</h2>\\n<p>\\n  Vorsicht beim Gestalten von Formularen mit Multi-Select: das Feld wird standardmässig höher,\\n  sobald die Elemente nicht mehr Platz haben - dies ist beim Layouten des Formulars zu beachten.\\n</p>\\n<app-code-example src=\\\"ui-elements/forms/select-dropdowns/select-dropdowns.component.html#multi\\\">\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label for=\\\"multi0\\\">Multi-Select ohne Checkboxen</label>\\n      <ng-select\\n        id=\\\"multi0\\\"\\n        [items]=\\\"locationTypes\\\"\\n        [multiple]=\\\"true\\\"\\n        [(ngModel)]=\\\"locationTypeSelection\\\"\\n        placeholder=\\\"Kein Filter ausgewählt\\\"></ng-select>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-8\\\">\\n      <label for=\\\"multi1\\\">Multi-Select mit Checkboxen</label>\\n      <ng-select\\n        id=\\\"multi1\\\"\\n        [items]=\\\"countries\\\"\\n        [multiple]=\\\"true\\\"\\n        [(ngModel)]=\\\"countryMultiSelection\\\"\\n        [selectableGroup]=\\\"true\\\"\\n        [closeOnSelect]=\\\"false\\\"\\n        placeholder=\\\"Bitte Länder auswählen\\\">\\n        <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\n          <input id=\\\"item-{{ index }}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" />\\n          {{ item }}\\n        </ng-template>\\n      </ng-select>\\n    </div>\\n  </div>\\n</app-code-example>\\n\";","export default \"import { Component } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-select-dropdowns',\\n  templateUrl: './select-dropdowns.component.html',\\n})\\nexport class SelectDropdownsComponent {\\n  countries = [\\n    'Albanien',\\n    'Andorra',\\n    'Belgien',\\n    'Bosnien und Herzegowina',\\n    'Bulgarien',\\n    'Dänemark',\\n    'Deutschland',\\n    'Estland',\\n    'Finnland',\\n    'Frankreich',\\n    'Griechenland',\\n    'Irland',\\n    'Island',\\n    'Italien',\\n    'Kasachstan',\\n    'Kosovo',\\n    'Kroatien',\\n    'Lettland',\\n    'Liechtenstein',\\n    'Litauen',\\n    'Luxemburg',\\n    'Malta',\\n    'Republik Moldau',\\n    'Monaco',\\n    'Montenegro',\\n    'Niederlande',\\n    'Nordmazedonien',\\n    'Norwegen',\\n    'Österreich',\\n    'Polen',\\n    'Portugal',\\n    'Rumänien',\\n    'Russland',\\n    'San Marino',\\n    'Schweden',\\n    'Schweiz',\\n    'Serbien',\\n    'Slowakei',\\n    'Slowenien',\\n    'Spanien',\\n    'Tschechien',\\n    'Türkei',\\n    'Ukraine',\\n    'Ungarn',\\n    'Vatikanstadt',\\n    'Vereinigtes Königreich',\\n    'Weißrussland',\\n  ];\\n\\n  locationTypes = ['Länder', 'Kantone', 'Bezirke', 'Gemeinden', 'Ortschaften'];\\n\\n  paymentOptions = ['Kreditkarte', 'Rechnung', 'Vorauszahlung'];\\n\\n  countrySelection: string | null = null;\\n  paymentOptionsSelection: string | null = null;\\n\\n  locationTypeSelection: string | null = null;\\n  countryMultiSelection: Array<string> = [];\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Small Form Example</h1>\\n\\n<p class=\\\"lead\\\">\\n  Wenn die Formulare einer Applikation eine gewisse Grösse nicht überschreiten, setzen wir auf eine\\n  maximierte Übersichtlichkeit, indem die Labels oberhalb der Felder und die Fehlermeldungen\\n  unterhalb der Felder platziert werden.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Kommt zum Einsatz, wenn Formulare eine gewisse Grösse nicht überschreiten und genügend\\n    vertikaler Platz für die Labels und Fehlermeldungen vorhanden ist.\\n  </li>\\n  <li>\\n    Buttons (z.B. Abbrechen und Speichern) sind rechtsbündig unterhalb des Formulars platziert.\\n  </li>\\n  <li>\\n    Es gelten auch die allgemeinen Form-Regeln:\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/\\\" class=\\\"highlight\\\">Forms</a>\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Wenn grosse Formulare mit vielen Eingabefelder gebaut werden sollen. In diesem Fall ist das\\n    platzsparendere\\n    <a routerLink=\\\"/styleguide/ui-elements/forms/large-form-example\\\" class=\\\"highlight\\\">\\n      Large Form Example\\n    </a>\\n    besser geeignet.\\n  </li>\\n</ul>\\n\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Aus Konsistenzgründen ist es wichtig, sich pro Applikation für einen der beiden Formulartypen zu\\n    entscheiden und alle Formulare in der Applikation gleich zu gestalten.\\n  </div>\\n</div>\\n\\n<div class=\\\"btn-group mt-5 mb-4\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n  <button\\n    class=\\\"btn btn-primary\\\"\\n    (click)=\\\"switchStatus(demoStatus.ok)\\\"\\n    [ngClass]=\\\"{\\n      'btn-primary active': !invalid,\\n      'btn-outline-primary': invalid\\n    }\\\">\\n    Edit mode\\n  </button>\\n  <button\\n    class=\\\"btn btn-danger\\\"\\n    (click)=\\\"switchStatus(demoStatus.invalid)\\\"\\n    [ngClass]=\\\"{\\n      'btn-danger active': invalid,\\n      'btn-outline-primary': !invalid\\n    }\\\">\\n    Ungültig\\n  </button>\\n</div>\\n\\n<app-code-example\\n  src=\\\"ui-elements/forms/small-form-example/small-form-example.component.html#small-form\\\">\\n  <form class=\\\"needs-validation\\\">\\n    <p class=\\\"title-divider font-weight-bold\\\">Profil</p>\\n    <div class=\\\"form-group d-flex align-items-center\\\">\\n      <span class=\\\"far fa-user-circle fa-border fa-2x text-secondary\\\"></span>\\n      <a class=\\\"ml-2 btn btn-outline-primary\\\" href=\\\"javascript:void(0);\\\">Profilbild anpassen</a>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"benutzername\\\">Benutzername</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"benutzername\\\" appDemoStatus [status]=\\\"status\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte einen Benutzernamen eingeben</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"email\\\">E-Mail</label>\\n        <input\\n          type=\\\"email\\\"\\n          class=\\\"form-control\\\"\\n          id=\\\"email\\\"\\n          placeholder=\\\"name@example.com\\\"\\n          appDemoStatus\\n          [status]=\\\"status\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte eine gültige E-Mail Adresse eingeben</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"password\\\">Passwort</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte ein Passwort eingeben</div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"repeat-password\\\">Passwort wiederholen</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"repeat-password\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte das eingegebene Passwort wiederholen</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-8\\\">\\n        <label class=\\\"required\\\" for=\\\"kommentar\\\">Kommentar</label>\\n        <textarea name=\\\"description4\\\" class=\\\"form-control\\\" id=\\\"kommentar\\\" rows=\\\"5\\\"></textarea>\\n        <div class=\\\"invalid-feedback\\\">Bitte einen Kommentar eingeben</div>\\n      </div>\\n    </div>\\n\\n    <p class=\\\"title-divider font-weight-bold mt-4\\\">Person</p>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"vorname\\\">Vorname</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"vorname\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte einen Vornamen eingeben</div>\\n      </div>\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"name\\\">Nachname</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte einen Nachnamen eingeben</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"geburtsdatum\\\">Geburtsdatum</label>\\n        <app-datepicker id=\\\"geburtsdatum\\\"></app-datepicker>\\n        <div class=\\\"invalid-feedback\\\">Bitte ein Geburtsdatum angeben</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"adresse\\\">Adresse</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"adresse\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte eine Adresse eingeben</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-2\\\">\\n        <label class=\\\"required\\\" for=\\\"plz\\\">PLZ</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"plz\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte eine PLZ eingeben</div>\\n      </div>\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"ort\\\">Ort</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ort\\\" />\\n        <div class=\\\"invalid-feedback\\\">Bitte einen Ort eingeben</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label class=\\\"required\\\" for=\\\"land\\\">Land</label>\\n        <ng-select id=\\\"land\\\" placeholder=\\\"Land auswählen...\\\">\\n          <ng-option>Schweiz</ng-option>\\n          <ng-option>Liechtenstein</ng-option>\\n          <ng-option>Deutschland</ng-option>\\n        </ng-select>\\n        <div class=\\\"invalid-feedback\\\">Bitte ein Land auswählen</div>\\n      </div>\\n    </div>\\n\\n    <p class=\\\"mb-0 font-weight-600\\\">Ausweis</p>\\n    <div class=\\\"upload-content d-flex flex-column align-items-center justify-content-center\\\">\\n      <div class=\\\"d-flex align-items-center\\\">\\n        <span class=\\\"far fa-id-card fa-3x text-secondary mr-2\\\"></span>\\n        <span class=\\\"fas fa-plus fa-lg text-secondary\\\"></span>\\n      </div>\\n      <div class=\\\"d-flex align-items-center\\\">\\n        <a href=\\\"javascript:void(0);\\\" class=\\\"font-weight-bold my-1 mr-1\\\">Ausweis hochladen</a>\\n        oder per Drag-and-drop reinziehen\\n      </div>\\n    </div>\\n\\n    <p class=\\\"title-divider font-weight-bold mt-4\\\">Benachrichtigungen</p>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input class=\\\"custom-control-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"wartungsarbeiten\\\" />\\n        <label class=\\\"custom-control-label\\\" for=\\\"wartungsarbeiten\\\">\\n          Bei Wartungsarbeiten eine Benachrichtigung erhalten\\n        </label>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n        <input class=\\\"custom-control-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"statusänderung\\\" checked />\\n        <label class=\\\"custom-control-label\\\" for=\\\"statusänderung\\\">\\n          Bei Statusänderungen eine Benachrichtigung erhalten\\n        </label>\\n      </div>\\n    </div>\\n  </form>\\n  <div class=\\\"d-flex float-right mt-4 mb-2\\\">\\n    <button class=\\\"btn btn-outline-primary\\\">Abbrechen</button>\\n    <button class=\\\"btn btn-primary ml-2\\\" (click)=\\\"switchStatus(demoStatus.invalid)\\\">\\n      Speichern\\n    </button>\\n  </div>\\n</app-code-example>\\n\";","export default \"import { Component, OnInit, ViewEncapsulation } from '@angular/core';\\nimport { DemoStatus } from '../../../demo-utils/status/demo-status.directive';\\n\\n@Component({\\n  selector: 'app-form-examples',\\n  templateUrl: './small-form-example.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class SmallFormExampleComponent implements OnInit {\\n  issue = {\\n    subject: null,\\n  };\\n  demoStatus = DemoStatus;\\n  date?: '2004-06-02';\\n  status = this.demoStatus.ok;\\n  invalid = false;\\n\\n  ngOnInit(): void {\\n    this.switchStatus(this.demoStatus.ok);\\n  }\\n\\n  switchStatus(s: DemoStatus): void {\\n    this.status = s;\\n    this.invalid = this.status === DemoStatus.invalid;\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Links</h1>\\n\\n<p class=\\\"lead\\\">\\n  Links verbinden Informationen. Sie führen innerhalb der Applikation zu einer anderen Seite oder\\n  ermöglichen als Anchor-Link den schnellen Zugriff auf Unterbereiche einer Seite.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Kommt verlinkter Text in Verbindung mit Bildern oder Icons vor, sind beide Elemente (Bild/Icon\\n    und Text) zu verlinken.\\n  </li>\\n  <li>\\n    Links sind immer visuell hervorzuheben und müssen immer eine visuelle Veränderung on Mouseover\\n    aufweisen.\\n  </li>\\n  <li>\\n    Hinweis zum richtigen Einsatz (Die nachfolgenden Links sind nur Anwendungsbeispiele ohne\\n    Zielseite):\\n    <br />\\n    <strong>Falsch:</strong>\\n    Details zu den Spezifikationen finden Sie\\n    <a href=\\\"javascript:void(0)\\\">hier</a>\\n    .\\n    <br />\\n    <strong>Richtig:</strong>\\n    Details zu den\\n    <a href=\\\"javascript:void(0)\\\">Spezifikationen</a>\\n    .\\n  </li>\\n  <li>\\n    Externe Links, mit denen der Nutzer die Applikation verlässt, werden mit einem Icon\\n    gekennzeichnet (via\\n    <code>class=\\\"external\\\"</code>\\n    ) und sind mit\\n    <code>target=\\\"_blank”</code>\\n    zu versehen, damit sich ein neuer Tab öffnet.\\n    <br />\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>Titel enthalten nie einen Link.</li>\\n  <li>\\n    Für Sonderfälle wie Breadcrumbs oder Navigation gelten die unter diesen Elementen beschriebenen\\n    Richtlinien.\\n  </li>\\n  <li>\\n    Anchor-Links sollen nur verwendet werden, wenn viel Information innerhalb einer Seite\\n    strukturiert werden muss (z.B. Online Hilfe).\\n    <br />\\n    Wenn möglich sollte aber zum Strukturieren von vielen Informationen\\n    <a routerLink=\\\"/styleguide/ui-elements/tabs\\\" class=\\\"highlight\\\">Tabs</a>\\n    oder ein Accordion verwendet werden.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements mb-5\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout/navigation\\\" class=\\\"highlight\\\">Navigation</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout/breadcrumbs\\\" class=\\\"highlight\\\">Breadcrumbs</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/basics/typography\\\" class=\\\"highlight\\\">Typographie</a>\\n  </li>\\n</ul>\\n\\n<app-code-example class=\\\"mt-5\\\" src=\\\"ui-elements/links/links.component.html#links\\\">\\n  Im Fehlerfall können Sie eine Meldung in unserem Ticketing-System\\n  <a class=\\\"external\\\" href=\\\"https://jira.bedag.ch/\\\" target=\\\"_blank\\\">Jira</a>\\n  erstellen.\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './links.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class LinksComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Modal Dialog</h1>\\n\\n<p class=\\\"lead\\\">\\n  Ein Modal Dialog unterbricht den Arbeitsfluss des Nutzers und zentriert seine volle Aufmerksamkeit\\n  auf den Dialog.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>Wenn die volle Aufmerksamkeit des Nutzers gefragt ist.</li>\\n  <li>\\n    Wenn eine Aktion aus einer Tabelle oder Seite heraus erfolgt, z.B. Hinzufügen eines Datensatzes.\\n  </li>\\n  <li>\\n    Die Buttons, insbesondere der ausführende Aktionsbutton, soll die Handlung verbal wiederholen\\n    und nicht nur mit OK bezeichnet sein. Z.B. \\\"Eintragen\\\", \\\"Übernehmen\\\", \\\"Jahr abschliessen\\\",\\n    \\\"Hinzufügen\\\", \\\"Dokument erzeugen\\\" etc.\\n  </li>\\n  <li>\\n    Das Element im Dialog, welches den Fokus erhält, soll mit\\n    <code>ngbAutofocus</code>\\n    immer definiert werden.\\n    <br />\\n    Bei Dialogen mit Eingabefeldern sollte in der Regel das erste Eingabefeld den Fokus erhalten,\\n    bei Aktionsdialogen hingegen der Primary Button.\\n  </li>\\n  <li>\\n    Dialoge, die nur Text und Aktions-Buttons enthalten, sollen in der Regel mit\\n    <span class=\\\"keyboard-key\\\">Esc</span>\\n    oder via Klick auf den Backdrop schliessbar sein.\\n    <br />\\n    Dialoge mit Eingabefeldern hingegen nicht. Diese sollten höchstens mit\\n    <span class=\\\"keyboard-key\\\">Esc</span>\\n    oder Backdrop-Klick schliessbar sein, wenn noch keine Eingabe erfolgt ist.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Für Informationen, welche nicht die volle Aufmerksamkeit des Nutzers verlangen, sind Alerts\\n    besser geeignet.\\n    <a routerLink=\\\"/styleguide/ui-elements/alerts\\\" class=\\\"highlight\\\">Alerts</a>\\n  </li>\\n  <li>Es soll nie mehr als ein Dialog gleichzeitig angezeigt werden.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li><a routerLink=\\\"/styleguide/ui-elements/alerts\\\">Alerts</a></li>\\n  <li><a routerLink=\\\"/styleguide/ui-elements/datatables\\\">Data Tables</a></li>\\n</ul>\\n\\n<div class=\\\"card my-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Wir verwenden\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://ng-bootstrap.github.io/#/components/modal/examples\\\"\\n        target=\\\"_blank\\\">\\n        NgbModal aus ng-bootstrap\\n      </a>\\n      .\\n    </p>\\n  </div>\\n</div>\\n\\n<app-code-example\\n  src=\\\"ui-elements/modal-dialog/modal-dialog.component.html#d,ui-elements/modal-dialog/modal-dialog.component.ts\\\">\\n  <button class=\\\"btn btn-outline-primary mb-4 mr-2\\\" (click)=\\\"open(content, 'lg')\\\">\\n    Grosser Dialog\\n  </button>\\n  <button class=\\\"btn btn-outline-primary mb-4\\\" (click)=\\\"open(contentsm, 'sm')\\\">\\n    Kleiner Dialog\\n  </button>\\n  <pre>{{ closeResult }}</pre>\\n\\n  <ng-template #content let-modal>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Neue Anfrage erstellen</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('[x] click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <form (ngSubmit)=\\\"saveIssue()\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <label class=\\\"required\\\" for=\\\"subject\\\">Titel</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"subject\\\" ngbAutofocus />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <label class=\\\"required\\\" for=\\\"description\\\">Beschreibung</label>\\n            <textarea id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" rows=\\\"5\\\"></textarea>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label class=\\\"required\\\" for=\\\"assignee\\\">Bearbeiter</label>\\n            <ng-select\\n              id=\\\"assignee\\\"\\n              [items]=\\\"assignees\\\"\\n              [searchable]=\\\"false\\\"\\n              placeholder=\\\"Bitte Bearbeiter auswählen\\\"></ng-select>\\n          </div>\\n\\n          <div class=\\\"form-group col-md-2 col-sm-auto\\\">\\n            <label class=\\\"required\\\" for=\\\"dueDate\\\">Ausführungsdatum</label>\\n            <app-datepicker id=\\\"dueDate\\\"></app-datepicker>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"modal.dismiss('Abbrechen')\\\">\\n        Abbrechen\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveIssue()\\\">Anfrage erstellen</button>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #contentsm let-modal>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">2018 abschliessen?</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('[x] click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      Nach dem Jahresabschluss können keine weiteren Buchungen in diesem Jahr erfasst werden.\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"modal.dismiss('Abbrechen')\\\">\\n        Abbrechen\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"closeYear()\\\" ngbAutofocus>\\n        Jahr abschliessen\\n      </button>\\n    </div>\\n  </ng-template>\\n</app-code-example>\\n\";","export default \"import { Component } from '@angular/core';\\nimport {\\n  ModalDismissReasons,\\n  NgbModal,\\n  NgbModalOptions,\\n  NgbModalRef,\\n} from '@ng-bootstrap/ng-bootstrap';\\n\\n@Component({\\n  templateUrl: './modal-dialog.component.html',\\n})\\nexport class ModalDialogComponent {\\n  assignees = ['Hans Olo', 'Paul Panther'];\\n\\n  constructor(private readonly modalService: NgbModal) {}\\n  modal!: NgbModalRef;\\n  closeResult!: string;\\n\\n  smallDialogOptions: NgbModalOptions = {\\n    size: 'sm',\\n  };\\n\\n  largeDialogOptions: NgbModalOptions = {\\n    size: 'lg',\\n    backdrop: 'static',\\n    keyboard: false,\\n  };\\n\\n  private static getDismissReason(reason: ModalDismissReasons | string): string {\\n    if (reason === ModalDismissReasons.ESC) {\\n      return 'by pressing ESC';\\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\\n      return 'by clicking on a backdrop';\\n    } else {\\n      return `with: \\\"${reason}\\\"`;\\n    }\\n  }\\n\\n  open(content: unknown, size: string): void {\\n    const dialogOptions = size === 'lg' ? this.largeDialogOptions : this.smallDialogOptions;\\n    this.modal = this.modalService.open(content, dialogOptions);\\n    this.modal.result.then(\\n      (result: string) => {\\n        this.closeResult = `Closed with: \\\"${result}\\\"`;\\n      },\\n      (reason) => {\\n        this.closeResult = `Dismissed ${ModalDialogComponent.getDismissReason(reason)}`;\\n      }\\n    );\\n  }\\n\\n  saveIssue(): void {\\n    this.modal.close('Anfrage erstellen');\\n  }\\n\\n  closeYear(): void {\\n    this.modal.close('Jahr abschliessen');\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Overflow Menu</h1>\\n\\n<p class=\\\"lead\\\">\\n  Wenn zusätzliche Navigationspunkte oder Aktionen aufgrund von Platzmangel oder für verbesserte\\n  Übersichtlichkeit nicht auf der Bedienoberfläche dargestellt werden sollen, können sie in einem\\n  Overflow Menu (\\n  <span class=\\\"fas fa-ellipsis-v fa-fw\\\" aria-hidden=\\\"true\\\"></span>\\n  ) ausgelagert werden.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Wenn in einer Navigationsleiste nicht ausreichend Platz für alle Navigationspunkte ist. Es ist\\n    klar zu priorisieren. Die wichtigen Elemente sollten sichtbar sein, die weniger wichtigen im\\n    Overflow Menu erscheinen.\\n  </li>\\n  <li>\\n    Wenn weniger wichtige Elemente weniger prominent platziert werden sollen, beispielsweise im\\n    Applikationsheader (\\\"Hilfe\\\", \\\"About\\\", etc.)\\n  </li>\\n  <li>\\n    Wenn \\\"gefährliche\\\" Aktionen versteckt werden sollen, sodass sie nicht aus Versehen mit einem\\n    Klick betätigt werden (zum Beispiel \\\"Alles Löschen\\\").\\n  </li>\\n  <li>Wenn aus einer Tabellenzeile mehrere Aktionen ausgelöst werden können.</li>\\n  <li>\\n    Die Reihenfolge der Menupunkte muss dem Kontext angepasst sein. Wenn viele Menupunkte vorhanden\\n    sind, sollten die Aktionen nach Themen gruppiert und mit Dividern optisch getrennt werden.\\n  </li>\\n  <li>\\n    Aktionen, die signifikante Änderungen an den zu bearbeitenden Daten bewirken (z.B. Löschen),\\n    werden zusätzlich durch einen Divider abgetrennt, am Ende der Liste aufgeführt.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul class=\\\"mb-5\\\">\\n  <li>Wenn es nur einen Unterpunkt gibt.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements mb-5\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/dropdown-menu\\\" class=\\\"highlight\\\">Drop-Down Menu</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout/functionbar\\\" class=\\\"highlight\\\">Function Bar</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/datatables\\\" class=\\\"highlight\\\">Data Tables</a>\\n  </li>\\n  <li><a routerLink=\\\"/styleguide/basics/icons\\\" class=\\\"highlight\\\">Icons</a></li>\\n</ul>\\n\\n<app-code-example src=\\\"ui-elements/overflow-menu/overflow-menu.component.html#overflow-menu\\\">\\n  <div ngbDropdown class=\\\"d-inline-block overflow-menu\\\">\\n    <button class=\\\"btn btn-outline-primary btn-sm\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\n      <span class=\\\"fa-fw fas fa-ellipsis-v\\\"></span>\\n    </button>\\n    <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n      <button ngbDropdownItem (click)=\\\"showAlert('Nach aktuellster Adresse suchen')\\\">\\n        Nach aktuellster Adresse suchen\\n      </button>\\n      <div class=\\\"dropdown-divider\\\"></div>\\n      <button ngbDropdownItem (click)=\\\"showAlert('In neue Liste hinzufügen')\\\">\\n        In neue Liste hinzufügen\\n      </button>\\n      <button ngbDropdownItem (click)=\\\"showAlert('Aus dieser Liste entfernen')\\\">\\n        Aus dieser Liste entfernen\\n      </button>\\n      <div class=\\\"dropdown-divider\\\"></div>\\n      <button ngbDropdownItem (click)=\\\"showAlert('Editieren')\\\">Editieren</button>\\n      <button ngbDropdownItem (click)=\\\"showAlert('Duplizieren')\\\">Duplizieren</button>\\n      <div class=\\\"dropdown-divider\\\"></div>\\n      <button ngbDropdownItem (click)=\\\"showAlert('Löschen')\\\">Löschen</button>\\n    </div>\\n  </div>\\n\\n  <p class=\\\"mt-3\\\">\\n    Für ein in einem Kontext eingebettetes Beispiel, siehe die Overflow-Menus in\\n    <a routerLink=\\\"/styleguide/layout/functionbar\\\" class=\\\"highlight\\\">Function Bar</a>\\n    und\\n    <a routerLink=\\\"/styleguide/ui-elements/datatables\\\" class=\\\"highlight\\\">Data Tables</a>\\n    .\\n  </p>\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\nimport { AlertHolderDirective } from '../../../bedag-components/alert/alert-holder.directive';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './overflow-menu.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class OverflowMenuComponent {\\n  constructor(private readonly alerts: AlertHolderDirective) {}\\n\\n  showAlert(alertText: string): void {\\n    this.alerts.success(`${alertText} wurde ausgewählt`);\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Progress Indicators</h1>\\n\\n<p class=\\\"lead\\\">\\n  Fortschritts- und Warteanzeigen geben dem Nutzer Feedback, dass eine Wartezeit notwendig ist.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Wenn Aktionen länger dauern, um dem Nutzer anzuzeigen, dass die Applikation am Input verarbeiten\\n    oder laden ist.\\n  </li>\\n  <li>\\n    <strong>Progress Bar:</strong>\\n    Zeigt Fortschritt an, wenn die voraussichtliche Wartezeit berechnet werden kann.\\n    <br />\\n  </li>\\n  <li>\\n    <strong>Spinner Button:</strong>\\n    Ein Button mit rotierendem Spinner-Icon ist eine elegante Lösung, um direkt den Aktions-Button\\n    als Progress Indicator für kurze Wartezeiten (zum Beispiel Async calls) zu verwenden.\\n    <br />\\n    Er kommt zum Einsatz, wenn die Wartezeit nicht berechnet werden kann oder kein Platz für eine\\n    Progress Bar vorhanden ist.\\n    <br />\\n    Wenn die Wartezeit berechenbar und kürzer als einige Sekunden ist ein Spinner ebenfalls die\\n    bessere Wahl.\\n  </li>\\n  <li>\\n    <strong>Loading Spinner:</strong>\\n    Ein Loading Spinner ist geeignet um dem Benutzer kurze Ladevorgänge auf der Arbeitsfläche oder\\n    in Modal-Dialogen lokal anzuzeigen. Mögliche Einsatzgebiete: Splash Screens, asynchrones\\n    Nachladen von Inhalten in einzelnen Sektionen (z.B. Tabellen, Cards, etc.).\\n  </li>\\n  <li>\\n    <strong>Loading Overlay:</strong>\\n    Ein Loading Overlay kommt zum Einsatz, wenn der Aufbau der gesamten Arbeitsfläche eine Wartezeit\\n    erfordert (z.B. bei Dashboards).\\n  </li>\\n</ul>\\n\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Spinners und Loading Overlays können bei Anwendern zu Frustration und Unzufriedenheit mit der\\n    Applikation führen, wenn sie zu oft oder für zu lange Wartezeiten eingesetzt werden. Sie sollten\\n    nicht für Wartezeiten von mehr als 5-7 Sekunden eingesetzt werden. In diesem Fall ist eine\\n    Progress Bar mit möglichst vielen Zusatzinformationen die beste Wahl.\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>Wenn Elemente schnell geladen und Aktionen zügig ausgeführt werden können.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/buttons\\\" class=\\\"highlight\\\">Buttons</a>\\n  </li>\\n  <li><a routerLink=\\\"/styleguide/basics/icons\\\" class=\\\"highlight\\\">Icons</a></li>\\n</ul>\\n\\n<div class=\\\"card mt-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Wir verwenden die\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://ng-bootstrap.github.io/#/components/progressbar/examples\\\"\\n        target=\\\"_blank\\\">\\n        ngb-progressbar von ng-bootstrap\\n      </a>\\n      .\\n      <br />\\n      Für Spinner verwenden wir die CSS-Animationen von\\n      <a routerLink=\\\"/styleguide/basics/icons\\\" class=\\\"highlight\\\">Font Awesome</a>\\n      .\\n    </p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Progress Bar</h2>\\n<p>\\n  Für kurze Wartezeiten von unter einer Minute kann eine einfache Progress Bar ohne zusätzliche\\n  Angaben eingesetzt werden.\\n  <br />\\n  Je länger die Wartezeit dauert, desto mehr Angaben sollten dem Benutzer mitgeteilt werden (z.B.\\n  Fortschritt in %, \\\"3 von 7 Dateien heruntergeladen\\\", etc.). Dies erhöht die Toleranz für\\n  Wartezeiten massgeblich.\\n  <br />\\n  Für Wartezeiten, die länger als eine Minute dauern, sollte dem Benutzer zusätzlich die geschätzte\\n  Restwartezeit laufend angezeigt werden.\\n</p>\\n<app-code-example\\n  src=\\\"ui-elements/progress-indicators/progress-indicators.component.html#progress,ui-elements/progress-indicators/progress-indicators.component.ts\\\">\\n  <ngb-progressbar [value]=\\\"(progress | async)!\\\" [showValue]=\\\"true\\\"></ngb-progressbar>\\n  <button class=\\\"btn btn-outline-primary mt-2\\\" (click)=\\\"longRunningAction()\\\">\\n    Start ohne Restzeitangabe\\n  </button>\\n\\n  <hr />\\n\\n  <ngb-progressbar [value]=\\\"(progressWithETA | async)!\\\" [showValue]=\\\"true\\\"></ngb-progressbar>\\n  <div class=\\\"text-center\\\">{{ progressETA | async }}</div>\\n  <button class=\\\"btn btn-outline-primary mt-2\\\" (click)=\\\"longRunningActionWithETA()\\\">\\n    Start mit Restzeitangabe\\n  </button>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Spinner Button</h2>\\n<p>\\n  Bei Spinner Buttons ist es wichtig, den Button während der Wartedauer für Bildschirm- und\\n  Screenreader-Benutzer als Progress Indicator zu klassifizieren, indem die Attribute\\n  <code>disabled</code>\\n  , sowie\\n  <code>role=\\\"status\\\"</code>\\n  und\\n  <code>aria-hidden=\\\"true\\\"</code>\\n  gesetzt werden.\\n  <br />\\n  Standardmässig kommt\\n  <span class=\\\"fas fa-circle-notch fa-fw\\\"></span>\\n  als Spinner-Icon zum Einsatz, für spezielle Fälle wie \\\"Synchronisieren\\\" können aber auch andere\\n  Icons eingesetzt werden.\\n</p>\\n<app-code-example\\n  src=\\\"ui-elements/progress-indicators/progress-indicators.component.html#spinner-button,ui-elements/progress-indicators/progress-indicators.component.ts\\\">\\n  <button\\n    class=\\\"btn btn-primary\\\"\\n    type=\\\"button\\\"\\n    (click)=\\\"startAsyncJob('job1')\\\"\\n    [disabled]=\\\"jobRunning\\\">\\n    <span\\n      *ngIf=\\\"jobRunning\\\"\\n      class=\\\"fas fa-circle-notch fa-spin fa-fw\\\"\\n      role=\\\"status\\\"\\n      aria-hidden=\\\"true\\\"></span>\\n    Resultate publizieren\\n  </button>\\n  <br />\\n  <br />\\n  <button\\n    class=\\\"btn btn-outline-primary\\\"\\n    type=\\\"button\\\"\\n    (click)=\\\"startAsyncJob('job2')\\\"\\n    [disabled]=\\\"job2Running\\\">\\n    <span\\n      class=\\\"fas fa-sync-alt fa-fw\\\"\\n      [class.fa-spin]=\\\"job2Running\\\"\\n      [attr.role]=\\\"job2Running ? 'status' : null\\\"\\n      aria-hidden=\\\"true\\\"></span>\\n    Synchronisieren\\n  </button>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Loading Spinner</h2>\\n<p>Die Positionierung und Grösse des Loading Spinners ist dem jeweiligen Kontext anzupassen.</p>\\n<app-code-example\\n  src=\\\"ui-elements/progress-indicators/progress-indicators.component.html#loading-spinner\\\">\\n  <div class=\\\"d-flex justify-content-center align-items-center text-secondary\\\">\\n    <span class=\\\"fas fa-spinner fa-pulse fa-lg\\\"></span>\\n    &nbsp;Daten werden geladen...\\n  </div>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Loading Overlay</h2>\\n<p>\\n  Das Overlay kann für die ganze Applikation oder nur für den Content-Bereich gelten. Ein Overlay\\n  über die ganze Applikation sollte nur dann verwendet werden, wenn der Benutzer die Aktion\\n  möglichst nicht abbrechen soll.\\n</p>\\n\\n<app-code-example\\n  src=\\\"ui-elements/progress-indicators/progress-indicators.component.html#spinner-overlay\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\" (click)=\\\"showLoadingOverlay()\\\">\\n    Overlay über Content-Bereich anzeigen\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2\\\" (click)=\\\"showSavingOverlay()\\\">\\n    Overlay über ganze Applikation anzeigen\\n  </button>\\n\\n  <div class=\\\"loading-overlay-content text-secondary\\\" *ngIf=\\\"isLoading\\\">\\n    <p class=\\\"h1 mb-5\\\">Daten werden geladen...</p>\\n    <span class=\\\"fas fa-spinner fa-pulse fa-4x\\\"></span>\\n  </div>\\n\\n  <div class=\\\"loading-overlay-full text-secondary\\\" *ngIf=\\\"isSaving\\\">\\n    <p class=\\\"h1 mb-5\\\">Daten werden gespeichert, bitte nicht abbrechen...</p>\\n    <span class=\\\"fas fa-spinner fa-pulse fa-4x\\\"></span>\\n  </div>\\n</app-code-example>\\n\";","export default \"import { interval as observableInterval, Observable } from 'rxjs';\\n\\nimport { map, startWith, take } from 'rxjs/operators';\\nimport { Component } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-loader',\\n  templateUrl: './progress-indicators.component.html',\\n})\\nexport class ProgressIndicatorsComponent {\\n  progress!: Observable<number>;\\n  progressWithETA!: Observable<number>;\\n  progressETA!: Observable<string>;\\n  jobRunning = false;\\n  job2Running = false;\\n  isLoading = false;\\n  isSaving = false;\\n\\n  longRunningAction(): void {\\n    this.progress = observableInterval(1000).pipe(\\n      take(10),\\n      map((i) => 10 * (i + 1))\\n    );\\n  }\\n\\n  longRunningActionWithETA(): void {\\n    const seconds = 30;\\n    const observable = observableInterval(1000).pipe(\\n      startWith(-1),\\n      take(seconds + 1),\\n      map((i) => i + 1)\\n    );\\n    this.progressWithETA = observable.pipe(map((i) => (100 * i) / seconds));\\n    this.progressETA = observable.pipe(\\n      map((i) => (i < seconds ? `${seconds - i}s verbleiben` : 'Fertig!'))\\n    );\\n  }\\n\\n  startAsyncJob(job: string): void {\\n    if (job === 'job1') {\\n      this.jobRunning = true;\\n      setTimeout(() => (this.jobRunning = false), 3000);\\n    } else if (job === 'job2') {\\n      this.job2Running = true;\\n      setTimeout(() => (this.job2Running = false), 3000);\\n    }\\n  }\\n\\n  showLoadingOverlay(): void {\\n    this.isLoading = true;\\n    setTimeout(() => (this.isLoading = false), 4000);\\n  }\\n\\n  showSavingOverlay(): void {\\n    this.isSaving = true;\\n    setTimeout(() => (this.isSaving = false), 4000);\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Tabs</h1>\\n\\n<p class=\\\"lead\\\">\\n  Tabs eignen sich insbesondere zum Unterteilen von grossen Geschäften oder Dossiers mit vielen\\n  Datenlabels oder Formularfeldern. Sie ermöglichen einen effizienten Wechsel zwischen den einzelnen\\n  Teilbereichen.\\n</p>\\n\\n<h2>Wann und wie wird das Element eingesetzt?</h2>\\n<ul>\\n  <li>\\n    Wenn der Nutzer zwischen verschiedenen Ansichten wechseln will, ohne dass es eine logische\\n    sequentielle Abfolge gibt. (z.B. Produkteigenschaften, Technische Daten, Downloads)\\n  </li>\\n  <li>\\n    Das Dropdown kann eingesetzt werden, wenn:\\n    <ol>\\n      <li>\\n        ... weiterführende Aktionen angeboten werden sollen, die zu der in den Tabs angezeigten\\n        Entität gehören. In diesem Fall ist das Dropdown rechtsbündig zu platzieren.\\n      </li>\\n      <li>... es zu einem Tab mehrere logische Inhalte gibt. Z.B. Anzeige für die CH, DE, AT.</li>\\n      <li>\\n        ... es sehr viele Tabs gibt und diese aus Platzgründen (kleine Screengrössen) in ein\\n        \\\"Overflow-Tab\\\" ausgelagert werden sollen.\\n      </li>\\n    </ol>\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Wann soll das Element nicht verwendet werden?</h2>\\n<ul>\\n  <li>\\n    Wenn der Nutzer Inhalte hintereinander lesen soll. Dann ist eine Seitenstruktur mit Untertiteln\\n    besser.\\n  </li>\\n</ul>\\n\\n<div class=\\\"card my-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    Für die Implementierung von Tabs verwenden wir die\\n    <a\\n      class=\\\"external\\\"\\n      href=\\\"https://ng-bootstrap.github.io/#/components/nav/overview\\\"\\n      target=\\\"_blank\\\">\\n      ng-bootstrap Nav\\n    </a>\\n    Komponente. Dort finden sich auch zahlreiche\\n    <a\\n      class=\\\"external\\\"\\n      href=\\\"https://ng-bootstrap.github.io/#/components/nav/examples\\\"\\n      target=\\\"_blank\\\">\\n      Code-Beispiele\\n    </a>\\n    .\\n    <br />\\n    Das Design wird vom Styleguide überschrieben.\\n  </div>\\n</div>\\n\\n<app-code-example src=\\\"ui-elements/tabs/tabs.component.html#simple\\\">\\n  <ul ngbNav #nav=\\\"ngbNav\\\" [activeId]=\\\"1\\\" class=\\\"nav-tabs\\\">\\n    <li [ngbNavItem]=\\\"1\\\">\\n      <a ngbNavLink>Person</a>\\n      <ng-template ngbNavContent>\\n        <div class=\\\"ml-3 mt-4\\\">\\n          <p class=\\\"title-divider font-weight-bold\\\">Personendaten</p>\\n          <dl class=\\\"row\\\">\\n            <dt class=\\\"col-sm-3\\\">Amtlicher Name:</dt>\\n            <dd class=\\\"col-sm-9\\\">Muster</dd>\\n            <dt class=\\\"col-sm-3\\\">Vornamen:</dt>\\n            <dd class=\\\"col-sm-9\\\">Hans Ferdinand</dd>\\n            <dt class=\\\"col-sm-3\\\">Geburtsdatum:</dt>\\n            <dd class=\\\"col-sm-9\\\">06.11.1963</dd>\\n            <dt class=\\\"col-sm-3\\\">Geschlecht:</dt>\\n            <dd class=\\\"col-sm-9\\\">männlich</dd>\\n          </dl>\\n          <p class=\\\"title-divider font-weight-bold mt-4\\\">Zusatzangaben Person</p>\\n          <dl class=\\\"row\\\">\\n            <dt class=\\\"col-sm-3\\\">Korrespondenzsprache:</dt>\\n            <dd class=\\\"col-sm-9\\\">Deutsch</dd>\\n          </dl>\\n        </div>\\n      </ng-template>\\n    </li>\\n    <li [ngbNavItem]=\\\"2\\\">\\n      <a ngbNavLink>Adressen</a>\\n      <ng-template ngbNavContent>\\n        <div class=\\\"ml-3 mt-4\\\">\\n          <p class=\\\"font-weight-bold\\\">Adressen</p>\\n        </div>\\n      </ng-template>\\n    </li>\\n    <li [ngbNavItem]=\\\"3\\\">\\n      <a ngbNavLink>Beziehungen</a>\\n      <ng-template ngbNavContent>\\n        <div class=\\\"ml-3 mt-4\\\">\\n          <p class=\\\"font-weight-bold\\\">Beziehungen</p>\\n        </div>\\n      </ng-template>\\n    </li>\\n    <li ngbNavItem [disabled]=\\\"true\\\">\\n      <a ngbNavLink>Disabled Tab</a>\\n      <ng-template ngbNavContent>\\n        <p>Geheim</p>\\n      </ng-template>\\n    </li>\\n    <li ngbDropdown class=\\\"nav-item ml-auto\\\">\\n      <a href (click)=\\\"(false)\\\" class=\\\"nav-link\\\" ngbDropdownToggle>Person nachschlagen</a>\\n      <div ngbDropdownMenu>\\n        <button ngbDropdownItem>SUSA</button>\\n        <button ngbDropdownItem>NESKO-Frontend</button>\\n        <button ngbDropdownItem>Geres Personenindex</button>\\n        <button ngbDropdownItem disabled>Capitastra</button>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <button ngbDropdownItem>Infostar</button>\\n        <button ngbDropdownItem>Zefix</button>\\n        <button ngbDropdownItem>ZEMIS</button>\\n      </div>\\n    </li>\\n  </ul>\\n  <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-tabs',\\n  templateUrl: './tabs.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class TabsComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Tooltip und Popover</h1>\\n<p class=\\\"lead\\\">\\n  Ein Tooltip ist ein kleines Popup. Es enthält eine Beschreibung oder Hilfestellung zu einem Wort\\n  oder einem Interaktionsfeld.\\n  <br />\\n  Ein Popover ist ein etwas grösseres Popup, welches zusätzlichen Inhalt zu einem Element enthält.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Wann und wie wird das Element eingesetzt?</h2>\\n<p>Da Tooltips den Zweck eines GUI-Elements erklären sollen, sollten sie kurz und prägnant sein.</p>\\n\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark mt-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Mouseover ist nicht mobile kompatibel. Tooltips, die für die Bedienung einer Applikation\\n    essentiell sind, müssen in mobile-tauglichen Applikationen auf Klick erscheinen oder direkt\\n    angezeigt werden.\\n  </div>\\n</div>\\n\\n<div class=\\\"card mt-5\\\">\\n  <div class=\\\"card-header\\\">\\n    <h2>\\n      <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n      Implementierung\\n    </h2>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Tooltips realisieren wir mit der\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://ng-bootstrap.github.io/#/components/tooltip/examples\\\"\\n        target=\\\"_blank\\\">\\n        ngbTooltip Direktive von ng-bootstrap\\n      </a>\\n      .\\n      <br />\\n\\n      Popover realisieren wir mit der\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://ng-bootstrap.github.io/#/components/popover/examples\\\"\\n        target=\\\"_blank\\\">\\n        ngbPopover Direktive von ng-bootstrap\\n      </a>\\n      .\\n    </p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Tooltip auf Icon-Buttons</h2>\\n<p>\\n  Kommt bei Icon-Buttons ohne Text zum Einsatz. Wenn genügend Platz vorhanden ist, soll der Tooltip\\n  unterhalb des Icon-Buttons angezeigt werden.\\n</p>\\n\\n<app-code-example src=\\\"ui-elements/tooltips/tooltips.component.html#button\\\">\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-outline-primary mr-2\\\"\\n    placement=\\\"bottom\\\"\\n    ngbTooltip=\\\"Einstellungen\\\">\\n    <span class=\\\"fas fa-cog fa-fw\\\"></span>\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-outline-primary\\\"\\n    placement=\\\"bottom\\\"\\n    ngbTooltip=\\\"Dokument bearbeiten\\\">\\n    <span class=\\\"fas fa-pen fa-fw\\\"></span>\\n  </button>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Tooltip in Kombination mit einem Icon</h2>\\n<p>\\n  Wird meist für Hilfestellungen oder Zusatzinformationen verwendet. Das Icon wird rechts vom\\n  Eingabefeld oder Text platziert. Dieser Tooltip sollte immer mit einem Klick getriggert werden, da\\n  Mouseover in mobilen Applikationen nicht funktioniert.\\n  <br />\\n  Damit der Tooltip auch per Tastatur erreichbar ist, braucht das Element einen Tabindex, und der\\n  Trigger muss wie folgt gesetzt werden:\\n  <code>tabindex=\\\"0\\\" triggers=\\\"click:blur focus:blur\\\"</code>\\n</p>\\n\\n<app-code-example src=\\\"ui-elements/tooltips/tooltips.component.html#icon\\\">\\n  <div class=\\\"d-flex align-items-center\\\">\\n    Steuerrechtlicher Wohnsitz &nbsp;\\n    <span\\n      tabindex=\\\"0\\\"\\n      class=\\\"fas fa-info-circle text-info mr-2\\\"\\n      style=\\\"font-size: 2rem\\\"\\n      triggers=\\\"click:blur focus:blur\\\"\\n      ngbTooltip=\\\"Der Ort, wo sich eine Person mit der Absicht dauernden Verbleibens aufhält.\\\"></span>\\n  </div>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Inline Tooltip</h2>\\n<p>\\n  Ein Inline Tooltip erklärt einen Begriff, der im Text vorkommt. Kann bei erklärungsbedürftigen\\n  Texten im Fliesstext eingesetzt werden. Das Wort ist visuell hervorzuheben und muss sich von einem\\n  Link klar unterscheiden.\\n  <br />\\n  Damit der Tooltip auch per Tastatur erreichbar ist, muss auf dem Element ein Tabindex gesetzt\\n  werden.\\n</p>\\n\\n<app-code-example src=\\\"ui-elements/tooltips/tooltips.component.html#inline\\\">\\n  <p>\\n    Lorem ipsum dolor sit amet, consetetur sadipscing elitr,\\n    <span tabindex=\\\"0\\\" class=\\\"border-bottom-dotted text-muted\\\" ngbTooltip=\\\"dolor sit amet\\\">\\n      sed diam nonumy\\n    </span>\\n    eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\\n  </p>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Popover während der Feldeingabe</h2>\\n<p>\\n  Das Popover erscheint automatisch, sobald der Nutzer das Eingabefeld aktiviert. Beispielsweise bei\\n  Passwortvergabe hilfreich.\\n</p>\\n\\n<app-code-example src=\\\"ui-elements/tooltips/tooltips.component.html#inputfield\\\">\\n  <form>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label for=\\\"inputPassword2\\\">Password</label>\\n        <input\\n          type=\\\"password\\\"\\n          class=\\\"form-control\\\"\\n          id=\\\"inputPassword2\\\"\\n          placeholder=\\\"Password\\\"\\n          popoverTitle=\\\"Mindestanforderungen\\\"\\n          placement=\\\"right\\\"\\n          autoClose=\\\"outside\\\"\\n          triggers=\\\"focus:blur\\\"\\n          ngbPopover=\\\"Das Passwort muss mind. 8 Zeichen lang sein, Gross- und Kleinbuchstaben, eine Zahl und ein Sonderzeichen enthalten.\\\" />\\n      </div>\\n    </div>\\n  </form>\\n</app-code-example>\\n\\n<h2 class=\\\"mt-5\\\">Popover für zusätzliche Inhalte</h2>\\n<p>\\n  Popovers können im Gegensatz zu Tooltips viel mehr Text und auch einen Header enthalten, aber auch\\n  weitere HTML-Elemente wie Bilder, Links oder Buttons.\\n</p>\\n\\n<app-code-example src=\\\"ui-elements/tooltips/tooltips.component.html#popover\\\">\\n  <ng-template #popContent>\\n    <p>In diesem Guide lernen Sie Schritt für Schritt die wichtigsten Funktionen kennen:</p>\\n    <ol>\\n      <li>Steuererklärung erfassen</li>\\n      <li>Belege einreichen</li>\\n      <li>Steuererklärung freigeben</li>\\n    </ol>\\n    <div class=\\\"float-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mr-2 my-3\\\" (click)=\\\"p.close()\\\">\\n        Weiter\\n        <span class=\\\"fas fa-arrow-right ml-2\\\"></span>\\n      </button>\\n    </div>\\n  </ng-template>\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"btn btn-primary mr-2\\\"\\n    #p=\\\"ngbPopover\\\"\\n    triggers=\\\"manual\\\"\\n    (click)=\\\"p.toggle()\\\"\\n    placement=\\\"right\\\"\\n    [autoClose]=\\\"'outside'\\\"\\n    popoverTitle=\\\"Willkommen auf der Tour\\\"\\n    [ngbPopover]=\\\"popContent\\\">\\n    <span class=\\\"fas fa-play mr-3\\\"></span>\\n    Demo starten\\n  </button>\\n</app-code-example>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-tooltips',\\n  templateUrl: './tooltips.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class TooltipsComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Datenstruktur</h1>\\n\\n<p class=\\\"lead\\\">\\n  Die Strukturierung von Daten ist ein zentraler Aspekt der Informationsarchitektur. Nach welchen\\n  Kriterien können die Inhalte der Navigation oder einer Liste strukturiert werden?\\n</p>\\n\\n<h2>Warum ist es wichtig?</h2>\\n<p>\\n  In Navigationen, Filtern oder Listen wollen Nutzer schnell das Gewünschte finden. Es ist wichtig,\\n  sich zu überlegen, was die zentralen Nutzungsanforderungen einer Ansicht sind. Mögliche Muster\\n  sind:\\n</p>\\n<h2 class=\\\"mt-5\\\">Ungeordnete Struktur</h2>\\n<ul>\\n  <li>Themen (z.B. Inland, Ausland, Wirtschaft, Sport, Finanzen)</li>\\n  <li>Zielgruppen (z.B. Männer, Frauen, Kinder)</li>\\n  <li>Tätigkeiten (z.B. importieren, exportieren, hochladen etc.)</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Strukturierte Anordnung</h2>\\n<ul>\\n  <li>Chronologisch (z.B. nach Speicherdatum, Veröffentlichungsdatum etc.)</li>\\n  <li>Alphabetisch (Wikis, Glossar, Länderlisten,...)</li>\\n  <li>Häufigkeit (meistgenutzt, etc.)</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Was ist zu berücksichtigen?</h2>\\n<ul>\\n  <li>\\n    Wie oft benötigt der Nutzer welche Informationen? Es ist beispielsweise eine Themenliste einer\\n    Alphabetischen Liste vorzuziehen, wenn der Nutzer manche Navigationspunkte viel häufiger\\n    braucht.\\n  </li>\\n  <li>\\n    Eine alphabetische Liste macht Sinn, wenn bei vielen Daten dem Nutzer das Auffinden vereinfacht\\n    wird, z.B. die Länderliste. Werden z.B. drei Länder, wie CH; DE; AT am häufigsten benötigt,\\n    macht es Sinn, diese vor die alphabetische Liste in einem Dropdown einzufügen und erst dann mit\\n    Angola zu beginnen.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/layout/navigation\\\" class=\\\"highlight\\\">Navigation</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/usability/mauswege\\\" class=\\\"highlight\\\">Mauswege</a>\\n  </li>\\n</ul>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './datenstruktur.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class DatenstrukturComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Mauswege</h1>\\n\\n<p class=\\\"lead\\\">\\n  Mauswege beschreiben die Distanz, die der Nutzer von einem Interaktionselement zum nächsten\\n  braucht.\\n</p>\\n\\n<h2>Warum ist es wichtig?</h2>\\n<p>\\n  Die Berechnung der Mauswege mag banal erscheinen. Wenn aber der Nutzer bei der Bedienung laufend\\n  die gesamte Bedienoberfläche überqueren muss, senkt das seine Effizienz und die Zufriedenheit mit\\n  der Anwendung.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Was ist zu berücksichtigen?</h2>\\n<p>Die zentralen Fragen sind:</p>\\n<ul>\\n  <li>Welche Informationen muss der Nutzer als erstes wahrnehmen und mental verarbeiten?</li>\\n  <li>\\n    Sind beispielsweise Dropdowns nur so breit, wie sie es für eine gute Lesbarkeit sein müssen?\\n    Sonst liest der Nutzer vorne den Text und zirkelt dann zum Dropdown Pfeil.\\n  </li>\\n  <li>In welcher Reihenfolge bedient der Nutzer üblicherweise die Bedienoberfläche?</li>\\n  <li>\\n    Wie können die Interaktionselemente so angeordnet werden, dass der Benutzer möglichst schnell\\n    mit der Maus von Element zu Element navigieren kann?\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/usability/tastaturbedienbarkeit\\\" class=\\\"highlight\\\">\\n      Tastaturbedienbarkeit\\n    </a>\\n  </li>\\n</ul>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './mauswege.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class MauswegeComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Mentale Modelle</h1>\\n\\n<p class=\\\"lead\\\">\\n  Mentale Modelle sind die Vorstellungen, die Benutzer über Systeme, Vorgänge, Geräte etc. haben.\\n</p>\\n\\n<h2>Warum ist es wichtig?</h2>\\n<p>\\n  Wenn ein mentales Modell eines Benutzers von einem interaktiven System unvollständig oder\\n  widersprüchlich ist, dann kann der Benutzer das interaktive System nicht hindernisfrei benutzen.\\n  Beim GUI Design sollte man sich also immer fragen: \\\"Was sind die mentalen Modelle der Benutzer?\\\"\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Was ist zu berücksichtigen?</h2>\\n<p>\\n  Wer die mentalen Modelle seiner Nutzer kennt, baut die besseren Applikationen.\\n  <br />\\n  Softwareentwickler haben häufig aufgrund der technischen Datenstrukturen andere mentale Modelle\\n  als die Nutzer, die sich an der realen Welt und nicht Datenbankstrukturen orientieren.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Beispiel</h2>\\n<div class=\\\"form-row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <img\\n      src=\\\"assets/mentale-modelle1.png\\\"\\n      alt=\\\"Game Screenshot Top down view\\\"\\n      class=\\\"img-thumbnail w-100\\\" />\\n  </div>\\n  <div class=\\\"col-md-8\\\">\\n    Bei einem Game bewegt\\n    <span class=\\\"keyboard-key\\\">\\n      <span class=\\\"fas fa-long-arrow-alt-right\\\"></span>\\n    </span>\\n    die Spielfigur nach rechts.\\n  </div>\\n</div>\\n<div class=\\\"form-row mt-4\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <img\\n      src=\\\"assets/mentale-modelle2.png\\\"\\n      alt=\\\"Screenshot Website Bildergallerie\\\"\\n      class=\\\"img-thumbnail w-100\\\" />\\n  </div>\\n  <div class=\\\"col-md-8\\\">\\n    Auf einer Website bewegt genau dasselbe Icon (bzw. dieselbe Taste) das Bild nach links.\\n    <br />\\n    Je nach Kontext, hat der Nutzer ein anderes Mentales Modell wie sich die Welt, respektive das\\n    GUI verhält.\\n  </div>\\n</div>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './mentale-modelle.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class MentaleModelleComponent {}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Tastaturbedienbarkeit</h1>\\n\\n<p class=\\\"lead\\\">\\n  Für die Gewährleistung der Barrierefreiheit, aber auch für das \\\"Enabling\\\" von Power-Usern einer\\n  Fachapplikation, ist eine gut durchdachte Tastaturbedienbarkeit essentiell.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Warum ist es wichtig?</h2>\\n<ul>\\n  <li>\\n    Verbesserung der Barrierefreiheit der Applikation (z.B. setzen viele assistive Werkzeuge für\\n    Menschen mit Behinderung voraus, dass eine Webapplikation tastaturbedienbar ist).\\n  </li>\\n  <li>Enabling von Power-Usern. Erhöht die Effizienz und die Zufriedenheit mit der Applikation.</li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Was ist zu berücksichtigen?</h2>\\n<ul>\\n  <li>\\n    Am besten legt man die Maus zur Seite und zwingt sich die Applikation ausschliesslich via\\n    Tastatur zu bedienen. So können die Probleme schnell identifiziert werden.\\n  </li>\\n  <li>\\n    Wie oft benutzt ein durchschnittlicher Endanwender die Fachapplikation?\\n    <br />\\n    Bei einem Admin-GUI, welches einmal im Monat kurz verwendet wird, ist eine ausgefeilte\\n    Tastatursteuerung nicht notwendig. Für Schalterangestellte, die eine Anwendung den ganzen Tag\\n    lang bedienen, ist die Tastaturbedienbarkeit dagegen von grosser Wichtigkeit.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Verwandte Elemente</h2>\\n<ul class=\\\"related-elements\\\">\\n  <li>\\n    <a routerLink=\\\"/styleguide/usability/mauswege\\\" class=\\\"highlight\\\">Mauswege</a>\\n  </li>\\n  <li>\\n    <a routerLink=\\\"/styleguide/ui-elements/modal-dialog\\\" class=\\\"highlight\\\">Modal Dialog</a>\\n  </li>\\n  <li><a routerLink=\\\"/styleguide/ui-elements/buttons\\\">Buttons</a></li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Basics</h2>\\n<p>Folgende minimale Tastaturbedienbarkeit sollte jede Fachapplikation implementieren:</p>\\n<ul>\\n  <li>\\n    Die Tabulator-Reihenfolge der UI-Elemente muss der Bedienlogik entsprechen.\\n    <br />\\n    Blinde Benutzer bedienen die Applikation mit Screenreadern. Diese lesen ihnen die Seiteninhalte\\n    vor. Screenreader springen dabei von UI-Element zu UI-Element. Daher ist die korrekte\\n    Tabulator-Reihenfolge für die barrierefreie Umsetzung zentral.\\n    <br />\\n  </li>\\n  <li>\\n    Jedes funktionale UI-Element muss mit dem Tabulator ansteuerbar sein.\\n    <br />\\n    Landet der Tabulator z.B. nie auf dem Senden Button, kann der blinde Nutzer das Formular nie\\n    versenden.\\n  </li>\\n  <li>\\n    <span class=\\\"keyboard-key\\\">Enter</span>\\n    betätigt den Primary Button einer Ansicht oder eines Dialogs, falls einer vorhanden ist. Bei\\n    Suchfeldern wird die Suche ausgelöst.\\n  </li>\\n  <li>\\n    <span class=\\\"keyboard-key\\\">Esc</span>\\n    schliesst Modal Dialoge. Ausnahmen, siehe\\n    <a routerLink=\\\"/styleguide/ui-elements/modal-dialog\\\" class=\\\"highlight\\\">Modal Dialog</a>\\n    <br />\\n  </li>\\n  <li>\\n    Wo sinnvoll, sollen Elemente mit den Cursor-Tasten auswählbar sein.\\n    <br />\\n    Beispiele: \\\"Create\\\" Modal Dialog im Confluence oder eine Tabelle mit Checkboxen auf jeder Zeile\\n    für eine rasche Selektion.\\n  </li>\\n</ul>\\n\\n<div class=\\\"alert alert-warning d-flex align-items-center p-3 text-dark my-5\\\">\\n  <span class=\\\"fas fa-info-circle fa-2x text-info mr-4\\\"></span>\\n  <div>\\n    Für die Erreichbarkeit via Tabulator ist zu beachten, dass nur aktive\\n    <code>&lt;input></code>\\n    und\\n    <code>&lt;button></code>\\n    und\\n    <code>&lt;a></code>\\n    mit einem\\n    <code>href</code>\\n    -Attribut per Tastatur erreichbar sind. Um andere Elemente erreichbar zu machen, muss das\\n    Attribut\\n    <code>tabindex=\\\"0\\\"</code>\\n    gesetzt werden. Der Wert\\n    <code>0</code>\\n    sorgt hier dafür, dass das Element in der natürlichen Tab-Reihenfolge erreichbar ist.\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-5\\\">Hotkeys</h2>\\n<p>\\n  Für eine optimierte Tastaturbedienbarkeit können in der Applikation Hotkeys/Shortcuts für die\\n  Navigation und für häufig verwendete Funktionen definiert werden:\\n</p>\\n<ul>\\n  <li>\\n    Hotkeys dürfen nicht mit Browser oder OS-Shortcuts kollidieren (also kein\\n    <span class=\\\"keyboard-key\\\">Ctrl</span>\\n    +\\n    <span class=\\\"keyboard-key\\\">n</span>\\n    für neues Element).\\n  </li>\\n  <li>\\n    Am besten eignen sich Hotkeys ohne Modifier-Taste (Beispiel:\\n    <span class=\\\"keyboard-key\\\">e</span>\\n    - edit,\\n    <span class=\\\"keyboard-key\\\">c</span>\\n    - create)\\n  </li>\\n  <li>\\n    Wenn besonders viele Hotkeys nötig sind, können Hotkey-Sequenzen von zwei Buchstaben sinnvoll\\n    sein.\\n    <br />\\n    Beispiel:\\n    <span class=\\\"keyboard-key\\\">g</span>\\n    &nbsp;\\n    <span class=\\\"keyboard-key\\\">p</span>\\n    für gehe zu Person,\\n    <span class=\\\"keyboard-key\\\">g</span>\\n    &nbsp;\\n    <span class=\\\"keyboard-key\\\">f</span>\\n    für gehe zu Fahrzeug, etc.\\n  </li>\\n  <li>\\n    Hotkeys müssen unabhängig von der aktiven Sprache immer dieselben sein. Wenn kein gemeinsamer\\n    Buchstabe in allen Sprachen passt, bietet sich Englisch als Kompromiss an.\\n  </li>\\n  <li>\\n    Eine Legende aller Hotkeys sollte für Benutzer innerhalb der Applikation leicht zugreifbar sein\\n    und nicht irgendwo in einer Bedienungsanleitung versteckt sein. Optimalerweise wird die Legende\\n    in einem Modal Dialog präsentiert, welcher über einen Menupunkt aufgerufen werden kann.\\n  </li>\\n  <li>\\n    Wenn erhöhte Ansprüche an die Barrierefreiheit vorhanden sind, müssen weitere Faktoren beachtet\\n    werden. Siehe dazu die\\n    <a\\n      class=\\\"external\\\"\\n      href=\\\"https://www.w3.org/WAI/WCAG21/Understanding/character-key-shortcuts.html\\\"\\n      target=\\\"_blank\\\">\\n      Ausführungen der Web Accessibility Initiative (WAI)\\n    </a>\\n    des W3C.\\n  </li>\\n</ul>\\n\\n<div class=\\\"card my-5\\\">\\n  <h2 class=\\\"card-header\\\">\\n    <em class=\\\"fas fa-wrench mr-3\\\"></em>\\n    Implementierung\\n  </h2>\\n  <div class=\\\"card-body\\\">\\n    <p>\\n      Wir verwenden\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://omridevk.github.io/ng-keyboard-shortcuts/index.html\\\"\\n        target=\\\"_blank\\\">\\n        ng-keyboard-shortcuts\\n      </a>\\n      für die Implementierung von Hotkeys.\\n      <br />\\n      <br />\\n      Mit\\n      <code>ng-keyboard-shortcuts-help</code>\\n      kann zwar automatisch eine Hotkey-Legende erstellt werden. Jedoch kann diese nicht individuell\\n      gelayoutet werden, es muss\\n      <code>BrowserAnimationsModule</code>\\n      importiert werden, und das\\n      <span class=\\\"keyboard-key\\\">Esc</span>\\n      -Binding zum Schliessen der Hilfe unterbindet das\\n      <span class=\\\"keyboard-key\\\">Esc</span>\\n      -Binding von NgbModal. Dies hat zur Folge, dass die Modal Dialoge der Fachapplikation nicht\\n      mehr mit\\n      <span class=\\\"keyboard-key\\\">Esc</span>\\n      geschlossen werden können.\\n      <br />\\n      <br />\\n      Deshalb setzen wir auf eine selbst erstellte Hotkey-Legende mit NgbModal (Siehe\\n      Code-Beispiel).\\n    </p>\\n  </div>\\n</div>\\n\\n<app-code-example\\n  src=\\\"usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.html#tastaturbedienbarkeit,usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.ts\\\">\\n  <ng-keyboard-shortcuts [shortcuts]=\\\"shortcuts\\\"></ng-keyboard-shortcuts>\\n\\n  <p>\\n    Tastaturbefehle anzeigen mit einem einfachen Hotkey:\\n    <span class=\\\"keyboard-key\\\">?</span>\\n    oder\\n    <span class=\\\"keyboard-key\\\">h</span>\\n    <br />\\n    Tastaturbefehle anzeigen mit einer Hotkey-Sequenz:\\n    <span class=\\\"keyboard-key\\\">k</span>\\n    &nbsp;\\n    <span class=\\\"keyboard-key\\\">s</span>\\n    <br />\\n  </p>\\n  <button class=\\\"btn btn-outline-primary my-2\\\" (click)=\\\"showModal()\\\">\\n    Tastaturbefehle anzeigen\\n  </button>\\n\\n  <ng-template #content let-modal>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Tastaturbefehle</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('[x] click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 h4 pb-3\\\">Navigation</div>\\n        <div class=\\\"col-md-6 h4 pb-3\\\">Aktionen</div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 pb-2\\\">\\n          Startseite\\n          <div class=\\\"float-right pr-4\\\">\\n            <span class=\\\"keyboard-key\\\">s</span>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6 pb-2\\\">\\n          Neue Person erfassen\\n          <div class=\\\"float-right pr-4\\\">\\n            <span class=\\\"keyboard-key\\\">n</span>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 pb-2\\\">\\n          Personensuche\\n          <div class=\\\"float-right pr-4\\\">\\n            <span class=\\\"keyboard-key\\\">p</span>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6 pb-2\\\">\\n          Editieren - Person\\n          <div class=\\\"float-right pr-4\\\">\\n            <span class=\\\"keyboard-key\\\">e</span>\\n            &nbsp;\\n            <span class=\\\"keyboard-key\\\">p</span>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 pb-2\\\">\\n          Fahrzeugsuche\\n          <div class=\\\"float-right pr-4\\\">\\n            <span class=\\\"keyboard-key\\\">f</span>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6 pb-2\\\">\\n          Editieren - Fahrzeug\\n          <div class=\\\"float-right pr-4\\\">\\n            <span class=\\\"keyboard-key\\\">e</span>\\n            &nbsp;\\n            <span class=\\\"keyboard-key\\\">f</span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</app-code-example>\\n\";","export default \"import { AfterViewInit, Component, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\\nimport { KeyboardShortcutsComponent, ShortcutInput } from 'ng-keyboard-shortcuts';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './tastaturbedienbarkeit.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class TastaturbedienbarkeitComponent implements AfterViewInit {\\n  shortcuts: ShortcutInput[] = [];\\n  modal!: NgbModalRef;\\n\\n  @ViewChild(KeyboardShortcutsComponent)\\n  private readonly keyboard!: KeyboardShortcutsComponent;\\n  @ViewChild('content')\\n  templateRef!: TemplateRef<unknown>;\\n\\n  constructor(private readonly modalService: NgbModal) {}\\n\\n  ngAfterViewInit(): void {\\n    this.shortcuts.push(\\n      {\\n        key: '?',\\n        command: () => this.showModal(),\\n        preventDefault: true,\\n      },\\n      {\\n        key: 'h',\\n        command: () => this.showModal(),\\n        preventDefault: true,\\n      },\\n      {\\n        key: ['k s'],\\n        command: () => this.showModal(),\\n        preventDefault: true,\\n      }\\n    );\\n  }\\n\\n  showModal(): void {\\n    if (this.modalService.hasOpenModals()) {\\n      this.modal.close();\\n    }\\n    this.modal = this.modalService.open(this.templateRef);\\n  }\\n}\\n\";","export default \"<h1 class=\\\"mt-3 mb-4\\\">Bedag Angular Styleguide</h1>\\n\\n<p class=\\\"lead\\\">\\n  Der Styleguide bildet die Grundlage für die Frontend-Entwicklung neuer Webapplikationen der Bedag.\\n  Er unterstützt dich mit vielen Beispielen und Hilfestellungen bei der Entwicklung der User\\n  Interfaces.\\n</p>\\n\\n<p>\\n  Alle Elemente bauen auf Bootstrap und Angular auf. Die Elemente im Styleguide können direkt durch\\n  Kopieren der Code Samples eingesetzt werden. Alles was von Bootstrap abweicht, wird automatisch\\n  überschrieben.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Versionen</h2>\\n<p>Der Styleguide basiert auf folgenden Versionen:</p>\\n<div class=\\\"container-fluid\\\">\\n  <dl class=\\\"row\\\">\\n    <dt class=\\\"col-2\\\">Angular</dt>\\n    <dd class=\\\"col-10\\\">\\n      <strong>{{ version['@angular/core'] }}</strong>\\n    </dd>\\n    <dt class=\\\"col-2\\\">Bootstrap</dt>\\n    <dd class=\\\"col-10\\\">\\n      <strong>{{ version['bootstrap'] }}</strong>\\n    </dd>\\n    <dt class=\\\"col-2\\\">NG Bootstrap</dt>\\n    <dd class=\\\"col-10\\\">\\n      <strong>{{ version['@ng-bootstrap/ng-bootstrap'] }}</strong>\\n    </dd>\\n  </dl>\\n</div>\\n<p>\\n  Diese Libraries werden im ganzen Styleguide eingesetzt, andere wie z.B.\\n  <code>ng-select</code>\\n  jeweils nur für ein einzelnes Element.\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Getting Started</h2>\\n\\n<p>\\n  Um die Code-Beispiele mit Copy-Paste einsetzen zu können, braucht es nur einige CSS-Dateien und\\n  ein paar kleine Typescript-Komponenten.\\n  <br />\\n  Im Confluence befindet sich eine\\n  <a\\n    class=\\\"external\\\"\\n    href=\\\"https://confluence.se.bedag.ch/display/ENGINEERING/Anleitungen+Bedag+Angular+Styleguide\\\"\\n    target=\\\"_blank\\\">\\n    Anleitung für den Einbau in bestehende oder neue Projekte\\n  </a>\\n  .\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Was bietet der Styleguide?</h2>\\n\\n<ul>\\n  <li>\\n    Ein\\n    <a class=\\\"highlight\\\" routerLink=\\\"/styleguide/layout\\\">Layout-Gerüst</a>\\n    für Responsive Web-Applikationen, die sowohl auf dem Desktop als auch auf dem Tablet oder\\n    Smartphone gut bedienbar sind.\\n  </li>\\n  <li>Vorlagen und Code-Beispiele, die die Arbeit am Frontend erleichtern.</li>\\n  <li>\\n    User Experience Design Guidelines, mit denen die Benutzerführung optimiert und für jeden Kontext\\n    das richtige GUI-Element identifiziert werden kann.\\n  </li>\\n</ul>\\n<p>\\n  Unsere Applikationen werden dank benutzerfreundlicher GUIs qualitativ hochwertiger und für die\\n  Kunden intuitiver und effizienter bedienbar.\\n  <br />\\n</p>\\n\\n<h2 class=\\\"mt-5\\\">Was bietet der Styleguide (noch) nicht?</h2>\\n\\n<ul>\\n  <li>\\n    <strong>Internationalisierung:</strong>\\n    damit verschiedene i18n-Lösungen eingesetzt werden können und um die Beispiele lesbarer zu\\n    machen, wird vom Styleguide keine i18n-Lösung vorgegeben.\\n  </li>\\n  <li>\\n    <strong>Accessibility:</strong>\\n    Projekte haben unterschiedliche Anforderungen betreffend Accessibility. Der Styleguide und die\\n    Codebeispiele enthalten Basisinformationen für die wichtigsten Bereiche, aber für Projekte mit\\n    hohen Anforderungen an die Barrierefreiheit reicht dies noch nicht aus. Wir empfehlen als\\n    weiterführende Informationsquellen den\\n    <a class=\\\"external\\\" href=\\\"https://www.accessibility-developer-guide.com/\\\" target=\\\"_blank\\\">\\n      Accessibility Developer Guide\\n    </a>\\n    , sowie die\\n    <a class=\\\"external\\\" href=\\\"https://www.w3.org/WAI/\\\" target=\\\"_blank\\\">\\n      Web Accessibility Initiative (WAI)\\n    </a>\\n    des W3C.\\n  </li>\\n  <li>\\n    <strong>Web Design für Internetauftritte:</strong>\\n    Der Styleguide ist auf das Design von Fachapplikationen ausgerichtet. Für öffentlich zugängliche\\n    Internetauftritte gelten in vielen Bereichen andere Designgrundsätze als für Fachapplikationen.\\n  </li>\\n</ul>\\n\\n<h2 class=\\\"mt-5\\\">Andere Styleguides</h2>\\n<p>\\n  Bei Applikationen, wo die Verwendung eines Styleguides des Kunden gefordert ist, haben die\\n  Vorgaben zum Look & Feel des Kunden-Styleguides Vorrang. Trotzdem können die UX-Guidelines in\\n  diesem Styleguide nützliche Zusatzinformationen zur Gestaltung von GUI-Masken liefern.\\n</p>\\n<div class=\\\"container-fluid\\\">\\n  <dl class=\\\"row\\\">\\n    <dt class=\\\"col-2\\\">Bedag Brand</dt>\\n    <dd class=\\\"col-10\\\">\\n      <a class=\\\"external\\\" href=\\\"https://www.cd.sites.be.ch/document/63\\\" target=\\\"_blank\\\">\\n        Einstiegsseite\\n      </a>\\n      -\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://www.cd.sites.be.ch/document/54#/basics/farbwelt\\\"\\n        target=\\\"_blank\\\">\\n        Farb-Schemas\\n      </a>\\n      (User: communications@bedag.ch / PW: seecdmanual)\\n    </dd>\\n    <dt class=\\\"col-2\\\">Kanton Bern</dt>\\n    <dd class=\\\"col-10\\\">\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://www.cd.sites.be.ch/d/mLaezX2xseW6/anwendungen#/web-mobile/web-applikationen\\\"\\n        target=\\\"_blank\\\">\\n        Einstiegsseite\\n      </a>\\n      -\\n      <a class=\\\"external\\\" href=\\\"https://www.be.ch/web-styleguide\\\" target=\\\"_blank\\\">Styleguide</a>\\n      (User: guest / PW: kantonbern)\\n    </dd>\\n    <dt class=\\\"col-2\\\">Bund</dt>\\n    <dd class=\\\"col-10\\\">\\n      <a class=\\\"external\\\" href=\\\"https://swiss.github.io/styleguide/de/\\\" target=\\\"_blank\\\">\\n        Einstiegsseite\\n      </a>\\n      -\\n      <a class=\\\"external\\\" href=\\\"https://github.com/swiss/styleguide\\\" target=\\\"_blank\\\">\\n        Git-Repository\\n      </a>\\n    </dd>\\n  </dl>\\n</div>\\n<h2 class=\\\"mt-5\\\">Fragen oder Ergänzungen?</h2>\\n<div class=\\\"container-fluid mt-3\\\">\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <a\\n        target=\\\"_blank\\\"\\n        href=\\\"https://teams.microsoft.com/l/channel/19%3afbc7b6bb05804273a1cae1c741c097f6%40thread.skype/IBS%2520GUI%2520Entwicklung\\n?groupId=8bb72eea-4e26-499b-be1b-871bca7b411d&tenantId=5aa867eb-55db-4b2c-a9c9-3d6c94c46894\\\">\\n        <img\\n          class=\\\"img-fluid\\\"\\n          style=\\\"max-width: 4em\\\"\\n          alt=\\\"Microsoft Teams\\\"\\n          src=\\\"assets/ms-teams-logo.png\\\" />\\n      </a>\\n    </div>\\n    <p class=\\\"col-md-10 d-flex align-items-center mb-0\\\">\\n      Das UX-Team ist gerne für euch da. Nimm Kontakt mit uns auf im Channel&nbsp;\\n      <a\\n        class=\\\"external\\\"\\n        href=\\\"https://teams.microsoft.com/l/channel/19%3afbc7b6bb05804273a1cae1c741c097f6%40thread.skype/IBS%2520GUI%2520Entwicklung\\n?groupId=8bb72eea-4e26-499b-be1b-871bca7b411d&tenantId=5aa867eb-55db-4b2c-a9c9-3d6c94c46894\\\"\\n        target=\\\"_blank\\\">\\n        IBS GUI Entwicklung\\n      </a>\\n      &nbsp;in Teams.\\n    </p>\\n  </div>\\n</div>\\n<p>\\n  Der Styleguide soll kontinuierlich weiterentwickelt werden. Hast du ein neues Element entwickelt,\\n  das nicht im Styleguide vorhanden war oder einen Bugfix oder eine Verbesserung eines bereits\\n  vorhandenen Elements?\\n  <br />\\n  Am besten erstellst du direkt einen Branch und einen Pull Request mit deinem Vorschlag im\\n  Styleguide Git-Repository.\\n  <br />\\n  Danke für deinen Beitrag. Er hilft allen Teams.\\n</p>\\n\";","export default \"import { Component, ViewEncapsulation } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-layout',\\n  templateUrl: './welcome.component.html',\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class WelcomeComponent {\\n  // eslint-disable-next-line\\n  version: { [index: string]: string } = require('../../../../package.json').dependencies;\\n}\\n\";","var map = {\n\t\"./app-nav.component.html\": 3288,\n\t\"./app-nav.component.ts\": 9111,\n\t\"./app.component.html\": 1106,\n\t\"./app.component.ts\": 6023,\n\t\"./bedag-components/alert/alert-list.component.ts\": 810,\n\t\"./bedag-components/alert/alert.component.ts\": 8753,\n\t\"./bedag-components/datepicker/datepicker.component.html\": 846,\n\t\"./bedag-components/datepicker/datepicker.component.ts\": 5430,\n\t\"./bedag-components/functionbar/functionbar-item/functionbar-item.component.ts\": 6357,\n\t\"./bedag-components/functionbar/functionbar/functionbar.component.html\": 1266,\n\t\"./bedag-components/functionbar/functionbar/functionbar.component.ts\": 1100,\n\t\"./bedag-components/layout/custom-max-width-component.ts\": 4122,\n\t\"./bedag-components/navigation/nav-item.component.html\": 7017,\n\t\"./bedag-components/navigation/nav-item.component.ts\": 8243,\n\t\"./bedag-components/navigation/nav-menu.component.ts\": 7989,\n\t\"./styleguide/basics/colors/colors.component.html\": 1193,\n\t\"./styleguide/basics/colors/colors.component.ts\": 9957,\n\t\"./styleguide/basics/icons/icons.component.html\": 2988,\n\t\"./styleguide/basics/icons/icons.component.ts\": 7615,\n\t\"./styleguide/basics/logo/logo.component.html\": 5146,\n\t\"./styleguide/basics/logo/logo.component.ts\": 1348,\n\t\"./styleguide/basics/typography/typography.component.html\": 8031,\n\t\"./styleguide/basics/typography/typography.component.ts\": 3233,\n\t\"./styleguide/demo-utils/code-example/code-example.component.html\": 1243,\n\t\"./styleguide/demo-utils/code-example/code-example.component.ts\": 5752,\n\t\"./styleguide/layout/actionbar/actionbar-demo.component.html\": 9195,\n\t\"./styleguide/layout/actionbar/actionbar-demo.component.ts\": 5077,\n\t\"./styleguide/layout/breadcrumbs/breadcrumbs.component.html\": 4602,\n\t\"./styleguide/layout/breadcrumbs/breadcrumbs.component.ts\": 742,\n\t\"./styleguide/layout/functionbar/functionbar-demo.component.html\": 2278,\n\t\"./styleguide/layout/functionbar/functionbar-demo.component.ts\": 8055,\n\t\"./styleguide/layout/grid/grid.component.html\": 3733,\n\t\"./styleguide/layout/grid/grid.component.ts\": 9042,\n\t\"./styleguide/layout/header/header-demo.component.html\": 9297,\n\t\"./styleguide/layout/header/header-demo.component.ts\": 7827,\n\t\"./styleguide/layout/layout.component.html\": 3748,\n\t\"./styleguide/layout/layout.component.ts\": 7999,\n\t\"./styleguide/layout/navigation/navigation-demo.component.html\": 253,\n\t\"./styleguide/layout/navigation/navigation-demo.component.ts\": 2507,\n\t\"./styleguide/ui-elements/alerts/alert-buttons.component.ts\": 3570,\n\t\"./styleguide/ui-elements/alerts/alerts.component.html\": 8777,\n\t\"./styleguide/ui-elements/alerts/alerts.component.ts\": 9320,\n\t\"./styleguide/ui-elements/badges/badges.component.html\": 1745,\n\t\"./styleguide/ui-elements/badges/badges.component.ts\": 2899,\n\t\"./styleguide/ui-elements/buttons/buttons.component.html\": 3739,\n\t\"./styleguide/ui-elements/buttons/buttons.component.ts\": 8652,\n\t\"./styleguide/ui-elements/datatables/data.ts\": 9492,\n\t\"./styleguide/ui-elements/datatables/datatables.component.html\": 9266,\n\t\"./styleguide/ui-elements/datatables/datatables.component.ts\": 9245,\n\t\"./styleguide/ui-elements/dividers/dividers.component.html\": 4277,\n\t\"./styleguide/ui-elements/dividers/dividers.component.ts\": 30,\n\t\"./styleguide/ui-elements/dropdown-menu/dropdown-menu.component.html\": 2833,\n\t\"./styleguide/ui-elements/dropdown-menu/dropdown-menu.component.ts\": 8105,\n\t\"./styleguide/ui-elements/forms/autocompletion/autocompletion-demo.component.html\": 2681,\n\t\"./styleguide/ui-elements/forms/autocompletion/autocompletion-demo.component.ts\": 4458,\n\t\"./styleguide/ui-elements/forms/autocompletion/data.ts\": 6661,\n\t\"./styleguide/ui-elements/forms/datepicker/datepicker-demo.component.html\": 5343,\n\t\"./styleguide/ui-elements/forms/datepicker/datepicker-demo.component.ts\": 9967,\n\t\"./styleguide/ui-elements/forms/forms.component.html\": 5913,\n\t\"./styleguide/ui-elements/forms/forms.component.ts\": 8718,\n\t\"./styleguide/ui-elements/forms/large-form-example/large-form-example.component.html\": 47,\n\t\"./styleguide/ui-elements/forms/large-form-example/large-form-example.component.ts\": 8983,\n\t\"./styleguide/ui-elements/forms/select-dropdowns/select-dropdowns.component.html\": 5173,\n\t\"./styleguide/ui-elements/forms/select-dropdowns/select-dropdowns.component.ts\": 2723,\n\t\"./styleguide/ui-elements/forms/small-form-example/small-form-example.component.html\": 9488,\n\t\"./styleguide/ui-elements/forms/small-form-example/small-form-example.component.ts\": 7660,\n\t\"./styleguide/ui-elements/links/links.component.html\": 308,\n\t\"./styleguide/ui-elements/links/links.component.ts\": 5505,\n\t\"./styleguide/ui-elements/modal-dialog/modal-dialog.component.html\": 736,\n\t\"./styleguide/ui-elements/modal-dialog/modal-dialog.component.ts\": 3649,\n\t\"./styleguide/ui-elements/overflow-menu/overflow-menu.component.html\": 6488,\n\t\"./styleguide/ui-elements/overflow-menu/overflow-menu.component.ts\": 9048,\n\t\"./styleguide/ui-elements/progress-indicators/progress-indicators.component.html\": 2690,\n\t\"./styleguide/ui-elements/progress-indicators/progress-indicators.component.ts\": 8299,\n\t\"./styleguide/ui-elements/tabs/tabs.component.html\": 6845,\n\t\"./styleguide/ui-elements/tabs/tabs.component.ts\": 5178,\n\t\"./styleguide/ui-elements/tooltips/tooltips.component.html\": 5862,\n\t\"./styleguide/ui-elements/tooltips/tooltips.component.ts\": 7693,\n\t\"./styleguide/usability/datenstruktur/datenstruktur.component.html\": 4052,\n\t\"./styleguide/usability/datenstruktur/datenstruktur.component.ts\": 5697,\n\t\"./styleguide/usability/mauswege/mauswege.component.html\": 5804,\n\t\"./styleguide/usability/mauswege/mauswege.component.ts\": 3668,\n\t\"./styleguide/usability/mentale-modelle/mentale-modelle.component.html\": 9679,\n\t\"./styleguide/usability/mentale-modelle/mentale-modelle.component.ts\": 7360,\n\t\"./styleguide/usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.html\": 6142,\n\t\"./styleguide/usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.ts\": 106,\n\t\"./styleguide/welcome/welcome.component.html\": 9633,\n\t\"./styleguide/welcome/welcome.component.ts\": 2150,\n\t\"src/app/app-nav.component.html\": 3288,\n\t\"src/app/app-nav.component.ts\": 9111,\n\t\"src/app/app.component.html\": 1106,\n\t\"src/app/app.component.ts\": 6023,\n\t\"src/app/bedag-components/alert/alert-list.component.ts\": 810,\n\t\"src/app/bedag-components/alert/alert.component.ts\": 8753,\n\t\"src/app/bedag-components/datepicker/datepicker.component.html\": 846,\n\t\"src/app/bedag-components/datepicker/datepicker.component.ts\": 5430,\n\t\"src/app/bedag-components/functionbar/functionbar-item/functionbar-item.component.ts\": 6357,\n\t\"src/app/bedag-components/functionbar/functionbar/functionbar.component.html\": 1266,\n\t\"src/app/bedag-components/functionbar/functionbar/functionbar.component.ts\": 1100,\n\t\"src/app/bedag-components/layout/custom-max-width-component.ts\": 4122,\n\t\"src/app/bedag-components/navigation/nav-item.component.html\": 7017,\n\t\"src/app/bedag-components/navigation/nav-item.component.ts\": 8243,\n\t\"src/app/bedag-components/navigation/nav-menu.component.ts\": 7989,\n\t\"src/app/styleguide/basics/colors/colors.component.html\": 1193,\n\t\"src/app/styleguide/basics/colors/colors.component.ts\": 9957,\n\t\"src/app/styleguide/basics/icons/icons.component.html\": 2988,\n\t\"src/app/styleguide/basics/icons/icons.component.ts\": 7615,\n\t\"src/app/styleguide/basics/logo/logo.component.html\": 5146,\n\t\"src/app/styleguide/basics/logo/logo.component.ts\": 1348,\n\t\"src/app/styleguide/basics/typography/typography.component.html\": 8031,\n\t\"src/app/styleguide/basics/typography/typography.component.ts\": 3233,\n\t\"src/app/styleguide/demo-utils/code-example/code-example.component.html\": 1243,\n\t\"src/app/styleguide/demo-utils/code-example/code-example.component.ts\": 5752,\n\t\"src/app/styleguide/layout/actionbar/actionbar-demo.component.html\": 9195,\n\t\"src/app/styleguide/layout/actionbar/actionbar-demo.component.ts\": 5077,\n\t\"src/app/styleguide/layout/breadcrumbs/breadcrumbs.component.html\": 4602,\n\t\"src/app/styleguide/layout/breadcrumbs/breadcrumbs.component.ts\": 742,\n\t\"src/app/styleguide/layout/functionbar/functionbar-demo.component.html\": 2278,\n\t\"src/app/styleguide/layout/functionbar/functionbar-demo.component.ts\": 8055,\n\t\"src/app/styleguide/layout/grid/grid.component.html\": 3733,\n\t\"src/app/styleguide/layout/grid/grid.component.ts\": 9042,\n\t\"src/app/styleguide/layout/header/header-demo.component.html\": 9297,\n\t\"src/app/styleguide/layout/header/header-demo.component.ts\": 7827,\n\t\"src/app/styleguide/layout/layout.component.html\": 3748,\n\t\"src/app/styleguide/layout/layout.component.ts\": 7999,\n\t\"src/app/styleguide/layout/navigation/navigation-demo.component.html\": 253,\n\t\"src/app/styleguide/layout/navigation/navigation-demo.component.ts\": 2507,\n\t\"src/app/styleguide/ui-elements/alerts/alert-buttons.component.ts\": 3570,\n\t\"src/app/styleguide/ui-elements/alerts/alerts.component.html\": 8777,\n\t\"src/app/styleguide/ui-elements/alerts/alerts.component.ts\": 9320,\n\t\"src/app/styleguide/ui-elements/badges/badges.component.html\": 1745,\n\t\"src/app/styleguide/ui-elements/badges/badges.component.ts\": 2899,\n\t\"src/app/styleguide/ui-elements/buttons/buttons.component.html\": 3739,\n\t\"src/app/styleguide/ui-elements/buttons/buttons.component.ts\": 8652,\n\t\"src/app/styleguide/ui-elements/datatables/data.ts\": 9492,\n\t\"src/app/styleguide/ui-elements/datatables/datatables.component.html\": 9266,\n\t\"src/app/styleguide/ui-elements/datatables/datatables.component.ts\": 9245,\n\t\"src/app/styleguide/ui-elements/dividers/dividers.component.html\": 4277,\n\t\"src/app/styleguide/ui-elements/dividers/dividers.component.ts\": 30,\n\t\"src/app/styleguide/ui-elements/dropdown-menu/dropdown-menu.component.html\": 2833,\n\t\"src/app/styleguide/ui-elements/dropdown-menu/dropdown-menu.component.ts\": 8105,\n\t\"src/app/styleguide/ui-elements/forms/autocompletion/autocompletion-demo.component.html\": 2681,\n\t\"src/app/styleguide/ui-elements/forms/autocompletion/autocompletion-demo.component.ts\": 4458,\n\t\"src/app/styleguide/ui-elements/forms/autocompletion/data.ts\": 6661,\n\t\"src/app/styleguide/ui-elements/forms/datepicker/datepicker-demo.component.html\": 5343,\n\t\"src/app/styleguide/ui-elements/forms/datepicker/datepicker-demo.component.ts\": 9967,\n\t\"src/app/styleguide/ui-elements/forms/forms.component.html\": 5913,\n\t\"src/app/styleguide/ui-elements/forms/forms.component.ts\": 8718,\n\t\"src/app/styleguide/ui-elements/forms/large-form-example/large-form-example.component.html\": 47,\n\t\"src/app/styleguide/ui-elements/forms/large-form-example/large-form-example.component.ts\": 8983,\n\t\"src/app/styleguide/ui-elements/forms/select-dropdowns/select-dropdowns.component.html\": 5173,\n\t\"src/app/styleguide/ui-elements/forms/select-dropdowns/select-dropdowns.component.ts\": 2723,\n\t\"src/app/styleguide/ui-elements/forms/small-form-example/small-form-example.component.html\": 9488,\n\t\"src/app/styleguide/ui-elements/forms/small-form-example/small-form-example.component.ts\": 7660,\n\t\"src/app/styleguide/ui-elements/links/links.component.html\": 308,\n\t\"src/app/styleguide/ui-elements/links/links.component.ts\": 5505,\n\t\"src/app/styleguide/ui-elements/modal-dialog/modal-dialog.component.html\": 736,\n\t\"src/app/styleguide/ui-elements/modal-dialog/modal-dialog.component.ts\": 3649,\n\t\"src/app/styleguide/ui-elements/overflow-menu/overflow-menu.component.html\": 6488,\n\t\"src/app/styleguide/ui-elements/overflow-menu/overflow-menu.component.ts\": 9048,\n\t\"src/app/styleguide/ui-elements/progress-indicators/progress-indicators.component.html\": 2690,\n\t\"src/app/styleguide/ui-elements/progress-indicators/progress-indicators.component.ts\": 8299,\n\t\"src/app/styleguide/ui-elements/tabs/tabs.component.html\": 6845,\n\t\"src/app/styleguide/ui-elements/tabs/tabs.component.ts\": 5178,\n\t\"src/app/styleguide/ui-elements/tooltips/tooltips.component.html\": 5862,\n\t\"src/app/styleguide/ui-elements/tooltips/tooltips.component.ts\": 7693,\n\t\"src/app/styleguide/usability/datenstruktur/datenstruktur.component.html\": 4052,\n\t\"src/app/styleguide/usability/datenstruktur/datenstruktur.component.ts\": 5697,\n\t\"src/app/styleguide/usability/mauswege/mauswege.component.html\": 5804,\n\t\"src/app/styleguide/usability/mauswege/mauswege.component.ts\": 3668,\n\t\"src/app/styleguide/usability/mentale-modelle/mentale-modelle.component.html\": 9679,\n\t\"src/app/styleguide/usability/mentale-modelle/mentale-modelle.component.ts\": 7360,\n\t\"src/app/styleguide/usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.html\": 6142,\n\t\"src/app/styleguide/usability/tastaturbedienbarkeit/tastaturbedienbarkeit.component.ts\": 106,\n\t\"src/app/styleguide/welcome/welcome.component.html\": 9633,\n\t\"src/app/styleguide/welcome/welcome.component.ts\": 2150\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5362;"],"sourceRoot":"webpack:///","file":"714.53acafbddf2a5cfd3b04.js"}